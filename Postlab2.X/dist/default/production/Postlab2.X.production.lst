

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jul 28 00:30:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56     0000                     
    57                           ; Version 2.40
    58                           ; Generated 17/11/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92     0000                     	;# 
    93     0001                     	;# 
    94     0002                     	;# 
    95     0003                     	;# 
    96     0004                     	;# 
    97     0005                     	;# 
    98     0006                     	;# 
    99     0007                     	;# 
   100     0008                     	;# 
   101     0009                     	;# 
   102     000A                     	;# 
   103     000B                     	;# 
   104     000C                     	;# 
   105     000D                     	;# 
   106     000E                     	;# 
   107     000E                     	;# 
   108     000F                     	;# 
   109     0010                     	;# 
   110     0011                     	;# 
   111     0012                     	;# 
   112     0013                     	;# 
   113     0014                     	;# 
   114     0015                     	;# 
   115     0015                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001B                     	;# 
   122     001B                     	;# 
   123     001C                     	;# 
   124     001D                     	;# 
   125     001E                     	;# 
   126     001F                     	;# 
   127     0081                     	;# 
   128     0085                     	;# 
   129     0086                     	;# 
   130     0087                     	;# 
   131     0088                     	;# 
   132     0089                     	;# 
   133     008C                     	;# 
   134     008D                     	;# 
   135     008E                     	;# 
   136     008F                     	;# 
   137     0090                     	;# 
   138     0091                     	;# 
   139     0092                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0093                     	;# 
   143     0094                     	;# 
   144     0095                     	;# 
   145     0096                     	;# 
   146     0097                     	;# 
   147     0098                     	;# 
   148     0099                     	;# 
   149     009A                     	;# 
   150     009B                     	;# 
   151     009C                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     009F                     	;# 
   155     0105                     	;# 
   156     0107                     	;# 
   157     0108                     	;# 
   158     0109                     	;# 
   159     010C                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     0185                     	;# 
   165     0187                     	;# 
   166     0188                     	;# 
   167     0189                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0000                     	;# 
   171     0001                     	;# 
   172     0002                     	;# 
   173     0003                     	;# 
   174     0004                     	;# 
   175     0005                     	;# 
   176     0006                     	;# 
   177     0007                     	;# 
   178     0008                     	;# 
   179     0009                     	;# 
   180     000A                     	;# 
   181     000B                     	;# 
   182     000C                     	;# 
   183     000D                     	;# 
   184     000E                     	;# 
   185     000E                     	;# 
   186     000F                     	;# 
   187     0010                     	;# 
   188     0011                     	;# 
   189     0012                     	;# 
   190     0013                     	;# 
   191     0014                     	;# 
   192     0015                     	;# 
   193     0015                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001B                     	;# 
   201     001C                     	;# 
   202     001D                     	;# 
   203     001E                     	;# 
   204     001F                     	;# 
   205     0081                     	;# 
   206     0085                     	;# 
   207     0086                     	;# 
   208     0087                     	;# 
   209     0088                     	;# 
   210     0089                     	;# 
   211     008C                     	;# 
   212     008D                     	;# 
   213     008E                     	;# 
   214     008F                     	;# 
   215     0090                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0095                     	;# 
   223     0096                     	;# 
   224     0097                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009A                     	;# 
   228     009B                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     009F                     	;# 
   233     0105                     	;# 
   234     0107                     	;# 
   235     0108                     	;# 
   236     0109                     	;# 
   237     010C                     	;# 
   238     010C                     	;# 
   239     010D                     	;# 
   240     010E                     	;# 
   241     010F                     	;# 
   242     0185                     	;# 
   243     0187                     	;# 
   244     0188                     	;# 
   245     0189                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     000E                     	;# 
   263     000E                     	;# 
   264     000F                     	;# 
   265     0010                     	;# 
   266     0011                     	;# 
   267     0012                     	;# 
   268     0013                     	;# 
   269     0014                     	;# 
   270     0015                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0017                     	;# 
   274     0018                     	;# 
   275     0019                     	;# 
   276     001A                     	;# 
   277     001B                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     001D                     	;# 
   281     001E                     	;# 
   282     001F                     	;# 
   283     0081                     	;# 
   284     0085                     	;# 
   285     0086                     	;# 
   286     0087                     	;# 
   287     0088                     	;# 
   288     0089                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     008E                     	;# 
   292     008F                     	;# 
   293     0090                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0093                     	;# 
   299     0094                     	;# 
   300     0095                     	;# 
   301     0096                     	;# 
   302     0097                     	;# 
   303     0098                     	;# 
   304     0099                     	;# 
   305     009A                     	;# 
   306     009B                     	;# 
   307     009C                     	;# 
   308     009D                     	;# 
   309     009E                     	;# 
   310     009F                     	;# 
   311     0105                     	;# 
   312     0107                     	;# 
   313     0108                     	;# 
   314     0109                     	;# 
   315     010C                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     010F                     	;# 
   320     0185                     	;# 
   321     0187                     	;# 
   322     0188                     	;# 
   323     0189                     	;# 
   324     018C                     	;# 
   325     018D                     	;# 
   326     0000                     	;# 
   327     0001                     	;# 
   328     0002                     	;# 
   329     0003                     	;# 
   330     0004                     	;# 
   331     0005                     	;# 
   332     0006                     	;# 
   333     0007                     	;# 
   334     0008                     	;# 
   335     0009                     	;# 
   336     000A                     	;# 
   337     000B                     	;# 
   338     000C                     	;# 
   339     000D                     	;# 
   340     000E                     	;# 
   341     000E                     	;# 
   342     000F                     	;# 
   343     0010                     	;# 
   344     0011                     	;# 
   345     0012                     	;# 
   346     0013                     	;# 
   347     0014                     	;# 
   348     0015                     	;# 
   349     0015                     	;# 
   350     0016                     	;# 
   351     0017                     	;# 
   352     0018                     	;# 
   353     0019                     	;# 
   354     001A                     	;# 
   355     001B                     	;# 
   356     001B                     	;# 
   357     001C                     	;# 
   358     001D                     	;# 
   359     001E                     	;# 
   360     001F                     	;# 
   361     0081                     	;# 
   362     0085                     	;# 
   363     0086                     	;# 
   364     0087                     	;# 
   365     0088                     	;# 
   366     0089                     	;# 
   367     008C                     	;# 
   368     008D                     	;# 
   369     008E                     	;# 
   370     008F                     	;# 
   371     0090                     	;# 
   372     0091                     	;# 
   373     0092                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0093                     	;# 
   377     0094                     	;# 
   378     0095                     	;# 
   379     0096                     	;# 
   380     0097                     	;# 
   381     0098                     	;# 
   382     0099                     	;# 
   383     009A                     	;# 
   384     009B                     	;# 
   385     009C                     	;# 
   386     009D                     	;# 
   387     009E                     	;# 
   388     009F                     	;# 
   389     0105                     	;# 
   390     0107                     	;# 
   391     0108                     	;# 
   392     0109                     	;# 
   393     010C                     	;# 
   394     010C                     	;# 
   395     010D                     	;# 
   396     010E                     	;# 
   397     010F                     	;# 
   398     0185                     	;# 
   399     0187                     	;# 
   400     0188                     	;# 
   401     0189                     	;# 
   402     018C                     	;# 
   403     018D                     	;# 
   404     0000                     	;# 
   405     0001                     	;# 
   406     0002                     	;# 
   407     0003                     	;# 
   408     0004                     	;# 
   409     0005                     	;# 
   410     0006                     	;# 
   411     0007                     	;# 
   412     0008                     	;# 
   413     0009                     	;# 
   414     000A                     	;# 
   415     000B                     	;# 
   416     000C                     	;# 
   417     000D                     	;# 
   418     000E                     	;# 
   419     000E                     	;# 
   420     000F                     	;# 
   421     0010                     	;# 
   422     0011                     	;# 
   423     0012                     	;# 
   424     0013                     	;# 
   425     0014                     	;# 
   426     0015                     	;# 
   427     0015                     	;# 
   428     0016                     	;# 
   429     0017                     	;# 
   430     0018                     	;# 
   431     0019                     	;# 
   432     001A                     	;# 
   433     001B                     	;# 
   434     001B                     	;# 
   435     001C                     	;# 
   436     001D                     	;# 
   437     001E                     	;# 
   438     001F                     	;# 
   439     0081                     	;# 
   440     0085                     	;# 
   441     0086                     	;# 
   442     0087                     	;# 
   443     0088                     	;# 
   444     0089                     	;# 
   445     008C                     	;# 
   446     008D                     	;# 
   447     008E                     	;# 
   448     008F                     	;# 
   449     0090                     	;# 
   450     0091                     	;# 
   451     0092                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0093                     	;# 
   455     0094                     	;# 
   456     0095                     	;# 
   457     0096                     	;# 
   458     0097                     	;# 
   459     0098                     	;# 
   460     0099                     	;# 
   461     009A                     	;# 
   462     009B                     	;# 
   463     009C                     	;# 
   464     009D                     	;# 
   465     009E                     	;# 
   466     009F                     	;# 
   467     0105                     	;# 
   468     0107                     	;# 
   469     0108                     	;# 
   470     0109                     	;# 
   471     010C                     	;# 
   472     010C                     	;# 
   473     010D                     	;# 
   474     010E                     	;# 
   475     010F                     	;# 
   476     0185                     	;# 
   477     0187                     	;# 
   478     0188                     	;# 
   479     0189                     	;# 
   480     018C                     	;# 
   481     018D                     	;# 
   482                           
   483                           	psect	strings
   484     1000                     __pstrings:
   485     1000                     stringtab:
   486     1000                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489     1000  1BFF               	btfsc	btemp+1,7
   490     1001  280A               	ljmp	stringcode
   491     1002  1383               	bcf	3,7
   492     1003  187F               	btfsc	btemp+1,0
   493     1004  1783               	bsf	3,7
   494     1005  0800               	movf	0,w
   495     1006  0A84               	incf	4,f
   496     1007  1903               	skipnz
   497     1008  0AFF               	incf	btemp+1,f
   498     1009  0008               	return
   499     100A                     stringcode:
   500     100A                     stringdir:
   501     100A  3010               	movlw	high stringdir
   502     100B  008A               	movwf	10
   503     100C  0804               	movf	4,w
   504     100D  0A84               	incf	4,f
   505     100E  0782               	addwf	2,f
   506     100F                     __stringbase:
   507     100F  3400               	retlw	0
   508     1010                     __end_of__stringtab:
   509     1010                     __powers_:
   510     1010  3400               	retlw	0
   511     1011  3400               	retlw	0
   512     1012  3480               	retlw	128
   513     1013  343F               	retlw	63
   514     1014  3400               	retlw	0
   515     1015  3400               	retlw	0
   516     1016  3420               	retlw	32
   517     1017  3441               	retlw	65
   518     1018  3400               	retlw	0
   519     1019  3400               	retlw	0
   520     101A  34C8               	retlw	200
   521     101B  3442               	retlw	66
   522     101C  3400               	retlw	0
   523     101D  3400               	retlw	0
   524     101E  347A               	retlw	122
   525     101F  3444               	retlw	68
   526     1020  3400               	retlw	0
   527     1021  3440               	retlw	64
   528     1022  341C               	retlw	28
   529     1023  3446               	retlw	70
   530     1024  3400               	retlw	0
   531     1025  3450               	retlw	80
   532     1026  34C3               	retlw	195
   533     1027  3447               	retlw	71
   534     1028  3400               	retlw	0
   535     1029  3424               	retlw	36
   536     102A  3474               	retlw	116
   537     102B  3449               	retlw	73
   538     102C  3480               	retlw	128
   539     102D  3496               	retlw	150
   540     102E  3418               	retlw	24
   541     102F  344B               	retlw	75
   542     1030  3420               	retlw	32
   543     1031  34BC               	retlw	188
   544     1032  34BE               	retlw	190
   545     1033  344C               	retlw	76
   546     1034  3428               	retlw	40
   547     1035  346B               	retlw	107
   548     1036  346E               	retlw	110
   549     1037  344E               	retlw	78
   550     1038  34F9               	retlw	249
   551     1039  3402               	retlw	2
   552     103A  3415               	retlw	21
   553     103B  3450               	retlw	80
   554     103C  34EC               	retlw	236
   555     103D  3478               	retlw	120
   556     103E  34AD               	retlw	173
   557     103F  3460               	retlw	96
   558     1040  34CA               	retlw	202
   559     1041  34F2               	retlw	242
   560     1042  3449               	retlw	73
   561     1043  3471               	retlw	113
   562     1044                     __end_of__powers_:
   563     1044                     __npowers_:
   564     1044  3400               	retlw	0
   565     1045  3400               	retlw	0
   566     1046  3480               	retlw	128
   567     1047  343F               	retlw	63
   568     1048  34CD               	retlw	205
   569     1049  34CC               	retlw	204
   570     104A  34CC               	retlw	204
   571     104B  343D               	retlw	61
   572     104C  340A               	retlw	10
   573     104D  34D7               	retlw	215
   574     104E  3423               	retlw	35
   575     104F  343C               	retlw	60
   576     1050  346F               	retlw	111
   577     1051  3412               	retlw	18
   578     1052  3483               	retlw	131
   579     1053  343A               	retlw	58
   580     1054  3417               	retlw	23
   581     1055  34B7               	retlw	183
   582     1056  34D1               	retlw	209
   583     1057  3438               	retlw	56
   584     1058  34AC               	retlw	172
   585     1059  34C5               	retlw	197
   586     105A  3427               	retlw	39
   587     105B  3437               	retlw	55
   588     105C  34BD               	retlw	189
   589     105D  3437               	retlw	55
   590     105E  3486               	retlw	134
   591     105F  3435               	retlw	53
   592     1060  3495               	retlw	149
   593     1061  34BF               	retlw	191
   594     1062  34D6               	retlw	214
   595     1063  3433               	retlw	51
   596     1064  3477               	retlw	119
   597     1065  34CC               	retlw	204
   598     1066  342B               	retlw	43
   599     1067  3432               	retlw	50
   600     1068  345F               	retlw	95
   601     1069  3470               	retlw	112
   602     106A  3489               	retlw	137
   603     106B  3430               	retlw	48
   604     106C  34FF               	retlw	255
   605     106D  34E6               	retlw	230
   606     106E  34DB               	retlw	219
   607     106F  342E               	retlw	46
   608     1070  3408               	retlw	8
   609     1071  34E5               	retlw	229
   610     1072  343C               	retlw	60
   611     1073  341E               	retlw	30
   612     1074  3460               	retlw	96
   613     1075  3442               	retlw	66
   614     1076  34A2               	retlw	162
   615     1077  340D               	retlw	13
   616     1078                     __end_of__npowers_:
   617     1078                     _dpowers:
   618     1078  3401               	retlw	1
   619     1079  3400               	retlw	0
   620     107A  3400               	retlw	0
   621     107B  3400               	retlw	0
   622     107C  340A               	retlw	10
   623     107D  3400               	retlw	0
   624     107E  3400               	retlw	0
   625     107F  3400               	retlw	0
   626     1080  3464               	retlw	100
   627     1081  3400               	retlw	0
   628     1082  3400               	retlw	0
   629     1083  3400               	retlw	0
   630     1084  34E8               	retlw	232
   631     1085  3403               	retlw	3
   632     1086  3400               	retlw	0
   633     1087  3400               	retlw	0
   634     1088  3410               	retlw	16
   635     1089  3427               	retlw	39
   636     108A  3400               	retlw	0
   637     108B  3400               	retlw	0
   638     108C  34A0               	retlw	160
   639     108D  3486               	retlw	134
   640     108E  3401               	retlw	1
   641     108F  3400               	retlw	0
   642     1090  3440               	retlw	64
   643     1091  3442               	retlw	66
   644     1092  340F               	retlw	15
   645     1093  3400               	retlw	0
   646     1094  3480               	retlw	128
   647     1095  3496               	retlw	150
   648     1096  3498               	retlw	152
   649     1097  3400               	retlw	0
   650     1098  3400               	retlw	0
   651     1099  34E1               	retlw	225
   652     109A  34F5               	retlw	245
   653     109B  3405               	retlw	5
   654     109C  3400               	retlw	0
   655     109D  34CA               	retlw	202
   656     109E  349A               	retlw	154
   657     109F  343B               	retlw	59
   658     10A0                     __end_of_dpowers:
   659     001A                     _RCREG	set	26
   660     0018                     _RCSTAbits	set	24
   661     0019                     _TXREG	set	25
   662     000C                     _PIR1bits	set	12
   663     000B                     _INTCONbits	set	11
   664     0007                     _PORTC	set	7
   665     0009                     _PORTE	set	9
   666     0008                     _PORTD	set	8
   667     001E                     _ADRESH	set	30
   668     001F                     _ADCON0bits	set	31
   669     0049                     _RE1	set	73
   670     0048                     _RE0	set	72
   671     0047                     _RD7	set	71
   672     0046                     _RD6	set	70
   673     0045                     _RD5	set	69
   674     0044                     _RD4	set	68
   675     0043                     _RD3	set	67
   676     0042                     _RD2	set	66
   677     0041                     _RD1	set	65
   678     0040                     _RD0	set	64
   679     0064                     _TXIF	set	100
   680     0065                     _RCIF	set	101
   681     0098                     _TXSTAbits	set	152
   682     0099                     _SPBRG	set	153
   683     008C                     _PIE1bits	set	140
   684     0089                     _TRISE	set	137
   685     0088                     _TRISD	set	136
   686     0087                     _TRISCbits	set	135
   687     0085                     _TRISA	set	133
   688     0086                     _TRISBbits	set	134
   689     0089                     _TRISEbits	set	137
   690     0085                     _TRISAbits	set	133
   691     009F                     _ADCON1	set	159
   692     0187                     _BAUDCTLbits	set	391
   693     0189                     _ANSELH	set	393
   694     0188                     _ANSEL	set	392
   695     0189                     _ANSELHbits	set	393
   696     0188                     _ANSELbits	set	392
   697     10A0                     STR_1:
   698     10A0  3456               	retlw	86	;'V'
   699     10A1  3431               	retlw	49	;'1'
   700     10A2  3420               	retlw	32	;' '
   701     10A3  3420               	retlw	32	;' '
   702     10A4  3420               	retlw	32	;' '
   703     10A5  3456               	retlw	86	;'V'
   704     10A6  3432               	retlw	50	;'2'
   705     10A7  3420               	retlw	32	;' '
   706     10A8  3420               	retlw	32	;' '
   707     10A9  3420               	retlw	32	;' '
   708     10AA  3443               	retlw	67	;'C'
   709     10AB  344F               	retlw	79	;'O'
   710     10AC  344E               	retlw	78	;'N'
   711     10AD  3454               	retlw	84	;'T'
   712     10AE  3400               	retlw	0
   713     10AF                     STR_2:
   714     10AF  3425               	retlw	37	;'%'
   715     10B0  342E               	retlw	46	;'.'
   716     10B1  3432               	retlw	50	;'2'
   717     10B2  3466               	retlw	102	;'f'
   718     10B3  3420               	retlw	32	;' '
   719     10B4  3420               	retlw	32	;' '
   720     10B5  3425               	retlw	37	;'%'
   721     10B6  342E               	retlw	46	;'.'
   722     10B7  3432               	retlw	50	;'2'
   723     10B8  3466               	retlw	102	;'f'
   724     10B9  3420               	retlw	32	;' '
   725     10BA  3420               	retlw	32	;' '
   726     10BB  3425               	retlw	37	;'%'
   727     10BC  3464               	retlw	100	;'d'
   728     10BD  3400               	retlw	0
   729                           
   730                           	psect	cinit
   731     000F                     start_initialization:	
   732                           ; #config settings
   733                           
   734     000F                     __initialization:
   735                           
   736                           ; Clear objects allocated to COMMON
   737     000F  01FB               	clrf	__pbssCOMMON& (0+127)
   738                           
   739                           ; Clear objects allocated to BANK1
   740     0010  1383               	bcf	3,7	;select IRP bank0
   741     0011  30D0               	movlw	low __pbssBANK1
   742     0012  0084               	movwf	4
   743     0013  30EF               	movlw	low (__pbssBANK1+31)
   744     0014  160A  158A  219D  120A  118A  	fcall	clear_ram0
   745     0019                     end_of_initialization:	
   746                           ;End of C runtime variable initialization code
   747                           
   748     0019                     __end_of__initialization:
   749     0019  0183               	clrf	3
   750     001A  120A  158A  2832   	ljmp	_main	;jump to C main() function
   751                           
   752                           	psect	bssCOMMON
   753     007B                     __pbssCOMMON:
   754     007B                     _lectura:
   755     007B                     	ds	1
   756                           
   757                           	psect	bssBANK1
   758     00D0                     __pbssBANK1:
   759     00D0                     _num2:
   760     00D0                     	ds	4
   761     00D4                     _num1:
   762     00D4                     	ds	4
   763     00D8                     _num:
   764     00D8                     	ds	1
   765     00D9                     _adc1:
   766     00D9                     	ds	1
   767     00DA                     _adc0:
   768     00DA                     	ds	1
   769     00DB                     _BUFFER:
   770     00DB                     	ds	20
   771                           
   772                           	psect	clrtext
   773     199D                     clear_ram0:	
   774                           ;	Called with FSR containing the base address, and
   775                           ;	W with the last address+1
   776                           
   777     199D  0064               	clrwdt	;clear the watchdog before getting into this loop
   778     199E                     clrloop0:
   779     199E  0180               	clrf	0	;clear RAM location pointed to by FSR
   780     199F  0A84               	incf	4,f	;increment pointer
   781     19A0  0604               	xorwf	4,w	;XOR with final address
   782     19A1  1903               	btfsc	3,2	;have we reached the end yet?
   783     19A2  3400               	retlw	0	;all done for this memory range, return
   784     19A3  0604               	xorwf	4,w	;XOR again to restore value
   785     19A4  299E               	goto	clrloop0	;do the next byte
   786                           
   787                           	psect	cstackBANK1
   788     00A0                     __pcstackBANK1:
   789     00A0                     ?___flsub:
   790     00A0                     ___flsub@a:	
   791                           ; 4 bytes @ 0x0
   792                           
   793                           
   794                           ; 4 bytes @ 0x0
   795     00A0                     	ds	4
   796     00A4                     ___flsub@b:
   797                           
   798                           ; 4 bytes @ 0x4
   799     00A4                     	ds	4
   800     00A8                     ?_sprintf:
   801     00A8                     sprintf@f:	
   802                           ; 2 bytes @ 0x8
   803                           
   804                           
   805                           ; 1 bytes @ 0x8
   806     00A8                     	ds	11
   807     00B3                     _sprintf$1273:
   808                           
   809                           ; 4 bytes @ 0x13
   810     00B3                     	ds	4
   811     00B7                     sprintf@ap:
   812                           
   813                           ; 1 bytes @ 0x17
   814     00B7                     	ds	1
   815     00B8                     sprintf@flag:
   816                           
   817                           ; 2 bytes @ 0x18
   818     00B8                     	ds	2
   819     00BA                     sprintf@eexp:
   820                           
   821                           ; 2 bytes @ 0x1A
   822     00BA                     	ds	2
   823     00BC                     sprintf@tmpval:
   824                           
   825                           ; 4 bytes @ 0x1C
   826     00BC                     	ds	4
   827     00C0                     sprintf@val:
   828                           
   829                           ; 4 bytes @ 0x20
   830     00C0                     	ds	4
   831     00C4                     sprintf@sp:
   832                           
   833                           ; 1 bytes @ 0x24
   834     00C4                     	ds	1
   835     00C5                     sprintf@fval:
   836                           
   837                           ; 4 bytes @ 0x25
   838     00C5                     	ds	4
   839     00C9                     sprintf@prec:
   840                           
   841                           ; 2 bytes @ 0x29
   842     00C9                     	ds	2
   843     00CB                     sprintf@c:
   844                           
   845                           ; 1 bytes @ 0x2B
   846     00CB                     	ds	1
   847     00CC                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x2C
   850     00CC                     	ds	4
   851                           
   852                           	psect	cstackCOMMON
   853     0070                     __pcstackCOMMON:
   854     0070                     ?_isdigit:
   855     0070                     ?_LEER:	
   856                           ; 1 bit 
   857                           
   858     0070                     ??_LEER:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_config:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_baud:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_config_tx:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_config_rx:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_configLCD:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_limpiar:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_ESCString:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?_ESC:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ?_configADC:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?_isr:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ??_isr:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?_main:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_pin:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ?_CMDs:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_ESCchar:	
   904                           ; 1 bytes @ 0x0
   905                           
   906                           
   907                           ; 1 bytes @ 0x0
   908     0070                     	ds	2
   909     0072                     ?___fleq:
   910     0072                     ?___flge:	
   911                           ; 1 bit 
   912                           
   913     0072                     ??_config:	
   914                           ; 1 bit 
   915                           
   916     0072                     ??_baud:	
   917                           ; 1 bytes @ 0x2
   918                           
   919     0072                     ??_config_tx:	
   920                           ; 1 bytes @ 0x2
   921                           
   922     0072                     ??_config_rx:	
   923                           ; 1 bytes @ 0x2
   924                           
   925     0072                     ??_ESC:	
   926                           ; 1 bytes @ 0x2
   927                           
   928     0072                     ??_isdigit:	
   929                           ; 1 bytes @ 0x2
   930                           
   931     0072                     ??_configADC:	
   932                           ; 1 bytes @ 0x2
   933                           
   934     0072                     ??_pin:	
   935                           ; 1 bytes @ 0x2
   936                           
   937     0072                     ?__Umul8_16:	
   938                           ; 1 bytes @ 0x2
   939                           
   940     0072                     ?___wmul:	
   941                           ; 2 bytes @ 0x2
   942                           
   943     0072                     ?___awmod:	
   944                           ; 2 bytes @ 0x2
   945                           
   946     0072                     ?___lwmod:	
   947                           ; 2 bytes @ 0x2
   948                           
   949     0072                     ?__tdiv_to_l_:	
   950                           ; 2 bytes @ 0x2
   951                           
   952     0072                     ?__div_to_l_:	
   953                           ; 4 bytes @ 0x2
   954                           
   955     0072                     ?___lldiv:	
   956                           ; 4 bytes @ 0x2
   957                           
   958     0072                     ?___flneg:	
   959                           ; 4 bytes @ 0x2
   960                           
   961     0072                     ?___xxtofl:	
   962                           ; 4 bytes @ 0x2
   963                           
   964     0072                     pin@a:	
   965                           ; 4 bytes @ 0x2
   966                           
   967     0072                     ESC@a:	
   968                           ; 1 bytes @ 0x2
   969                           
   970     0072                     __Umul8_16@multiplicand:	
   971                           ; 1 bytes @ 0x2
   972                           
   973     0072                     _isdigit$1090:	
   974                           ; 1 bytes @ 0x2
   975                           
   976     0072                     ___wmul@multiplier:	
   977                           ; 1 bytes @ 0x2
   978                           
   979     0072                     ___awmod@divisor:	
   980                           ; 2 bytes @ 0x2
   981                           
   982     0072                     ___lwmod@divisor:	
   983                           ; 2 bytes @ 0x2
   984                           
   985     0072                     ___lldiv@divisor:	
   986                           ; 2 bytes @ 0x2
   987                           
   988     0072                     __div_to_l_@f1:	
   989                           ; 4 bytes @ 0x2
   990                           
   991     0072                     ___fleq@ff1:	
   992                           ; 4 bytes @ 0x2
   993                           
   994     0072                     ___flge@ff1:	
   995                           ; 4 bytes @ 0x2
   996                           
   997     0072                     ___flneg@f1:	
   998                           ; 4 bytes @ 0x2
   999                           
  1000     0072                     __tdiv_to_l_@f1:	
  1001                           ; 4 bytes @ 0x2
  1002                           
  1003     0072                     ___xxtofl@val:	
  1004                           ; 4 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x2
  1008     0072                     	ds	1
  1009     0073                     ??_ESCString:
  1010     0073                     ??_CMDs:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013     0073                     ??_ESCchar:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016     0073                     isdigit@c:	
  1017                           ; 1 bytes @ 0x3
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x3
  1021     0073                     	ds	1
  1022     0074                     ??__Umul8_16:
  1023     0074                     configADC@ch:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026     0074                     ESCchar@a:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029     0074                     ESCString@a:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032     0074                     ___wmul@multiplicand:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035     0074                     ___awmod@dividend:	
  1036                           ; 2 bytes @ 0x4
  1037                           
  1038     0074                     ___lwmod@dividend:	
  1039                           ; 2 bytes @ 0x4
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x4
  1043     0074                     	ds	1
  1044     0075                     ?_ESCLCD:
  1045     0075                     CMDs@a:	
  1046                           ; 1 bytes @ 0x5
  1047                           
  1048     0075                     ESCString@i:	
  1049                           ; 1 bytes @ 0x5
  1050                           
  1051     0075                     ESCLCD@a:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056     0075                     	ds	1
  1057     0076                     ??_configLCD:
  1058     0076                     ??_limpiar:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061     0076                     ?_cursor:	
  1062                           ; 1 bytes @ 0x6
  1063                           
  1064     0076                     ??___wmul:	
  1065                           ; 1 bytes @ 0x6
  1066                           
  1067     0076                     ??___awmod:	
  1068                           ; 1 bytes @ 0x6
  1069                           
  1070     0076                     ??___flneg:	
  1071                           ; 1 bytes @ 0x6
  1072                           
  1073     0076                     ??___lwmod:	
  1074                           ; 1 bytes @ 0x6
  1075                           
  1076     0076                     ??___xxtofl:	
  1077                           ; 1 bytes @ 0x6
  1078                           
  1079     0076                     cursor@b:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082     0076                     ___wmul@product:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085     0076                     __Umul8_16@product:	
  1086                           ; 2 bytes @ 0x6
  1087                           
  1088     0076                     ___lldiv@dividend:	
  1089                           ; 2 bytes @ 0x6
  1090                           
  1091     0076                     __div_to_l_@f2:	
  1092                           ; 4 bytes @ 0x6
  1093                           
  1094     0076                     ___fleq@ff2:	
  1095                           ; 4 bytes @ 0x6
  1096                           
  1097     0076                     ___flge@ff2:	
  1098                           ; 4 bytes @ 0x6
  1099                           
  1100     0076                     __tdiv_to_l_@f2:	
  1101                           ; 4 bytes @ 0x6
  1102                           
  1103                           
  1104                           ; 4 bytes @ 0x6
  1105     0076                     	ds	1
  1106     0077                     ??_cursor:
  1107     0077                     ??_ESCLCD:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110     0077                     cursor@a:	
  1111                           ; 1 bytes @ 0x7
  1112                           
  1113     0077                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x7
  1115                           
  1116     0077                     ___lwmod@counter:	
  1117                           ; 1 bytes @ 0x7
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x7
  1121     0077                     	ds	1
  1122     0078                     ??___lwdiv:
  1123     0078                     cursor@x:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126     0078                     ___awmod@sign:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129     0078                     __Umul8_16@word_mpld:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x8
  1134     0078                     	ds	1
  1135     0079                     ??___awdiv:
  1136                           
  1137                           ; 1 bytes @ 0x9
  1138     0079                     	ds	1
  1139     007A                     ??__div_to_l_:
  1140     007A                     ??___lldiv:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143     007A                     __Umul8_16@multiplier:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0xA
  1148     007A                     	ds	1
  1149     007B                     ??___flsub:
  1150                           
  1151                           	psect	cstackBANK0
  1152     0020                     __pcstackBANK0:	
  1153                           ; 1 bytes @ 0xB
  1154                           
  1155     0020                     ??__tdiv_to_l_:
  1156     0020                     ??___fleq:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159     0020                     ??___flge:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162     0020                     ?___awdiv:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165     0020                     ?___lwdiv:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168     0020                     ___xxtofl@sign:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171     0020                     ESCLCD@i:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174     0020                     ___awdiv@divisor:	
  1175                           ; 2 bytes @ 0x0
  1176                           
  1177     0020                     ___lwdiv@divisor:	
  1178                           ; 2 bytes @ 0x0
  1179                           
  1180     0020                     ___lldiv@quotient:	
  1181                           ; 2 bytes @ 0x0
  1182                           
  1183     0020                     __div_to_l_@quot:	
  1184                           ; 4 bytes @ 0x0
  1185                           
  1186                           
  1187                           ; 4 bytes @ 0x0
  1188     0020                     	ds	1
  1189     0021                     ___xxtofl@exp:
  1190                           
  1191                           ; 1 bytes @ 0x1
  1192     0021                     	ds	1
  1193     0022                     ___awdiv@dividend:
  1194     0022                     ___lwdiv@dividend:	
  1195                           ; 2 bytes @ 0x2
  1196                           
  1197     0022                     ___xxtofl@arg:	
  1198                           ; 2 bytes @ 0x2
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x2
  1202     0022                     	ds	1
  1203     0023                     __tdiv_to_l_@quot:
  1204                           
  1205                           ; 4 bytes @ 0x3
  1206     0023                     	ds	1
  1207     0024                     ___lldiv@counter:
  1208     0024                     ___awdiv@counter:	
  1209                           ; 1 bytes @ 0x4
  1210                           
  1211     0024                     __div_to_l_@cntr:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214     0024                     ___lwdiv@counter:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x4
  1219     0024                     	ds	1
  1220     0025                     ?___llmod:
  1221     0025                     ___awdiv@sign:	
  1222                           ; 4 bytes @ 0x5
  1223                           
  1224     0025                     __div_to_l_@exp1:	
  1225                           ; 1 bytes @ 0x5
  1226                           
  1227     0025                     ___lwdiv@quotient:	
  1228                           ; 1 bytes @ 0x5
  1229                           
  1230     0025                     ___llmod@divisor:	
  1231                           ; 2 bytes @ 0x5
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x5
  1235     0025                     	ds	1
  1236     0026                     ___awdiv@quotient:
  1237                           
  1238                           ; 2 bytes @ 0x6
  1239     0026                     	ds	1
  1240     0027                     __tdiv_to_l_@cntr:
  1241                           
  1242                           ; 1 bytes @ 0x7
  1243     0027                     	ds	1
  1244     0028                     ?___flmul:
  1245     0028                     __tdiv_to_l_@exp1:	
  1246                           ; 4 bytes @ 0x8
  1247                           
  1248     0028                     ___flmul@b:	
  1249                           ; 1 bytes @ 0x8
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x8
  1253     0028                     	ds	1
  1254     0029                     ___llmod@dividend:
  1255                           
  1256                           ; 4 bytes @ 0x9
  1257     0029                     	ds	3
  1258     002C                     ___flmul@a:
  1259                           
  1260                           ; 4 bytes @ 0xC
  1261     002C                     	ds	1
  1262     002D                     ??___llmod:
  1263                           
  1264                           ; 1 bytes @ 0xD
  1265     002D                     	ds	1
  1266     002E                     ___llmod@counter:
  1267                           
  1268                           ; 1 bytes @ 0xE
  1269     002E                     	ds	2
  1270     0030                     ??___flmul:
  1271                           
  1272                           ; 1 bytes @ 0x10
  1273     0030                     	ds	5
  1274     0035                     ___flmul@sign:
  1275                           
  1276                           ; 1 bytes @ 0x15
  1277     0035                     	ds	1
  1278     0036                     ___flmul@grs:
  1279                           
  1280                           ; 4 bytes @ 0x16
  1281     0036                     	ds	4
  1282     003A                     ___flmul@aexp:
  1283                           
  1284                           ; 1 bytes @ 0x1A
  1285     003A                     	ds	1
  1286     003B                     ___flmul@bexp:
  1287                           
  1288                           ; 1 bytes @ 0x1B
  1289     003B                     	ds	1
  1290     003C                     ___flmul@prod:
  1291                           
  1292                           ; 4 bytes @ 0x1C
  1293     003C                     	ds	4
  1294     0040                     ___flmul@temp:
  1295                           
  1296                           ; 2 bytes @ 0x20
  1297     0040                     	ds	2
  1298     0042                     ?_fround:
  1299     0042                     ?_scale:	
  1300                           ; 4 bytes @ 0x22
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x22
  1304     0042                     	ds	4
  1305     0046                     ??_fround:
  1306     0046                     ??_scale:	
  1307                           ; 1 bytes @ 0x26
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x26
  1311     0046                     	ds	7
  1312     004D                     _fround$1271:
  1313                           
  1314                           ; 4 bytes @ 0x2D
  1315     004D                     	ds	3
  1316     0050                     _scale$1272:
  1317                           
  1318                           ; 4 bytes @ 0x30
  1319     0050                     	ds	1
  1320     0051                     _fround$1270:
  1321                           
  1322                           ; 4 bytes @ 0x31
  1323     0051                     	ds	3
  1324     0054                     scale@scl:
  1325                           
  1326                           ; 1 bytes @ 0x34
  1327     0054                     	ds	1
  1328     0055                     ?___fltol:
  1329     0055                     fround@prec:	
  1330                           ; 4 bytes @ 0x35
  1331                           
  1332     0055                     ___fltol@f1:	
  1333                           ; 1 bytes @ 0x35
  1334                           
  1335                           
  1336                           ; 4 bytes @ 0x35
  1337     0055                     	ds	1
  1338     0056                     ?___fladd:
  1339     0056                     ___fladd@b:	
  1340                           ; 4 bytes @ 0x36
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x36
  1344     0056                     	ds	3
  1345     0059                     ??___fltol:
  1346                           
  1347                           ; 1 bytes @ 0x39
  1348     0059                     	ds	1
  1349     005A                     ___fladd@a:
  1350                           
  1351                           ; 4 bytes @ 0x3A
  1352     005A                     	ds	3
  1353     005D                     ___fltol@sign1:
  1354                           
  1355                           ; 1 bytes @ 0x3D
  1356     005D                     	ds	1
  1357     005E                     ??___fladd:
  1358     005E                     ___fltol@exp1:	
  1359                           ; 1 bytes @ 0x3E
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x3E
  1363     005E                     	ds	8
  1364     0066                     ___fladd@signs:
  1365                           
  1366                           ; 1 bytes @ 0x46
  1367     0066                     	ds	1
  1368     0067                     ___fladd@aexp:
  1369                           
  1370                           ; 1 bytes @ 0x47
  1371     0067                     	ds	1
  1372     0068                     ___fladd@bexp:
  1373                           
  1374                           ; 1 bytes @ 0x48
  1375     0068                     	ds	1
  1376     0069                     ___fladd@grs:
  1377                           
  1378                           ; 1 bytes @ 0x49
  1379     0069                     	ds	1
  1380     006A                     ??_sprintf:
  1381                           
  1382                           ; 1 bytes @ 0x4A
  1383     006A                     	ds	5
  1384                           
  1385                           	psect	maintext
  1386     0832                     __pmaintext:	
  1387 ;;
  1388 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1389 ;;
  1390 ;; *************** function _main *****************
  1391 ;; Defined at:
  1392 ;;		line 59 in file "lab2.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : B00/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          0       0       4       0       0
  1409 ;;      Totals:         0       0       4       0       0
  1410 ;;Total ram usage:        4 bytes
  1411 ;; Hardware stack levels required when called: 6
  1412 ;; This function calls:
  1413 ;;		_ESC
  1414 ;;		_ESCLCD
  1415 ;;		_ESCString
  1416 ;;		___flmul
  1417 ;;		___xxtofl
  1418 ;;		_baud
  1419 ;;		_config
  1420 ;;		_configADC
  1421 ;;		_configLCD
  1422 ;;		_config_rx
  1423 ;;		_config_tx
  1424 ;;		_cursor
  1425 ;;		_limpiar
  1426 ;;		_sprintf
  1427 ;; This function is called by:
  1428 ;;		Startup code after reset
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432     0832                     _main:	
  1433                           ;psect for function _main
  1434                           
  1435     0832                     l4193:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1438                           
  1439                           
  1440                           ;lab2.c: 60:     config();
  1441     0832  160A  158A  2223  120A  158A  	fcall	_config
  1442     0837                     l4195:
  1443                           
  1444                           ;lab2.c: 61:     baud();
  1445     0837  120A  158A  2001  120A  158A  	fcall	_baud
  1446     083C                     l4197:
  1447                           
  1448                           ;lab2.c: 62:     config_tx();
  1449     083C  160A  158A  21C7  120A  158A  	fcall	_config_tx
  1450     0841                     l4199:
  1451                           
  1452                           ;lab2.c: 63:     config_rx();
  1453     0841  160A  158A  2195  120A  158A  	fcall	_config_rx
  1454     0846                     l4201:
  1455                           
  1456                           ;lab2.c: 64:     configLCD();
  1457     0846  160A  158A  24E2  120A  158A  	fcall	_configLCD
  1458     084B                     l4203:
  1459                           
  1460                           ;lab2.c: 65:     limpiar();
  1461     084B  160A  158A  21BA  120A  158A  	fcall	_limpiar
  1462     0850                     l4205:
  1463                           
  1464                           ;lab2.c: 67:         limpiar();
  1465     0850  160A  158A  21BA  120A  158A  	fcall	_limpiar
  1466     0855                     l4207:
  1467                           
  1468                           ;lab2.c: 68:         cursor(1,1);
  1469     0855  01F6               	clrf	cursor@b
  1470     0856  0AF6               	incf	cursor@b,f
  1471     0857  3001               	movlw	1
  1472     0858  160A  158A  2261  120A  158A  	fcall	_cursor
  1473     085D                     l4209:
  1474                           
  1475                           ;lab2.c: 69:         ESCLCD("V1   V2   CONT");
  1476     085D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1477     085E  00F5               	movwf	ESCLCD@a
  1478     085F  3080               	movlw	128
  1479     0860  00F6               	movwf	ESCLCD@a+1
  1480     0861  160A  158A  2307  120A  158A  	fcall	_ESCLCD
  1481     0866                     l4211:
  1482                           
  1483                           ;lab2.c: 71:         adc0 = configADC(0);
  1484     0866  3000               	movlw	0
  1485     0867  160A  118A  221F  120A  158A  	fcall	_configADC
  1486     086C  1683               	bsf	3,5	;RP0=1, select bank1
  1487     086D  1303               	bcf	3,6	;RP1=0, select bank1
  1488     086E  00DA               	movwf	_adc0^(0+128)
  1489     086F                     l4213:
  1490                           
  1491                           ;lab2.c: 72:         adc1 = configADC(1);
  1492     086F  3001               	movlw	1
  1493     0870  160A  118A  221F  120A  158A  	fcall	_configADC
  1494     0875  1683               	bsf	3,5	;RP0=1, select bank1
  1495     0876  1303               	bcf	3,6	;RP1=0, select bank1
  1496     0877  00D9               	movwf	_adc1^(0+128)
  1497     0878                     l4215:
  1498                           
  1499                           ;lab2.c: 74:         num1 = adc0*0.0196;
  1500     0878  303C               	movlw	60
  1501     0879  1283               	bcf	3,5	;RP0=0, select bank0
  1502     087A  1303               	bcf	3,6	;RP1=0, select bank0
  1503     087B  00AB               	movwf	___flmul@b+3
  1504     087C  30A0               	movlw	160
  1505     087D  00AA               	movwf	___flmul@b+2
  1506     087E  3090               	movlw	144
  1507     087F  00A9               	movwf	___flmul@b+1
  1508     0880  302E               	movlw	46
  1509     0881  00A8               	movwf	___flmul@b
  1510     0882  1683               	bsf	3,5	;RP0=1, select bank1
  1511     0883  1303               	bcf	3,6	;RP1=0, select bank1
  1512     0884  085A               	movf	_adc0^(0+128),w
  1513     0885  00CC               	movwf	??_main^(0+128)
  1514     0886  01CD               	clrf	(??_main^(0+128)+1)
  1515     0887  01CE               	clrf	(??_main^(0+128)+2)
  1516     0888  01CF               	clrf	(??_main^(0+128)+3)
  1517     0889  084F               	movf	(??_main+3)^(0+128),w
  1518     088A  00F5               	movwf	___xxtofl@val+3
  1519     088B  084E               	movf	(??_main+2)^(0+128),w
  1520     088C  00F4               	movwf	___xxtofl@val+2
  1521     088D  084D               	movf	(??_main+1)^(0+128),w
  1522     088E  00F3               	movwf	___xxtofl@val+1
  1523     088F  084C               	movf	??_main^(0+128),w
  1524     0890  00F2               	movwf	___xxtofl@val
  1525     0891  3001               	movlw	1
  1526     0892  160A  118A  2165  120A  158A  	fcall	___xxtofl
  1527     0897  0875               	movf	?___xxtofl+3,w
  1528     0898  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0899  1303               	bcf	3,6	;RP1=0, select bank0
  1530     089A  00AF               	movwf	___flmul@a+3
  1531     089B  0874               	movf	?___xxtofl+2,w
  1532     089C  00AE               	movwf	___flmul@a+2
  1533     089D  0873               	movf	?___xxtofl+1,w
  1534     089E  00AD               	movwf	___flmul@a+1
  1535     089F  0872               	movf	?___xxtofl,w
  1536     08A0  00AC               	movwf	___flmul@a
  1537     08A1  120A  158A  2158  120A  158A  	fcall	___flmul
  1538     08A6  1283               	bcf	3,5	;RP0=0, select bank0
  1539     08A7  1303               	bcf	3,6	;RP1=0, select bank0
  1540     08A8  082B               	movf	?___flmul+3,w
  1541     08A9  1683               	bsf	3,5	;RP0=1, select bank1
  1542     08AA  1303               	bcf	3,6	;RP1=0, select bank1
  1543     08AB  00D7               	movwf	(_num1+3)^(0+128)
  1544     08AC  1283               	bcf	3,5	;RP0=0, select bank0
  1545     08AD  1303               	bcf	3,6	;RP1=0, select bank0
  1546     08AE  082A               	movf	?___flmul+2,w
  1547     08AF  1683               	bsf	3,5	;RP0=1, select bank1
  1548     08B0  1303               	bcf	3,6	;RP1=0, select bank1
  1549     08B1  00D6               	movwf	(_num1+2)^(0+128)
  1550     08B2  1283               	bcf	3,5	;RP0=0, select bank0
  1551     08B3  1303               	bcf	3,6	;RP1=0, select bank0
  1552     08B4  0829               	movf	?___flmul+1,w
  1553     08B5  1683               	bsf	3,5	;RP0=1, select bank1
  1554     08B6  1303               	bcf	3,6	;RP1=0, select bank1
  1555     08B7  00D5               	movwf	(_num1+1)^(0+128)
  1556     08B8  1283               	bcf	3,5	;RP0=0, select bank0
  1557     08B9  1303               	bcf	3,6	;RP1=0, select bank0
  1558     08BA  0828               	movf	?___flmul,w
  1559     08BB  1683               	bsf	3,5	;RP0=1, select bank1
  1560     08BC  1303               	bcf	3,6	;RP1=0, select bank1
  1561     08BD  00D4               	movwf	_num1^(0+128)
  1562     08BE                     l4217:
  1563                           
  1564                           ;lab2.c: 75:         num2 = adc1*0.0196;
  1565     08BE  303C               	movlw	60
  1566     08BF  1283               	bcf	3,5	;RP0=0, select bank0
  1567     08C0  1303               	bcf	3,6	;RP1=0, select bank0
  1568     08C1  00AB               	movwf	___flmul@b+3
  1569     08C2  30A0               	movlw	160
  1570     08C3  00AA               	movwf	___flmul@b+2
  1571     08C4  3090               	movlw	144
  1572     08C5  00A9               	movwf	___flmul@b+1
  1573     08C6  302E               	movlw	46
  1574     08C7  00A8               	movwf	___flmul@b
  1575     08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1576     08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1577     08CA  0859               	movf	_adc1^(0+128),w
  1578     08CB  00CC               	movwf	??_main^(0+128)
  1579     08CC  01CD               	clrf	(??_main^(0+128)+1)
  1580     08CD  01CE               	clrf	(??_main^(0+128)+2)
  1581     08CE  01CF               	clrf	(??_main^(0+128)+3)
  1582     08CF  084F               	movf	(??_main+3)^(0+128),w
  1583     08D0  00F5               	movwf	___xxtofl@val+3
  1584     08D1  084E               	movf	(??_main+2)^(0+128),w
  1585     08D2  00F4               	movwf	___xxtofl@val+2
  1586     08D3  084D               	movf	(??_main+1)^(0+128),w
  1587     08D4  00F3               	movwf	___xxtofl@val+1
  1588     08D5  084C               	movf	??_main^(0+128),w
  1589     08D6  00F2               	movwf	___xxtofl@val
  1590     08D7  3001               	movlw	1
  1591     08D8  160A  118A  2165  120A  158A  	fcall	___xxtofl
  1592     08DD  0875               	movf	?___xxtofl+3,w
  1593     08DE  1283               	bcf	3,5	;RP0=0, select bank0
  1594     08DF  1303               	bcf	3,6	;RP1=0, select bank0
  1595     08E0  00AF               	movwf	___flmul@a+3
  1596     08E1  0874               	movf	?___xxtofl+2,w
  1597     08E2  00AE               	movwf	___flmul@a+2
  1598     08E3  0873               	movf	?___xxtofl+1,w
  1599     08E4  00AD               	movwf	___flmul@a+1
  1600     08E5  0872               	movf	?___xxtofl,w
  1601     08E6  00AC               	movwf	___flmul@a
  1602     08E7  120A  158A  2158  120A  158A  	fcall	___flmul
  1603     08EC  1283               	bcf	3,5	;RP0=0, select bank0
  1604     08ED  1303               	bcf	3,6	;RP1=0, select bank0
  1605     08EE  082B               	movf	?___flmul+3,w
  1606     08EF  1683               	bsf	3,5	;RP0=1, select bank1
  1607     08F0  1303               	bcf	3,6	;RP1=0, select bank1
  1608     08F1  00D3               	movwf	(_num2+3)^(0+128)
  1609     08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1610     08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1611     08F4  082A               	movf	?___flmul+2,w
  1612     08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1613     08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1614     08F7  00D2               	movwf	(_num2+2)^(0+128)
  1615     08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1616     08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1617     08FA  0829               	movf	?___flmul+1,w
  1618     08FB  1683               	bsf	3,5	;RP0=1, select bank1
  1619     08FC  1303               	bcf	3,6	;RP1=0, select bank1
  1620     08FD  00D1               	movwf	(_num2+1)^(0+128)
  1621     08FE  1283               	bcf	3,5	;RP0=0, select bank0
  1622     08FF  1303               	bcf	3,6	;RP1=0, select bank0
  1623     0900  0828               	movf	?___flmul,w
  1624     0901  1683               	bsf	3,5	;RP0=1, select bank1
  1625     0902  1303               	bcf	3,6	;RP1=0, select bank1
  1626     0903  00D0               	movwf	_num2^(0+128)
  1627     0904                     l4219:
  1628                           
  1629                           ;lab2.c: 76:         sprintf(BUFFER, "%.2f  %.2f  %d" , num1,num2, num);
  1630     0904  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1631     0905  00A8               	movwf	sprintf@f^(0+128)
  1632     0906  0857               	movf	(_num1+3)^(0+128),w
  1633     0907  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1634     0908  0856               	movf	(_num1+2)^(0+128),w
  1635     0909  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1636     090A  0855               	movf	(_num1+1)^(0+128),w
  1637     090B  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1638     090C  0854               	movf	_num1^(0+128),w
  1639     090D  00A9               	movwf	(?_sprintf^(0+128)+1)
  1640     090E  0853               	movf	(_num2+3)^(0+128),w
  1641     090F  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1642     0910  0852               	movf	(_num2+2)^(0+128),w
  1643     0911  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1644     0912  0851               	movf	(_num2+1)^(0+128),w
  1645     0913  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1646     0914  0850               	movf	_num2^(0+128),w
  1647     0915  00AD               	movwf	(?_sprintf^(0+128)+5)
  1648     0916  0858               	movf	_num^(0+128),w
  1649     0917  00CC               	movwf	??_main^(0+128)
  1650     0918  01CD               	clrf	(??_main^(0+128)+1)
  1651     0919  084C               	movf	??_main^(0+128),w
  1652     091A  00B1               	movwf	(?_sprintf^(0+128)+9)
  1653     091B  084D               	movf	(??_main+1)^(0+128),w
  1654     091C  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1655     091D  30DB               	movlw	(low (_BUFFER| 0))& (0+255)
  1656     091E  160A  118A  2560  120A  158A  	fcall	_sprintf
  1657     0923                     l4221:
  1658                           
  1659                           ;lab2.c: 79:         cursor(2,1);
  1660     0923  01F6               	clrf	cursor@b
  1661     0924  0AF6               	incf	cursor@b,f
  1662     0925  3002               	movlw	2
  1663     0926  160A  158A  2261  120A  158A  	fcall	_cursor
  1664     092B                     l4223:
  1665                           
  1666                           ;lab2.c: 80:         ESCLCD(BUFFER);
  1667     092B  30DB               	movlw	(low (_BUFFER| 0))& (0+255)
  1668     092C  00F5               	movwf	ESCLCD@a
  1669     092D  3000               	movlw	0
  1670     092E  00F6               	movwf	ESCLCD@a+1
  1671     092F  160A  158A  2307  120A  158A  	fcall	_ESCLCD
  1672     0934                     l4225:
  1673                           
  1674                           ;lab2.c: 82:         ESCString(BUFFER);
  1675     0934  30DB               	movlw	(low (_BUFFER| 0))& (0+255)
  1676     0935  160A  158A  2205  120A  158A  	fcall	_ESCString
  1677     093A                     l4227:
  1678                           
  1679                           ;lab2.c: 83:         ESC(3);
  1680     093A  3003               	movlw	3
  1681     093B  160A  158A  21A5  120A  158A  	fcall	_ESC
  1682     0940                     l4229:
  1683                           
  1684                           ;lab2.c: 84:         ESC(10);
  1685     0940  300A               	movlw	10
  1686     0941  160A  158A  21A5  120A  158A  	fcall	_ESC
  1687     0946                     l4231:
  1688                           
  1689                           ;lab2.c: 85:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1690     0946  3002               	movlw	2
  1691     0947  1683               	bsf	3,5	;RP0=1, select bank1
  1692     0948  1303               	bcf	3,6	;RP1=0, select bank1
  1693     0949  00CE               	movwf	(??_main^(0+128)+2)
  1694     094A  3045               	movlw	69
  1695     094B  00CD               	movwf	(??_main^(0+128)+1)
  1696     094C  30A9               	movlw	169
  1697     094D  00CC               	movwf	??_main^(0+128)
  1698     094E                     u6457:
  1699     094E  0BCC               	decfsz	??_main^(0+128),f
  1700     094F  294E               	goto	u6457
  1701     0950  0BCD               	decfsz	(??_main^(0+128)+1),f
  1702     0951  294E               	goto	u6457
  1703     0952  0BCE               	decfsz	(??_main^(0+128)+2),f
  1704     0953  294E               	goto	u6457
  1705     0954  2850               	goto	l4205
  1706     0955  120A  118A  280C   	ljmp	start
  1707     0958                     __end_of_main:
  1708                           
  1709                           	psect	text1
  1710     1560                     __ptext1:	
  1711 ;; *************** function _sprintf *****************
  1712 ;; Defined at:
  1713 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  sp              1    wreg     PTR unsigned char 
  1716 ;;		 -> BUFFER(20), 
  1717 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1718 ;;		 -> STR_2(15), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1721 ;;		 -> BUFFER(20), 
  1722 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1723 ;;  val             4   32[BANK1 ] unsigned long 
  1724 ;;  tmpval          4   28[BANK1 ] struct .
  1725 ;;  prec            2   41[BANK1 ] int 
  1726 ;;  eexp            2   26[BANK1 ] int 
  1727 ;;  flag            2   24[BANK1 ] unsigned short 
  1728 ;;  cp              2    0        PTR const unsigned char 
  1729 ;;  len             2    0        unsigned int 
  1730 ;;  width           2    0        int 
  1731 ;;  c               1   43[BANK1 ] unsigned char 
  1732 ;;  ap              1   23[BANK1 ] PTR void [1]
  1733 ;;		 -> ?_sprintf(2), 
  1734 ;;  d               1    0        unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2    8[BANK1 ] int 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0      11       0       0
  1745 ;;      Locals:         0       0      25       0       0
  1746 ;;      Temps:          0       5       0       0       0
  1747 ;;      Totals:         0       5      36       0       0
  1748 ;;Total ram usage:       41 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 5
  1751 ;; This function calls:
  1752 ;;		___awdiv
  1753 ;;		___fladd
  1754 ;;		___fleq
  1755 ;;		___flge
  1756 ;;		___flmul
  1757 ;;		___flneg
  1758 ;;		___flsub
  1759 ;;		___fltol
  1760 ;;		___lldiv
  1761 ;;		___llmod
  1762 ;;		___wmul
  1763 ;;		___xxtofl
  1764 ;;		__div_to_l_
  1765 ;;		__tdiv_to_l_
  1766 ;;		_fround
  1767 ;;		_isdigit
  1768 ;;		_scale
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     1560                     _sprintf:	
  1775                           ;psect for function _sprintf
  1776                           
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1780                           ;sprintf@sp stored from wreg
  1781     1560  1683               	bsf	3,5	;RP0=1, select bank1
  1782     1561  1303               	bcf	3,6	;RP1=0, select bank1
  1783     1562  00C4               	movwf	sprintf@sp^(0+128)
  1784     1563                     l3955:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1787     1563  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1788     1564  00B7               	movwf	sprintf@ap^(0+128)
  1789     1565                     L1:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1792     1565  120A  118A  2D96   	goto	l4181
  1793     1568                     l3957:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1796     1568  3025               	movlw	37
  1797     1569  064B               	xorwf	sprintf@c^(0+128),w
  1798     156A  1903               	btfsc	3,2
  1799     156B  2D6D               	goto	u6041
  1800     156C  2D6E               	goto	u6040
  1801     156D                     u6041:
  1802     156D  2D7C               	goto	l3963
  1803     156E                     u6040:
  1804     156E                     l3959:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1807     156E  0844               	movf	sprintf@sp^(0+128),w
  1808     156F  0084               	movwf	4
  1809     1570  084B               	movf	sprintf@c^(0+128),w
  1810     1571  1383               	bcf	3,7	;select IRP bank0
  1811     1572  0080               	movwf	0
  1812     1573                     l3961:
  1813     1573  3001               	movlw	1
  1814     1574  1283               	bcf	3,5	;RP0=0, select bank0
  1815     1575  1303               	bcf	3,6	;RP1=0, select bank0
  1816     1576  00EA               	movwf	??_sprintf
  1817     1577  086A               	movf	??_sprintf,w
  1818     1578  1683               	bsf	3,5	;RP0=1, select bank1
  1819     1579  1303               	bcf	3,6	;RP1=0, select bank1
  1820     157A  07C4               	addwf	sprintf@sp^(0+128),f
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1823     157B  2D65               	goto	L1
  1824     157C                     l3963:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1827     157C  01B8               	clrf	sprintf@flag^(0+128)
  1828     157D  01B9               	clrf	(sprintf@flag+1)^(0+128)
  1829     157E                     l3965:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1832     157E  0828               	movf	sprintf@f^(0+128),w
  1833     157F  0084               	movwf	4
  1834     1580  160A  118A  200A  160A  118A  	fcall	stringdir
  1835     1585  3A2E               	xorlw	46
  1836     1586  1D03               	skipz
  1837     1587  2D89               	goto	u6051
  1838     1588  2D8A               	goto	u6050
  1839     1589                     u6051:
  1840     1589  2DDF               	goto	l3981
  1841     158A                     u6050:
  1842     158A                     l3967:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1845     158A  1739               	bsf	(sprintf@flag^(0+128)+1),6
  1846     158B                     l3969:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1849     158B  3001               	movlw	1
  1850     158C  1283               	bcf	3,5	;RP0=0, select bank0
  1851     158D  1303               	bcf	3,6	;RP1=0, select bank0
  1852     158E  00EA               	movwf	??_sprintf
  1853     158F  086A               	movf	??_sprintf,w
  1854     1590  1683               	bsf	3,5	;RP0=1, select bank1
  1855     1591  1303               	bcf	3,6	;RP1=0, select bank1
  1856     1592  07A8               	addwf	sprintf@f^(0+128),f
  1857     1593                     l3971:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1860     1593  01C9               	clrf	sprintf@prec^(0+128)
  1861     1594  01CA               	clrf	(sprintf@prec+1)^(0+128)
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1864     1595  2DCE               	goto	l3979
  1865     1596                     l3973:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1868     1596  300A               	movlw	10
  1869     1597  00F2               	movwf	___wmul@multiplier
  1870     1598  3000               	movlw	0
  1871     1599  00F3               	movwf	___wmul@multiplier+1
  1872     159A  1683               	bsf	3,5	;RP0=1, select bank1
  1873     159B  1303               	bcf	3,6	;RP1=0, select bank1
  1874     159C  084A               	movf	(sprintf@prec+1)^(0+128),w
  1875     159D  00F5               	movwf	___wmul@multiplicand+1
  1876     159E  0849               	movf	sprintf@prec^(0+128),w
  1877     159F  00F4               	movwf	___wmul@multiplicand
  1878     15A0  160A  158A  2281  160A  118A  	fcall	___wmul
  1879     15A5  0873               	movf	?___wmul+1,w
  1880     15A6  1683               	bsf	3,5	;RP0=1, select bank1
  1881     15A7  1303               	bcf	3,6	;RP1=0, select bank1
  1882     15A8  00CA               	movwf	(sprintf@prec+1)^(0+128)
  1883     15A9  0872               	movf	?___wmul,w
  1884     15AA  00C9               	movwf	sprintf@prec^(0+128)
  1885     15AB                     l3975:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1888     15AB  0828               	movf	sprintf@f^(0+128),w
  1889     15AC  0084               	movwf	4
  1890     15AD  160A  118A  200A  160A  118A  	fcall	stringdir
  1891     15B2  3ED0               	addlw	208
  1892     15B3  1283               	bcf	3,5	;RP0=0, select bank0
  1893     15B4  1303               	bcf	3,6	;RP1=0, select bank0
  1894     15B5  00EA               	movwf	??_sprintf
  1895     15B6  30FF               	movlw	255
  1896     15B7  1803               	skipnc
  1897     15B8  3000               	movlw	0
  1898     15B9  00EB               	movwf	??_sprintf+1
  1899     15BA  086A               	movf	??_sprintf,w
  1900     15BB  1683               	bsf	3,5	;RP0=1, select bank1
  1901     15BC  1303               	bcf	3,6	;RP1=0, select bank1
  1902     15BD  07C9               	addwf	sprintf@prec^(0+128),f
  1903     15BE  1803               	skipnc
  1904     15BF  0ACA               	incf	(sprintf@prec+1)^(0+128),f
  1905     15C0  1283               	bcf	3,5	;RP0=0, select bank0
  1906     15C1  1303               	bcf	3,6	;RP1=0, select bank0
  1907     15C2  086B               	movf	??_sprintf+1,w
  1908     15C3  1683               	bsf	3,5	;RP0=1, select bank1
  1909     15C4  1303               	bcf	3,6	;RP1=0, select bank1
  1910     15C5  07CA               	addwf	(sprintf@prec+1)^(0+128),f
  1911     15C6                     l3977:
  1912     15C6  3001               	movlw	1
  1913     15C7  1283               	bcf	3,5	;RP0=0, select bank0
  1914     15C8  1303               	bcf	3,6	;RP1=0, select bank0
  1915     15C9  00EA               	movwf	??_sprintf
  1916     15CA  086A               	movf	??_sprintf,w
  1917     15CB  1683               	bsf	3,5	;RP0=1, select bank1
  1918     15CC  1303               	bcf	3,6	;RP1=0, select bank1
  1919     15CD  07A8               	addwf	sprintf@f^(0+128),f
  1920     15CE                     l3979:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1923     15CE  0828               	movf	sprintf@f^(0+128),w
  1924     15CF  0084               	movwf	4
  1925     15D0  160A  118A  200A  160A  118A  	fcall	stringdir
  1926     15D5  160A  158A  21D7  160A  118A  	fcall	_isdigit
  1927     15DA  1803               	btfsc	3,0
  1928     15DB  2DDD               	goto	u6061
  1929     15DC  2DDE               	goto	u6060
  1930     15DD                     u6061:
  1931     15DD  2D96               	goto	l3973
  1932     15DE                     u6060:
  1933     15DE  2DE7               	goto	l3987
  1934     15DF                     l3981:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1937     15DF  01C9               	clrf	sprintf@prec^(0+128)
  1938     15E0  01CA               	clrf	(sprintf@prec+1)^(0+128)
  1939     15E1                     l3983:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1942     15E1  1639               	bsf	(sprintf@flag^(0+128)+1),4
  1943     15E2  2DE7               	goto	l3987
  1944     15E3                     l376:	
  1945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1946                           
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1949     15E3  1683               	bsf	3,5	;RP0=1, select bank1
  1950     15E4  1303               	bcf	3,6	;RP1=0, select bank1
  1951     15E5  1539               	bsf	(sprintf@flag^(0+128)+1),2
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1954     15E6  2E0B               	goto	l3989
  1955     15E7                     l3987:
  1956     15E7  3001               	movlw	1
  1957     15E8  1683               	bsf	3,5	;RP0=1, select bank1
  1958     15E9  1303               	bcf	3,6	;RP1=0, select bank1
  1959     15EA  07A8               	addwf	sprintf@f^(0+128),f
  1960     15EB  30FF               	movlw	-1
  1961     15EC  0728               	addwf	sprintf@f^(0+128),w
  1962     15ED  0084               	movwf	4
  1963     15EE  160A  118A  200A  160A  118A  	fcall	stringdir
  1964     15F3  00CB               	movwf	sprintf@c^(0+128)
  1965     15F4  1283               	bcf	3,5	;RP0=0, select bank0
  1966     15F5  1303               	bcf	3,6	;RP1=0, select bank0
  1967     15F6  00EA               	movwf	??_sprintf
  1968     15F7  01EB               	clrf	??_sprintf+1
  1969                           
  1970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1971                           ; Switch size 1, requested type "simple"
  1972                           ; Number of cases is 1, Range of values is 0 to 0
  1973                           ; switch strategies available:
  1974                           ; Name         Instructions Cycles
  1975                           ; simple_byte            4     3 (average)
  1976                           ; direct_byte           11     8 (fixed)
  1977                           ; jumptable            260     6 (fixed)
  1978                           ;	Chosen strategy is simple_byte
  1979     15F8  086B               	movf	??_sprintf+1,w
  1980     15F9  3A00               	xorlw	0	; case 0
  1981     15FA  1903               	skipnz
  1982     15FB  2DFD               	goto	l4293
  1983     15FC  2D65               	goto	L1
  1984     15FD                     l4293:
  1985                           
  1986                           ; Switch size 1, requested type "simple"
  1987                           ; Number of cases is 4, Range of values is 0 to 105
  1988                           ; switch strategies available:
  1989                           ; Name         Instructions Cycles
  1990                           ; simple_byte           13     7 (average)
  1991                           ; jumptable            260     6 (fixed)
  1992                           ;	Chosen strategy is simple_byte
  1993     15FD  086A               	movf	??_sprintf,w
  1994     15FE  3A00               	xorlw	0	; case 0
  1995     15FF  1903               	skipnz
  1996     1600  2FFD               	goto	L3
  1997     1601  3A64               	xorlw	100	; case 100
  1998     1602  1903               	skipnz
  1999     1603  2E0B               	goto	l3989
  2000     1604  3A02               	xorlw	2	; case 102
  2001     1605  1903               	skipnz
  2002     1606  2DE3               	goto	l376
  2003     1607  3A0F               	xorlw	15	; case 105
  2004     1608  1903               	skipnz
  2005     1609  2E0B               	goto	l3989
  2006     160A  2D65               	goto	L1
  2007     160B                     l3989:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2010     160B  3000               	movlw	0
  2011     160C  1683               	bsf	3,5	;RP0=1, select bank1
  2012     160D  1303               	bcf	3,6	;RP1=0, select bank1
  2013     160E  0538               	andwf	sprintf@flag^(0+128),w
  2014     160F  1283               	bcf	3,5	;RP0=0, select bank0
  2015     1610  1303               	bcf	3,6	;RP1=0, select bank0
  2016     1611  00EA               	movwf	??_sprintf
  2017     1612  3007               	movlw	7
  2018     1613  1683               	bsf	3,5	;RP0=1, select bank1
  2019     1614  1303               	bcf	3,6	;RP1=0, select bank1
  2020     1615  0539               	andwf	(sprintf@flag+1)^(0+128),w
  2021     1616  1283               	bcf	3,5	;RP0=0, select bank0
  2022     1617  1303               	bcf	3,6	;RP1=0, select bank0
  2023     1618  00EB               	movwf	??_sprintf+1
  2024     1619  086A               	movf	??_sprintf,w
  2025     161A  046B               	iorwf	??_sprintf+1,w
  2026     161B  1903               	btfsc	3,2
  2027     161C  2E1E               	goto	u6071
  2028     161D  2E21               	goto	u6070
  2029     161E                     u6071:
  2030     161E  120A  118A  2C34   	goto	l4131
  2031     1621                     u6070:
  2032     1621                     l3991:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2035     1621  1683               	bsf	3,5	;RP0=1, select bank1
  2036     1622  1303               	bcf	3,6	;RP1=0, select bank1
  2037     1623  1E39               	btfss	(sprintf@flag+1)^(0+128),4
  2038     1624  2E26               	goto	u6081
  2039     1625  2E27               	goto	u6080
  2040     1626                     u6081:
  2041     1626  2E2B               	goto	l3995
  2042     1627                     u6080:
  2043     1627                     l3993:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2046     1627  3006               	movlw	6
  2047     1628  00C9               	movwf	sprintf@prec^(0+128)
  2048     1629  3000               	movlw	0
  2049     162A  00CA               	movwf	(sprintf@prec^(0+128)+1)
  2050     162B                     l3995:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2053     162B  0837               	movf	sprintf@ap^(0+128),w
  2054     162C  0084               	movwf	4
  2055     162D  1383               	bcf	3,7	;select IRP bank0
  2056     162E  0800               	movf	0,w
  2057     162F  00C5               	movwf	sprintf@fval^(0+128)
  2058     1630  0A84               	incf	4,f
  2059     1631  0800               	movf	0,w
  2060     1632  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2061     1633  0A84               	incf	4,f
  2062     1634  0800               	movf	0,w
  2063     1635  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2064     1636  0A84               	incf	4,f
  2065     1637  0800               	movf	0,w
  2066     1638  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2067     1639                     l3997:
  2068     1639  3004               	movlw	4
  2069     163A  1283               	bcf	3,5	;RP0=0, select bank0
  2070     163B  1303               	bcf	3,6	;RP1=0, select bank0
  2071     163C  00EA               	movwf	??_sprintf
  2072     163D  086A               	movf	??_sprintf,w
  2073     163E  1683               	bsf	3,5	;RP0=1, select bank1
  2074     163F  1303               	bcf	3,6	;RP1=0, select bank1
  2075     1640  07B7               	addwf	sprintf@ap^(0+128),f
  2076     1641                     l3999:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2079     1641  0848               	movf	(sprintf@fval+3)^(0+128),w
  2080     1642  00F5               	movwf	___flge@ff1+3
  2081     1643  0847               	movf	(sprintf@fval+2)^(0+128),w
  2082     1644  00F4               	movwf	___flge@ff1+2
  2083     1645  0846               	movf	(sprintf@fval+1)^(0+128),w
  2084     1646  00F3               	movwf	___flge@ff1+1
  2085     1647  0845               	movf	sprintf@fval^(0+128),w
  2086     1648  00F2               	movwf	___flge@ff1
  2087     1649  3000               	movlw	0
  2088     164A  00F9               	movwf	___flge@ff2+3
  2089     164B  3000               	movlw	0
  2090     164C  00F8               	movwf	___flge@ff2+2
  2091     164D  3000               	movlw	0
  2092     164E  00F7               	movwf	___flge@ff2+1
  2093     164F  3000               	movlw	0
  2094     1650  00F6               	movwf	___flge@ff2
  2095     1651  160A  118A  20C1  160A  118A  	fcall	___flge
  2096     1656  1803               	btfsc	3,0
  2097     1657  2E59               	goto	u6091
  2098     1658  2E5A               	goto	u6090
  2099     1659                     u6091:
  2100     1659  2E77               	goto	l4005
  2101     165A                     u6090:
  2102     165A                     l4001:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2105     165A  1683               	bsf	3,5	;RP0=1, select bank1
  2106     165B  1303               	bcf	3,6	;RP1=0, select bank1
  2107     165C  0848               	movf	(sprintf@fval+3)^(0+128),w
  2108     165D  00F5               	movwf	___flneg@f1+3
  2109     165E  0847               	movf	(sprintf@fval+2)^(0+128),w
  2110     165F  00F4               	movwf	___flneg@f1+2
  2111     1660  0846               	movf	(sprintf@fval+1)^(0+128),w
  2112     1661  00F3               	movwf	___flneg@f1+1
  2113     1662  0845               	movf	sprintf@fval^(0+128),w
  2114     1663  00F2               	movwf	___flneg@f1
  2115     1664  160A  158A  21AF  160A  118A  	fcall	___flneg
  2116     1669  0875               	movf	?___flneg+3,w
  2117     166A  1683               	bsf	3,5	;RP0=1, select bank1
  2118     166B  1303               	bcf	3,6	;RP1=0, select bank1
  2119     166C  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2120     166D  0874               	movf	?___flneg+2,w
  2121     166E  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2122     166F  0873               	movf	?___flneg+1,w
  2123     1670  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2124     1671  0872               	movf	?___flneg,w
  2125     1672  00C5               	movwf	sprintf@fval^(0+128)
  2126     1673                     l4003:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2129     1673  3003               	movlw	3
  2130     1674  04B8               	iorwf	sprintf@flag^(0+128),f
  2131     1675  3000               	movlw	0
  2132     1676  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
  2133     1677                     l4005:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2136     1677  1683               	bsf	3,5	;RP0=1, select bank1
  2137     1678  1303               	bcf	3,6	;RP1=0, select bank1
  2138     1679  01BA               	clrf	sprintf@eexp^(0+128)
  2139     167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  2140     167B                     l4007:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2143     167B  0848               	movf	(sprintf@fval+3)^(0+128),w
  2144     167C  00F5               	movwf	___fleq@ff1+3
  2145     167D  0847               	movf	(sprintf@fval+2)^(0+128),w
  2146     167E  00F4               	movwf	___fleq@ff1+2
  2147     167F  0846               	movf	(sprintf@fval+1)^(0+128),w
  2148     1680  00F3               	movwf	___fleq@ff1+1
  2149     1681  0845               	movf	sprintf@fval^(0+128),w
  2150     1682  00F2               	movwf	___fleq@ff1
  2151     1683  3000               	movlw	0
  2152     1684  00F9               	movwf	___fleq@ff2+3
  2153     1685  3000               	movlw	0
  2154     1686  00F8               	movwf	___fleq@ff2+2
  2155     1687  3000               	movlw	0
  2156     1688  00F7               	movwf	___fleq@ff2+1
  2157     1689  3000               	movlw	0
  2158     168A  00F6               	movwf	___fleq@ff2
  2159     168B  160A  158A  2393  160A  118A  	fcall	___fleq
  2160     1690  1803               	btfsc	3,0
  2161     1691  2E93               	goto	u6101
  2162     1692  2E94               	goto	u6100
  2163     1693                     u6101:
  2164     1693  2F94               	goto	l4033
  2165     1694                     u6100:
  2166     1694                     l4009:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2169     1694  1003               	clrc
  2170     1695  1683               	bsf	3,5	;RP0=1, select bank1
  2171     1696  1303               	bcf	3,6	;RP1=0, select bank1
  2172     1697  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2173     1698  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2174     1699  3E82               	addlw	130
  2175     169A  00BA               	movwf	sprintf@eexp^(0+128)
  2176     169B  30FF               	movlw	255
  2177     169C  1803               	skipnc
  2178     169D  3000               	movlw	0
  2179     169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  2180     169F                     l4011:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2183     169F  30FF               	movlw	255
  2184     16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  2185     16A1  1803               	skipnc
  2186     16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2187     16A3  30FF               	movlw	255
  2188     16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2189     16A5                     l4013:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2192     16A5  3003               	movlw	3
  2193     16A6  00F2               	movwf	___wmul@multiplier
  2194     16A7  3000               	movlw	0
  2195     16A8  00F3               	movwf	___wmul@multiplier+1
  2196     16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2197     16AA  00F5               	movwf	___wmul@multiplicand+1
  2198     16AB  083A               	movf	sprintf@eexp^(0+128),w
  2199     16AC  00F4               	movwf	___wmul@multiplicand
  2200     16AD  160A  158A  2281  160A  118A  	fcall	___wmul
  2201     16B2  0873               	movf	?___wmul+1,w
  2202     16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2203     16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2204     16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2205     16B6  0872               	movf	?___wmul,w
  2206     16B7  00BA               	movwf	sprintf@eexp^(0+128)
  2207     16B8                     l4015:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2210     16B8  300A               	movlw	10
  2211     16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2212     16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2213     16BB  00A0               	movwf	___awdiv@divisor
  2214     16BC  3000               	movlw	0
  2215     16BD  00A1               	movwf	___awdiv@divisor+1
  2216     16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2217     16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2218     16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2219     16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2220     16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2221     16C3  00A3               	movwf	___awdiv@dividend+1
  2222     16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2223     16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2224     16C6  083A               	movf	sprintf@eexp^(0+128),w
  2225     16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2226     16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2227     16C9  00A2               	movwf	___awdiv@dividend
  2228     16CA  160A  158A  25B0  160A  118A  	fcall	___awdiv
  2229     16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2230     16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2231     16D1  0821               	movf	?___awdiv+1,w
  2232     16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2233     16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2234     16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  2235     16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2236     16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2237     16D7  0820               	movf	?___awdiv,w
  2238     16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2239     16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2240     16DA  00BA               	movwf	sprintf@eexp^(0+128)
  2241     16DB                     l4017:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2244     16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  2245     16DC  2EDE               	goto	u6111
  2246     16DD  2EDF               	goto	u6110
  2247     16DE                     u6111:
  2248     16DE  2EE5               	goto	l4021
  2249     16DF                     u6110:
  2250     16DF                     l4019:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2253     16DF  30FF               	movlw	255
  2254     16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  2255     16E1  1803               	skipnc
  2256     16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2257     16E3  30FF               	movlw	255
  2258     16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2259     16E5                     l4021:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2262     16E5  033A               	decf	sprintf@eexp^(0+128),w
  2263     16E6  3AFF               	xorlw	255
  2264     16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2265     16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2266     16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2267     16EE  0845               	movf	?_scale+3,w
  2268     16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2269     16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2270     16F1  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2271     16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2272     16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2273     16F4  0844               	movf	?_scale+2,w
  2274     16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2275     16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2276     16F7  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2277     16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2278     16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2279     16FA  0843               	movf	?_scale+1,w
  2280     16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2281     16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2282     16FD  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2283     16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2284     16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2285     1700  0842               	movf	?_scale,w
  2286     1701  1683               	bsf	3,5	;RP0=1, select bank1
  2287     1702  1303               	bcf	3,6	;RP1=0, select bank1
  2288     1703  00BC               	movwf	sprintf@tmpval^(0+128)
  2289     1704                     l4023:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2292     1704  0848               	movf	(sprintf@fval+3)^(0+128),w
  2293     1705  1283               	bcf	3,5	;RP0=0, select bank0
  2294     1706  1303               	bcf	3,6	;RP1=0, select bank0
  2295     1707  00AB               	movwf	___flmul@b+3
  2296     1708  1683               	bsf	3,5	;RP0=1, select bank1
  2297     1709  1303               	bcf	3,6	;RP1=0, select bank1
  2298     170A  0847               	movf	(sprintf@fval+2)^(0+128),w
  2299     170B  1283               	bcf	3,5	;RP0=0, select bank0
  2300     170C  1303               	bcf	3,6	;RP1=0, select bank0
  2301     170D  00AA               	movwf	___flmul@b+2
  2302     170E  1683               	bsf	3,5	;RP0=1, select bank1
  2303     170F  1303               	bcf	3,6	;RP1=0, select bank1
  2304     1710  0846               	movf	(sprintf@fval+1)^(0+128),w
  2305     1711  1283               	bcf	3,5	;RP0=0, select bank0
  2306     1712  1303               	bcf	3,6	;RP1=0, select bank0
  2307     1713  00A9               	movwf	___flmul@b+1
  2308     1714  1683               	bsf	3,5	;RP0=1, select bank1
  2309     1715  1303               	bcf	3,6	;RP1=0, select bank1
  2310     1716  0845               	movf	sprintf@fval^(0+128),w
  2311     1717  1283               	bcf	3,5	;RP0=0, select bank0
  2312     1718  1303               	bcf	3,6	;RP1=0, select bank0
  2313     1719  00A8               	movwf	___flmul@b
  2314     171A  1683               	bsf	3,5	;RP0=1, select bank1
  2315     171B  1303               	bcf	3,6	;RP1=0, select bank1
  2316     171C  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2317     171D  1283               	bcf	3,5	;RP0=0, select bank0
  2318     171E  1303               	bcf	3,6	;RP1=0, select bank0
  2319     171F  00AF               	movwf	___flmul@a+3
  2320     1720  1683               	bsf	3,5	;RP0=1, select bank1
  2321     1721  1303               	bcf	3,6	;RP1=0, select bank1
  2322     1722  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2323     1723  1283               	bcf	3,5	;RP0=0, select bank0
  2324     1724  1303               	bcf	3,6	;RP1=0, select bank0
  2325     1725  00AE               	movwf	___flmul@a+2
  2326     1726  1683               	bsf	3,5	;RP0=1, select bank1
  2327     1727  1303               	bcf	3,6	;RP1=0, select bank1
  2328     1728  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2329     1729  1283               	bcf	3,5	;RP0=0, select bank0
  2330     172A  1303               	bcf	3,6	;RP1=0, select bank0
  2331     172B  00AD               	movwf	___flmul@a+1
  2332     172C  1683               	bsf	3,5	;RP0=1, select bank1
  2333     172D  1303               	bcf	3,6	;RP1=0, select bank1
  2334     172E  083C               	movf	sprintf@tmpval^(0+128),w
  2335     172F  1283               	bcf	3,5	;RP0=0, select bank0
  2336     1730  1303               	bcf	3,6	;RP1=0, select bank0
  2337     1731  00AC               	movwf	___flmul@a
  2338     1732  120A  158A  2158  160A  118A  	fcall	___flmul
  2339     1737  1283               	bcf	3,5	;RP0=0, select bank0
  2340     1738  1303               	bcf	3,6	;RP1=0, select bank0
  2341     1739  082B               	movf	?___flmul+3,w
  2342     173A  1683               	bsf	3,5	;RP0=1, select bank1
  2343     173B  1303               	bcf	3,6	;RP1=0, select bank1
  2344     173C  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
  2345     173D  1283               	bcf	3,5	;RP0=0, select bank0
  2346     173E  1303               	bcf	3,6	;RP1=0, select bank0
  2347     173F  082A               	movf	?___flmul+2,w
  2348     1740  1683               	bsf	3,5	;RP0=1, select bank1
  2349     1741  1303               	bcf	3,6	;RP1=0, select bank1
  2350     1742  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
  2351     1743  1283               	bcf	3,5	;RP0=0, select bank0
  2352     1744  1303               	bcf	3,6	;RP1=0, select bank0
  2353     1745  0829               	movf	?___flmul+1,w
  2354     1746  1683               	bsf	3,5	;RP0=1, select bank1
  2355     1747  1303               	bcf	3,6	;RP1=0, select bank1
  2356     1748  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
  2357     1749  1283               	bcf	3,5	;RP0=0, select bank0
  2358     174A  1303               	bcf	3,6	;RP1=0, select bank0
  2359     174B  0828               	movf	?___flmul,w
  2360     174C  1683               	bsf	3,5	;RP0=1, select bank1
  2361     174D  1303               	bcf	3,6	;RP1=0, select bank1
  2362     174E  00BC               	movwf	sprintf@tmpval^(0+128)
  2363     174F                     l4025:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2366     174F  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2367     1750  00F5               	movwf	___flge@ff1+3
  2368     1751  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2369     1752  00F4               	movwf	___flge@ff1+2
  2370     1753  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2371     1754  00F3               	movwf	___flge@ff1+1
  2372     1755  083C               	movf	sprintf@tmpval^(0+128),w
  2373     1756  00F2               	movwf	___flge@ff1
  2374     1757  303F               	movlw	63
  2375     1758  00F9               	movwf	___flge@ff2+3
  2376     1759  3080               	movlw	128
  2377     175A  00F8               	movwf	___flge@ff2+2
  2378     175B  3000               	movlw	0
  2379     175C  00F7               	movwf	___flge@ff2+1
  2380     175D  3000               	movlw	0
  2381     175E  00F6               	movwf	___flge@ff2
  2382     175F  160A  118A  20C1  160A  118A  	fcall	___flge
  2383     1764  1803               	btfsc	3,0
  2384     1765  2F67               	goto	u6121
  2385     1766  2F68               	goto	u6120
  2386     1767                     u6121:
  2387     1767  2F71               	goto	l4029
  2388     1768                     u6120:
  2389     1768                     l4027:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2392     1768  30FF               	movlw	255
  2393     1769  1683               	bsf	3,5	;RP0=1, select bank1
  2394     176A  1303               	bcf	3,6	;RP1=0, select bank1
  2395     176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2396     176C  1803               	skipnc
  2397     176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2398     176E  30FF               	movlw	255
  2399     176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2400     1770  2F94               	goto	l4033
  2401     1771                     l4029:
  2402     1771  1683               	bsf	3,5	;RP0=1, select bank1
  2403     1772  1303               	bcf	3,6	;RP1=0, select bank1
  2404     1773  083F               	movf	(sprintf@tmpval+3)^(0+128),w
  2405     1774  00F5               	movwf	___flge@ff1+3
  2406     1775  083E               	movf	(sprintf@tmpval+2)^(0+128),w
  2407     1776  00F4               	movwf	___flge@ff1+2
  2408     1777  083D               	movf	(sprintf@tmpval+1)^(0+128),w
  2409     1778  00F3               	movwf	___flge@ff1+1
  2410     1779  083C               	movf	sprintf@tmpval^(0+128),w
  2411     177A  00F2               	movwf	___flge@ff1
  2412     177B  3041               	movlw	65
  2413     177C  00F9               	movwf	___flge@ff2+3
  2414     177D  3020               	movlw	32
  2415     177E  00F8               	movwf	___flge@ff2+2
  2416     177F  3000               	movlw	0
  2417     1780  00F7               	movwf	___flge@ff2+1
  2418     1781  3000               	movlw	0
  2419     1782  00F6               	movwf	___flge@ff2
  2420     1783  160A  118A  20C1  160A  118A  	fcall	___flge
  2421     1788  1C03               	btfss	3,0
  2422     1789  2F8B               	goto	u6131
  2423     178A  2F8C               	goto	u6130
  2424     178B                     u6131:
  2425     178B  2F94               	goto	l4033
  2426     178C                     u6130:
  2427     178C                     l4031:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2430     178C  3001               	movlw	1
  2431     178D  1683               	bsf	3,5	;RP0=1, select bank1
  2432     178E  1303               	bcf	3,6	;RP1=0, select bank1
  2433     178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2434     1790  1803               	skipnc
  2435     1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2436     1792  3000               	movlw	0
  2437     1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2438     1794                     l4033:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2441     1794  1683               	bsf	3,5	;RP0=1, select bank1
  2442     1795  1303               	bcf	3,6	;RP1=0, select bank1
  2443     1796  084A               	movf	(sprintf@prec+1)^(0+128),w
  2444     1797  3A80               	xorlw	128
  2445     1798  00FF               	movwf	btemp+1
  2446     1799  3080               	movlw	128
  2447     179A  027F               	subwf	btemp+1,w
  2448     179B  1D03               	skipz
  2449     179C  2F9F               	goto	u6145
  2450     179D  300D               	movlw	13
  2451     179E  0249               	subwf	sprintf@prec^(0+128),w
  2452     179F                     u6145:
  2453     179F  1803               	skipnc
  2454     17A0  2FA2               	goto	u6141
  2455     17A1  2FA3               	goto	u6140
  2456     17A2                     u6141:
  2457     17A2  2FEA               	goto	l4037
  2458     17A3                     u6140:
  2459     17A3                     l4035:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2462     17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2463     17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2464     17A5  0849               	movf	sprintf@prec^(0+128),w
  2465     17A6  120A  118A  25B1  160A  118A  	fcall	_fround
  2466     17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2467     17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2468     17AD  0845               	movf	?_fround+3,w
  2469     17AE  00D9               	movwf	___fladd@b+3
  2470     17AF  0844               	movf	?_fround+2,w
  2471     17B0  00D8               	movwf	___fladd@b+2
  2472     17B1  0843               	movf	?_fround+1,w
  2473     17B2  00D7               	movwf	___fladd@b+1
  2474     17B3  0842               	movf	?_fround,w
  2475     17B4  00D6               	movwf	___fladd@b
  2476     17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2477     17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2478     17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2479     17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2480     17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2481     17BA  00DD               	movwf	___fladd@a+3
  2482     17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2483     17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2484     17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2485     17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2486     17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2487     17C0  00DC               	movwf	___fladd@a+2
  2488     17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2489     17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2490     17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2491     17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2492     17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2493     17C6  00DB               	movwf	___fladd@a+1
  2494     17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2495     17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2496     17C9  0845               	movf	sprintf@fval^(0+128),w
  2497     17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2498     17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2499     17CC  00DA               	movwf	___fladd@a
  2500     17CD  160A  118A  2308  160A  118A  	fcall	___fladd
  2501     17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2502     17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2503     17D4  0859               	movf	?___fladd+3,w
  2504     17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2505     17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2506     17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2507     17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2508     17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2509     17DA  0858               	movf	?___fladd+2,w
  2510     17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2511     17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2512     17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2513     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2514     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2515     17E0  0857               	movf	?___fladd+1,w
  2516     17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2517     17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2518     17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2519     17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2520     17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2521     17E6  0856               	movf	?___fladd,w
  2522     17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2523     17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2524     17E9  00C5               	movwf	sprintf@fval^(0+128)
  2525     17EA                     l4037:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2528     17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2529     17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2530     17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2531     17ED  3A80               	xorlw	128
  2532     17EE  00FF               	movwf	btemp+1
  2533     17EF  3080               	movlw	128
  2534     17F0  027F               	subwf	btemp+1,w
  2535     17F1  1D03               	skipz
  2536     17F2  2FF5               	goto	u6155
  2537     17F3  300A               	movlw	10
  2538     17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2539     17F5                     u6155:
  2540     17F5  1803               	skipnc
  2541     17F6  2FFA               	goto	u6151
  2542     17F7  120A  118A  281D   	goto	u6150
  2543     17FA                     u6151:
  2544     17FA  120A  118A  286E   	goto	l4045
  2545     17FD                     L3:
  2546     17FD                     L2:
  2547     17FD  120A  118A  2DAA   	ljmp	l4183
  2548                           
  2549                           	psect	text2
  2550     0C9D                     __ptext2:	
  2551 ;; *************** function _scale *****************
  2552 ;; Defined at:
  2553 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  scl             1    wreg     char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  scl             1   52[BANK0 ] char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  4   34[BANK0 ] char 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2567 ;;      Params:         0       4       0       0       0
  2568 ;;      Locals:         0       5       0       0       0
  2569 ;;      Temps:          0      10       0       0       0
  2570 ;;      Totals:         0      19       0       0       0
  2571 ;;Total ram usage:       19 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 4
  2574 ;; This function calls:
  2575 ;;		___awdiv
  2576 ;;		___awmod
  2577 ;;		___flmul
  2578 ;; This function is called by:
  2579 ;;		_sprintf
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583     0C9D                     _scale:	
  2584                           ;psect for function _scale
  2585                           
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2589                           ;scale@scl stored from wreg
  2590     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2591     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2592     0C9F  00D4               	movwf	scale@scl
  2593     0CA0                     l2957:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2596     0CA0  1FD4               	btfss	scale@scl,7
  2597     0CA1  2CA3               	goto	u4211
  2598     0CA2  2CA4               	goto	u4210
  2599     0CA3                     u4211:
  2600     0CA3  2E53               	goto	l2979
  2601     0CA4                     u4210:
  2602     0CA4                     l2959:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2605     0CA4  09D4               	comf	scale@scl,f
  2606     0CA5  0AD4               	incf	scale@scl,f
  2607     0CA6                     l2961:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2610     0CA6  0854               	movf	scale@scl,w
  2611     0CA7  3A80               	xorlw	128
  2612     0CA8  3E12               	addlw	-238
  2613     0CA9  1C03               	skipc
  2614     0CAA  2CAC               	goto	u4221
  2615     0CAB  2CAD               	goto	u4220
  2616     0CAC                     u4221:
  2617     0CAC  2D97               	goto	l2969
  2618     0CAD                     u4220:
  2619     0CAD                     l2963:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2622     0CAD  300A               	movlw	10
  2623     0CAE  00A0               	movwf	___awdiv@divisor
  2624     0CAF  3000               	movlw	0
  2625     0CB0  00A1               	movwf	___awdiv@divisor+1
  2626     0CB1  0854               	movf	scale@scl,w
  2627     0CB2  00F4               	movwf	___awmod@dividend
  2628     0CB3  01F5               	clrf	___awmod@dividend+1
  2629     0CB4  1BF4               	btfsc	___awmod@dividend,7
  2630     0CB5  03F5               	decf	___awmod@dividend+1,f
  2631     0CB6  3064               	movlw	100
  2632     0CB7  00F2               	movwf	___awmod@divisor
  2633     0CB8  3000               	movlw	0
  2634     0CB9  00F3               	movwf	___awmod@divisor+1
  2635     0CBA  160A  158A  2489  120A  158A  	fcall	___awmod
  2636     0CBF  0873               	movf	?___awmod+1,w
  2637     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2638     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2639     0CC2  00A3               	movwf	___awdiv@dividend+1
  2640     0CC3  0872               	movf	?___awmod,w
  2641     0CC4  00A2               	movwf	___awdiv@dividend
  2642     0CC5  160A  158A  25B0  120A  158A  	fcall	___awdiv
  2643     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2644     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2645     0CCC  0820               	movf	?___awdiv,w
  2646     0CCD  00C6               	movwf	??_scale
  2647     0CCE  3001               	movlw	1
  2648     0CCF                     u4235:
  2649     0CCF  1003               	clrc
  2650     0CD0  0DC6               	rlf	??_scale,f
  2651     0CD1  3EFF               	addlw	-1
  2652     0CD2  1D03               	skipz
  2653     0CD3  2CCF               	goto	u4235
  2654     0CD4  1003               	clrc
  2655     0CD5  0D46               	rlf	??_scale,w
  2656     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2657     0CD7  0084               	movwf	4
  2658     0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2659     0CDD  00C7               	movwf	??_scale+1
  2660     0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2661     0CE3  00C8               	movwf	??_scale+2
  2662     0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2663     0CE9  00C9               	movwf	??_scale+3
  2664     0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2665     0CEF  00CA               	movwf	??_scale+4
  2666     0CF0  084A               	movf	??_scale+4,w
  2667     0CF1  00AB               	movwf	___flmul@b+3
  2668     0CF2  0849               	movf	??_scale+3,w
  2669     0CF3  00AA               	movwf	___flmul@b+2
  2670     0CF4  0848               	movf	??_scale+2,w
  2671     0CF5  00A9               	movwf	___flmul@b+1
  2672     0CF6  0847               	movf	??_scale+1,w
  2673     0CF7  00A8               	movwf	___flmul@b
  2674     0CF8  3064               	movlw	100
  2675     0CF9  00A0               	movwf	___awdiv@divisor
  2676     0CFA  3000               	movlw	0
  2677     0CFB  00A1               	movwf	___awdiv@divisor+1
  2678     0CFC  0854               	movf	scale@scl,w
  2679     0CFD  00A2               	movwf	___awdiv@dividend
  2680     0CFE  01A3               	clrf	___awdiv@dividend+1
  2681     0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2682     0D00  03A3               	decf	___awdiv@dividend+1,f
  2683     0D01  160A  158A  25B0  120A  158A  	fcall	___awdiv
  2684     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2686     0D08  0820               	movf	?___awdiv,w
  2687     0D09  00CB               	movwf	??_scale+5
  2688     0D0A  3001               	movlw	1
  2689     0D0B                     u4245:
  2690     0D0B  1003               	clrc
  2691     0D0C  0DCB               	rlf	??_scale+5,f
  2692     0D0D  3EFF               	addlw	-1
  2693     0D0E  1D03               	skipz
  2694     0D0F  2D0B               	goto	u4245
  2695     0D10  1003               	clrc
  2696     0D11  0D4B               	rlf	??_scale+5,w
  2697     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2698     0D13  0084               	movwf	4
  2699     0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2700     0D19  00CC               	movwf	??_scale+6
  2701     0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2702     0D1F  00CD               	movwf	??_scale+7
  2703     0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2704     0D25  00CE               	movwf	??_scale+8
  2705     0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2706     0D2B  00CF               	movwf	??_scale+9
  2707     0D2C  084F               	movf	??_scale+9,w
  2708     0D2D  00AF               	movwf	___flmul@a+3
  2709     0D2E  084E               	movf	??_scale+8,w
  2710     0D2F  00AE               	movwf	___flmul@a+2
  2711     0D30  084D               	movf	??_scale+7,w
  2712     0D31  00AD               	movwf	___flmul@a+1
  2713     0D32  084C               	movf	??_scale+6,w
  2714     0D33  00AC               	movwf	___flmul@a
  2715     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  2716     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2717     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2718     0D3B  082B               	movf	?___flmul+3,w
  2719     0D3C  00D3               	movwf	_scale$1272+3
  2720     0D3D  082A               	movf	?___flmul+2,w
  2721     0D3E  00D2               	movwf	_scale$1272+2
  2722     0D3F  0829               	movf	?___flmul+1,w
  2723     0D40  00D1               	movwf	_scale$1272+1
  2724     0D41  0828               	movf	?___flmul,w
  2725     0D42  00D0               	movwf	_scale$1272
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2728     0D43  300A               	movlw	10
  2729     0D44  00F2               	movwf	___awmod@divisor
  2730     0D45  3000               	movlw	0
  2731     0D46  00F3               	movwf	___awmod@divisor+1
  2732     0D47  0854               	movf	scale@scl,w
  2733     0D48  00F4               	movwf	___awmod@dividend
  2734     0D49  01F5               	clrf	___awmod@dividend+1
  2735     0D4A  1BF4               	btfsc	___awmod@dividend,7
  2736     0D4B  03F5               	decf	___awmod@dividend+1,f
  2737     0D4C  160A  158A  2489  120A  158A  	fcall	___awmod
  2738     0D51  0872               	movf	?___awmod,w
  2739     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2740     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2741     0D54  00C6               	movwf	??_scale
  2742     0D55  3001               	movlw	1
  2743     0D56                     u4255:
  2744     0D56  1003               	clrc
  2745     0D57  0DC6               	rlf	??_scale,f
  2746     0D58  3EFF               	addlw	-1
  2747     0D59  1D03               	skipz
  2748     0D5A  2D56               	goto	u4255
  2749     0D5B  1003               	clrc
  2750     0D5C  0D46               	rlf	??_scale,w
  2751     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2752     0D5E  0084               	movwf	4
  2753     0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2754     0D64  00C7               	movwf	??_scale+1
  2755     0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2756     0D6A  00C8               	movwf	??_scale+2
  2757     0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2758     0D70  00C9               	movwf	??_scale+3
  2759     0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2760     0D76  00CA               	movwf	??_scale+4
  2761     0D77  084A               	movf	??_scale+4,w
  2762     0D78  00AB               	movwf	___flmul@b+3
  2763     0D79  0849               	movf	??_scale+3,w
  2764     0D7A  00AA               	movwf	___flmul@b+2
  2765     0D7B  0848               	movf	??_scale+2,w
  2766     0D7C  00A9               	movwf	___flmul@b+1
  2767     0D7D  0847               	movf	??_scale+1,w
  2768     0D7E  00A8               	movwf	___flmul@b
  2769     0D7F  0853               	movf	_scale$1272+3,w
  2770     0D80  00AF               	movwf	___flmul@a+3
  2771     0D81  0852               	movf	_scale$1272+2,w
  2772     0D82  00AE               	movwf	___flmul@a+2
  2773     0D83  0851               	movf	_scale$1272+1,w
  2774     0D84  00AD               	movwf	___flmul@a+1
  2775     0D85  0850               	movf	_scale$1272,w
  2776     0D86  00AC               	movwf	___flmul@a
  2777     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  2778     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2779     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2780     0D8E  082B               	movf	?___flmul+3,w
  2781     0D8F  00C5               	movwf	?_scale+3
  2782     0D90  082A               	movf	?___flmul+2,w
  2783     0D91  00C4               	movwf	?_scale+2
  2784     0D92  0829               	movf	?___flmul+1,w
  2785     0D93  00C3               	movwf	?_scale+1
  2786     0D94  0828               	movf	?___flmul,w
  2787     0D95  00C2               	movwf	?_scale
  2788     0D96  2FFF               	goto	l357
  2789     0D97                     l2969:
  2790     0D97  0854               	movf	scale@scl,w
  2791     0D98  3A80               	xorlw	128
  2792     0D99  3E75               	addlw	-139
  2793     0D9A  1C03               	skipc
  2794     0D9B  2D9D               	goto	u4261
  2795     0D9C  2D9E               	goto	u4260
  2796     0D9D                     u4261:
  2797     0D9D  2E26               	goto	l2975
  2798     0D9E                     u4260:
  2799     0D9E                     l2971:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2802     0D9E  300A               	movlw	10
  2803     0D9F  00F2               	movwf	___awmod@divisor
  2804     0DA0  3000               	movlw	0
  2805     0DA1  00F3               	movwf	___awmod@divisor+1
  2806     0DA2  0854               	movf	scale@scl,w
  2807     0DA3  00F4               	movwf	___awmod@dividend
  2808     0DA4  01F5               	clrf	___awmod@dividend+1
  2809     0DA5  1BF4               	btfsc	___awmod@dividend,7
  2810     0DA6  03F5               	decf	___awmod@dividend+1,f
  2811     0DA7  160A  158A  2489  120A  158A  	fcall	___awmod
  2812     0DAC  0872               	movf	?___awmod,w
  2813     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0DAF  00C6               	movwf	??_scale
  2816     0DB0  3001               	movlw	1
  2817     0DB1                     u4275:
  2818     0DB1  1003               	clrc
  2819     0DB2  0DC6               	rlf	??_scale,f
  2820     0DB3  3EFF               	addlw	-1
  2821     0DB4  1D03               	skipz
  2822     0DB5  2DB1               	goto	u4275
  2823     0DB6  1003               	clrc
  2824     0DB7  0D46               	rlf	??_scale,w
  2825     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2826     0DB9  0084               	movwf	4
  2827     0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2828     0DBF  00C7               	movwf	??_scale+1
  2829     0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2830     0DC5  00C8               	movwf	??_scale+2
  2831     0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2832     0DCB  00C9               	movwf	??_scale+3
  2833     0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2834     0DD1  00CA               	movwf	??_scale+4
  2835     0DD2  084A               	movf	??_scale+4,w
  2836     0DD3  00AB               	movwf	___flmul@b+3
  2837     0DD4  0849               	movf	??_scale+3,w
  2838     0DD5  00AA               	movwf	___flmul@b+2
  2839     0DD6  0848               	movf	??_scale+2,w
  2840     0DD7  00A9               	movwf	___flmul@b+1
  2841     0DD8  0847               	movf	??_scale+1,w
  2842     0DD9  00A8               	movwf	___flmul@b
  2843     0DDA  300A               	movlw	10
  2844     0DDB  00A0               	movwf	___awdiv@divisor
  2845     0DDC  3000               	movlw	0
  2846     0DDD  00A1               	movwf	___awdiv@divisor+1
  2847     0DDE  0854               	movf	scale@scl,w
  2848     0DDF  00A2               	movwf	___awdiv@dividend
  2849     0DE0  01A3               	clrf	___awdiv@dividend+1
  2850     0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2851     0DE2  03A3               	decf	___awdiv@dividend+1,f
  2852     0DE3  160A  158A  25B0  120A  158A  	fcall	___awdiv
  2853     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2854     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2855     0DEA  0820               	movf	?___awdiv,w
  2856     0DEB  00CB               	movwf	??_scale+5
  2857     0DEC  3001               	movlw	1
  2858     0DED                     u4285:
  2859     0DED  1003               	clrc
  2860     0DEE  0DCB               	rlf	??_scale+5,f
  2861     0DEF  3EFF               	addlw	-1
  2862     0DF0  1D03               	skipz
  2863     0DF1  2DED               	goto	u4285
  2864     0DF2  1003               	clrc
  2865     0DF3  0D4B               	rlf	??_scale+5,w
  2866     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2867     0DF5  0084               	movwf	4
  2868     0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  2869     0DFB  00CC               	movwf	??_scale+6
  2870     0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  2871     0E01  00CD               	movwf	??_scale+7
  2872     0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  2873     0E07  00CE               	movwf	??_scale+8
  2874     0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  2875     0E0D  00CF               	movwf	??_scale+9
  2876     0E0E  084F               	movf	??_scale+9,w
  2877     0E0F  00AF               	movwf	___flmul@a+3
  2878     0E10  084E               	movf	??_scale+8,w
  2879     0E11  00AE               	movwf	___flmul@a+2
  2880     0E12  084D               	movf	??_scale+7,w
  2881     0E13  00AD               	movwf	___flmul@a+1
  2882     0E14  084C               	movf	??_scale+6,w
  2883     0E15  00AC               	movwf	___flmul@a
  2884     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  2885     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2886     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2887     0E1D  082B               	movf	?___flmul+3,w
  2888     0E1E  00C5               	movwf	?_scale+3
  2889     0E1F  082A               	movf	?___flmul+2,w
  2890     0E20  00C4               	movwf	?_scale+2
  2891     0E21  0829               	movf	?___flmul+1,w
  2892     0E22  00C3               	movwf	?_scale+1
  2893     0E23  0828               	movf	?___flmul,w
  2894     0E24  00C2               	movwf	?_scale
  2895     0E25  2FFF               	goto	l357
  2896     0E26                     l2975:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2899     0E26  0854               	movf	scale@scl,w
  2900     0E27  00C6               	movwf	??_scale
  2901     0E28  3001               	movlw	1
  2902     0E29                     u4295:
  2903     0E29  1003               	clrc
  2904     0E2A  0DC6               	rlf	??_scale,f
  2905     0E2B  3EFF               	addlw	-1
  2906     0E2C  1D03               	skipz
  2907     0E2D  2E29               	goto	u4295
  2908     0E2E  1003               	clrc
  2909     0E2F  0D46               	rlf	??_scale,w
  2910     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2911     0E31  0084               	movwf	4
  2912     0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  2913     0E37  00C7               	movwf	??_scale+1
  2914     0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  2915     0E3D  00C8               	movwf	??_scale+2
  2916     0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2917     0E43  00C9               	movwf	??_scale+3
  2918     0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  2919     0E49  00CA               	movwf	??_scale+4
  2920     0E4A  084A               	movf	??_scale+4,w
  2921     0E4B  00C5               	movwf	?_scale+3
  2922     0E4C  0849               	movf	??_scale+3,w
  2923     0E4D  00C4               	movwf	?_scale+2
  2924     0E4E  0848               	movf	??_scale+2,w
  2925     0E4F  00C3               	movwf	?_scale+1
  2926     0E50  0847               	movf	??_scale+1,w
  2927     0E51  00C2               	movwf	?_scale
  2928     0E52  2FFF               	goto	l357
  2929     0E53                     l2979:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2932     0E53  0854               	movf	scale@scl,w
  2933     0E54  3A80               	xorlw	128
  2934     0E55  3E12               	addlw	-238
  2935     0E56  1C03               	skipc
  2936     0E57  2E59               	goto	u4301
  2937     0E58  2E5A               	goto	u4300
  2938     0E59                     u4301:
  2939     0E59  2F44               	goto	l2987
  2940     0E5A                     u4300:
  2941     0E5A                     l2981:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2944     0E5A  300A               	movlw	10
  2945     0E5B  00A0               	movwf	___awdiv@divisor
  2946     0E5C  3000               	movlw	0
  2947     0E5D  00A1               	movwf	___awdiv@divisor+1
  2948     0E5E  0854               	movf	scale@scl,w
  2949     0E5F  00F4               	movwf	___awmod@dividend
  2950     0E60  01F5               	clrf	___awmod@dividend+1
  2951     0E61  1BF4               	btfsc	___awmod@dividend,7
  2952     0E62  03F5               	decf	___awmod@dividend+1,f
  2953     0E63  3064               	movlw	100
  2954     0E64  00F2               	movwf	___awmod@divisor
  2955     0E65  3000               	movlw	0
  2956     0E66  00F3               	movwf	___awmod@divisor+1
  2957     0E67  160A  158A  2489  120A  158A  	fcall	___awmod
  2958     0E6C  0873               	movf	?___awmod+1,w
  2959     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2960     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2961     0E6F  00A3               	movwf	___awdiv@dividend+1
  2962     0E70  0872               	movf	?___awmod,w
  2963     0E71  00A2               	movwf	___awdiv@dividend
  2964     0E72  160A  158A  25B0  120A  158A  	fcall	___awdiv
  2965     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2966     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2967     0E79  0820               	movf	?___awdiv,w
  2968     0E7A  00C6               	movwf	??_scale
  2969     0E7B  3001               	movlw	1
  2970     0E7C                     u4315:
  2971     0E7C  1003               	clrc
  2972     0E7D  0DC6               	rlf	??_scale,f
  2973     0E7E  3EFF               	addlw	-1
  2974     0E7F  1D03               	skipz
  2975     0E80  2E7C               	goto	u4315
  2976     0E81  1003               	clrc
  2977     0E82  0D46               	rlf	??_scale,w
  2978     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2979     0E84  0084               	movwf	4
  2980     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  2981     0E8A  00C7               	movwf	??_scale+1
  2982     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  2983     0E90  00C8               	movwf	??_scale+2
  2984     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  2985     0E96  00C9               	movwf	??_scale+3
  2986     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  2987     0E9C  00CA               	movwf	??_scale+4
  2988     0E9D  084A               	movf	??_scale+4,w
  2989     0E9E  00AB               	movwf	___flmul@b+3
  2990     0E9F  0849               	movf	??_scale+3,w
  2991     0EA0  00AA               	movwf	___flmul@b+2
  2992     0EA1  0848               	movf	??_scale+2,w
  2993     0EA2  00A9               	movwf	___flmul@b+1
  2994     0EA3  0847               	movf	??_scale+1,w
  2995     0EA4  00A8               	movwf	___flmul@b
  2996     0EA5  3064               	movlw	100
  2997     0EA6  00A0               	movwf	___awdiv@divisor
  2998     0EA7  3000               	movlw	0
  2999     0EA8  00A1               	movwf	___awdiv@divisor+1
  3000     0EA9  0854               	movf	scale@scl,w
  3001     0EAA  00A2               	movwf	___awdiv@dividend
  3002     0EAB  01A3               	clrf	___awdiv@dividend+1
  3003     0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3004     0EAD  03A3               	decf	___awdiv@dividend+1,f
  3005     0EAE  160A  158A  25B0  120A  158A  	fcall	___awdiv
  3006     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3007     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3008     0EB5  0820               	movf	?___awdiv,w
  3009     0EB6  00CB               	movwf	??_scale+5
  3010     0EB7  3001               	movlw	1
  3011     0EB8                     u4325:
  3012     0EB8  1003               	clrc
  3013     0EB9  0DCB               	rlf	??_scale+5,f
  3014     0EBA  3EFF               	addlw	-1
  3015     0EBB  1D03               	skipz
  3016     0EBC  2EB8               	goto	u4325
  3017     0EBD  1003               	clrc
  3018     0EBE  0D4B               	rlf	??_scale+5,w
  3019     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3020     0EC0  0084               	movwf	4
  3021     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3022     0EC6  00CC               	movwf	??_scale+6
  3023     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3024     0ECC  00CD               	movwf	??_scale+7
  3025     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3026     0ED2  00CE               	movwf	??_scale+8
  3027     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3028     0ED8  00CF               	movwf	??_scale+9
  3029     0ED9  084F               	movf	??_scale+9,w
  3030     0EDA  00AF               	movwf	___flmul@a+3
  3031     0EDB  084E               	movf	??_scale+8,w
  3032     0EDC  00AE               	movwf	___flmul@a+2
  3033     0EDD  084D               	movf	??_scale+7,w
  3034     0EDE  00AD               	movwf	___flmul@a+1
  3035     0EDF  084C               	movf	??_scale+6,w
  3036     0EE0  00AC               	movwf	___flmul@a
  3037     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  3038     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3039     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3040     0EE8  082B               	movf	?___flmul+3,w
  3041     0EE9  00D3               	movwf	_scale$1272+3
  3042     0EEA  082A               	movf	?___flmul+2,w
  3043     0EEB  00D2               	movwf	_scale$1272+2
  3044     0EEC  0829               	movf	?___flmul+1,w
  3045     0EED  00D1               	movwf	_scale$1272+1
  3046     0EEE  0828               	movf	?___flmul,w
  3047     0EEF  00D0               	movwf	_scale$1272
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3050     0EF0  300A               	movlw	10
  3051     0EF1  00F2               	movwf	___awmod@divisor
  3052     0EF2  3000               	movlw	0
  3053     0EF3  00F3               	movwf	___awmod@divisor+1
  3054     0EF4  0854               	movf	scale@scl,w
  3055     0EF5  00F4               	movwf	___awmod@dividend
  3056     0EF6  01F5               	clrf	___awmod@dividend+1
  3057     0EF7  1BF4               	btfsc	___awmod@dividend,7
  3058     0EF8  03F5               	decf	___awmod@dividend+1,f
  3059     0EF9  160A  158A  2489  120A  158A  	fcall	___awmod
  3060     0EFE  0872               	movf	?___awmod,w
  3061     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3062     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3063     0F01  00C6               	movwf	??_scale
  3064     0F02  3001               	movlw	1
  3065     0F03                     u4335:
  3066     0F03  1003               	clrc
  3067     0F04  0DC6               	rlf	??_scale,f
  3068     0F05  3EFF               	addlw	-1
  3069     0F06  1D03               	skipz
  3070     0F07  2F03               	goto	u4335
  3071     0F08  1003               	clrc
  3072     0F09  0D46               	rlf	??_scale,w
  3073     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3074     0F0B  0084               	movwf	4
  3075     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3076     0F11  00C7               	movwf	??_scale+1
  3077     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3078     0F17  00C8               	movwf	??_scale+2
  3079     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3080     0F1D  00C9               	movwf	??_scale+3
  3081     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3082     0F23  00CA               	movwf	??_scale+4
  3083     0F24  084A               	movf	??_scale+4,w
  3084     0F25  00AB               	movwf	___flmul@b+3
  3085     0F26  0849               	movf	??_scale+3,w
  3086     0F27  00AA               	movwf	___flmul@b+2
  3087     0F28  0848               	movf	??_scale+2,w
  3088     0F29  00A9               	movwf	___flmul@b+1
  3089     0F2A  0847               	movf	??_scale+1,w
  3090     0F2B  00A8               	movwf	___flmul@b
  3091     0F2C  0853               	movf	_scale$1272+3,w
  3092     0F2D  00AF               	movwf	___flmul@a+3
  3093     0F2E  0852               	movf	_scale$1272+2,w
  3094     0F2F  00AE               	movwf	___flmul@a+2
  3095     0F30  0851               	movf	_scale$1272+1,w
  3096     0F31  00AD               	movwf	___flmul@a+1
  3097     0F32  0850               	movf	_scale$1272,w
  3098     0F33  00AC               	movwf	___flmul@a
  3099     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  3100     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0F3B  082B               	movf	?___flmul+3,w
  3103     0F3C  00C5               	movwf	?_scale+3
  3104     0F3D  082A               	movf	?___flmul+2,w
  3105     0F3E  00C4               	movwf	?_scale+2
  3106     0F3F  0829               	movf	?___flmul+1,w
  3107     0F40  00C3               	movwf	?_scale+1
  3108     0F41  0828               	movf	?___flmul,w
  3109     0F42  00C2               	movwf	?_scale
  3110     0F43  2FFF               	goto	l357
  3111     0F44                     l2987:
  3112     0F44  0854               	movf	scale@scl,w
  3113     0F45  3A80               	xorlw	128
  3114     0F46  3E75               	addlw	-139
  3115     0F47  1C03               	skipc
  3116     0F48  2F4A               	goto	u4341
  3117     0F49  2F4B               	goto	u4340
  3118     0F4A                     u4341:
  3119     0F4A  2FD3               	goto	l2993
  3120     0F4B                     u4340:
  3121     0F4B                     l2989:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3124     0F4B  300A               	movlw	10
  3125     0F4C  00F2               	movwf	___awmod@divisor
  3126     0F4D  3000               	movlw	0
  3127     0F4E  00F3               	movwf	___awmod@divisor+1
  3128     0F4F  0854               	movf	scale@scl,w
  3129     0F50  00F4               	movwf	___awmod@dividend
  3130     0F51  01F5               	clrf	___awmod@dividend+1
  3131     0F52  1BF4               	btfsc	___awmod@dividend,7
  3132     0F53  03F5               	decf	___awmod@dividend+1,f
  3133     0F54  160A  158A  2489  120A  158A  	fcall	___awmod
  3134     0F59  0872               	movf	?___awmod,w
  3135     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3136     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3137     0F5C  00C6               	movwf	??_scale
  3138     0F5D  3001               	movlw	1
  3139     0F5E                     u4355:
  3140     0F5E  1003               	clrc
  3141     0F5F  0DC6               	rlf	??_scale,f
  3142     0F60  3EFF               	addlw	-1
  3143     0F61  1D03               	skipz
  3144     0F62  2F5E               	goto	u4355
  3145     0F63  1003               	clrc
  3146     0F64  0D46               	rlf	??_scale,w
  3147     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3148     0F66  0084               	movwf	4
  3149     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3150     0F6C  00C7               	movwf	??_scale+1
  3151     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3152     0F72  00C8               	movwf	??_scale+2
  3153     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3154     0F78  00C9               	movwf	??_scale+3
  3155     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3156     0F7E  00CA               	movwf	??_scale+4
  3157     0F7F  084A               	movf	??_scale+4,w
  3158     0F80  00AB               	movwf	___flmul@b+3
  3159     0F81  0849               	movf	??_scale+3,w
  3160     0F82  00AA               	movwf	___flmul@b+2
  3161     0F83  0848               	movf	??_scale+2,w
  3162     0F84  00A9               	movwf	___flmul@b+1
  3163     0F85  0847               	movf	??_scale+1,w
  3164     0F86  00A8               	movwf	___flmul@b
  3165     0F87  300A               	movlw	10
  3166     0F88  00A0               	movwf	___awdiv@divisor
  3167     0F89  3000               	movlw	0
  3168     0F8A  00A1               	movwf	___awdiv@divisor+1
  3169     0F8B  0854               	movf	scale@scl,w
  3170     0F8C  00A2               	movwf	___awdiv@dividend
  3171     0F8D  01A3               	clrf	___awdiv@dividend+1
  3172     0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3173     0F8F  03A3               	decf	___awdiv@dividend+1,f
  3174     0F90  160A  158A  25B0  120A  158A  	fcall	___awdiv
  3175     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3176     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3177     0F97  0820               	movf	?___awdiv,w
  3178     0F98  00CB               	movwf	??_scale+5
  3179     0F99  3001               	movlw	1
  3180     0F9A                     u4365:
  3181     0F9A  1003               	clrc
  3182     0F9B  0DCB               	rlf	??_scale+5,f
  3183     0F9C  3EFF               	addlw	-1
  3184     0F9D  1D03               	skipz
  3185     0F9E  2F9A               	goto	u4365
  3186     0F9F  1003               	clrc
  3187     0FA0  0D4B               	rlf	??_scale+5,w
  3188     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3189     0FA2  0084               	movwf	4
  3190     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3191     0FA8  00CC               	movwf	??_scale+6
  3192     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3193     0FAE  00CD               	movwf	??_scale+7
  3194     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3195     0FB4  00CE               	movwf	??_scale+8
  3196     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3197     0FBA  00CF               	movwf	??_scale+9
  3198     0FBB  084F               	movf	??_scale+9,w
  3199     0FBC  00AF               	movwf	___flmul@a+3
  3200     0FBD  084E               	movf	??_scale+8,w
  3201     0FBE  00AE               	movwf	___flmul@a+2
  3202     0FBF  084D               	movf	??_scale+7,w
  3203     0FC0  00AD               	movwf	___flmul@a+1
  3204     0FC1  084C               	movf	??_scale+6,w
  3205     0FC2  00AC               	movwf	___flmul@a
  3206     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  3207     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3208     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3209     0FCA  082B               	movf	?___flmul+3,w
  3210     0FCB  00C5               	movwf	?_scale+3
  3211     0FCC  082A               	movf	?___flmul+2,w
  3212     0FCD  00C4               	movwf	?_scale+2
  3213     0FCE  0829               	movf	?___flmul+1,w
  3214     0FCF  00C3               	movwf	?_scale+1
  3215     0FD0  0828               	movf	?___flmul,w
  3216     0FD1  00C2               	movwf	?_scale
  3217     0FD2  2FFF               	goto	l357
  3218     0FD3                     l2993:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3221     0FD3  0854               	movf	scale@scl,w
  3222     0FD4  00C6               	movwf	??_scale
  3223     0FD5  3001               	movlw	1
  3224     0FD6                     u4375:
  3225     0FD6  1003               	clrc
  3226     0FD7  0DC6               	rlf	??_scale,f
  3227     0FD8  3EFF               	addlw	-1
  3228     0FD9  1D03               	skipz
  3229     0FDA  2FD6               	goto	u4375
  3230     0FDB  1003               	clrc
  3231     0FDC  0D46               	rlf	??_scale,w
  3232     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3233     0FDE  0084               	movwf	4
  3234     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3235     0FE4  00C7               	movwf	??_scale+1
  3236     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3237     0FEA  00C8               	movwf	??_scale+2
  3238     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3239     0FF0  00C9               	movwf	??_scale+3
  3240     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3241     0FF6  00CA               	movwf	??_scale+4
  3242     0FF7  084A               	movf	??_scale+4,w
  3243     0FF8  00C5               	movwf	?_scale+3
  3244     0FF9  0849               	movf	??_scale+3,w
  3245     0FFA  00C4               	movwf	?_scale+2
  3246     0FFB  0848               	movf	??_scale+2,w
  3247     0FFC  00C3               	movwf	?_scale+1
  3248     0FFD  0847               	movf	??_scale+1,w
  3249     0FFE  00C2               	movwf	?_scale
  3250     0FFF                     l357:
  3251     0FFF  0008               	return
  3252     1000                     __end_of_scale:
  3253                           
  3254                           	psect	text3
  3255     1C89                     __ptext3:	
  3256 ;; *************** function ___awmod *****************
  3257 ;; Defined at:
  3258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  divisor         2    2[COMMON] int 
  3261 ;;  dividend        2    4[COMMON] int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  sign            1    8[COMMON] unsigned char 
  3264 ;;  counter         1    7[COMMON] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    2[COMMON] int 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         4       0       0       0       0
  3275 ;;      Locals:         2       0       0       0       0
  3276 ;;      Temps:          1       0       0       0       0
  3277 ;;      Totals:         7       0       0       0       0
  3278 ;;Total ram usage:        7 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_scale
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288     1C89                     ___awmod:	
  3289                           ;psect for function ___awmod
  3290                           
  3291     1C89                     l2487:	
  3292                           ;incstack = 0
  3293                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3294                           
  3295     1C89  01F8               	clrf	___awmod@sign
  3296     1C8A                     l2489:
  3297     1C8A  1FF5               	btfss	___awmod@dividend+1,7
  3298     1C8B  2C8D               	goto	u3071
  3299     1C8C  2C8E               	goto	u3070
  3300     1C8D                     u3071:
  3301     1C8D  2C95               	goto	l2495
  3302     1C8E                     u3070:
  3303     1C8E                     l2491:
  3304     1C8E  09F4               	comf	___awmod@dividend,f
  3305     1C8F  09F5               	comf	___awmod@dividend+1,f
  3306     1C90  0AF4               	incf	___awmod@dividend,f
  3307     1C91  1903               	skipnz
  3308     1C92  0AF5               	incf	___awmod@dividend+1,f
  3309     1C93                     l2493:
  3310     1C93  01F8               	clrf	___awmod@sign
  3311     1C94  0AF8               	incf	___awmod@sign,f
  3312     1C95                     l2495:
  3313     1C95  1FF3               	btfss	___awmod@divisor+1,7
  3314     1C96  2C98               	goto	u3081
  3315     1C97  2C99               	goto	u3080
  3316     1C98                     u3081:
  3317     1C98  2C9E               	goto	l2499
  3318     1C99                     u3080:
  3319     1C99                     l2497:
  3320     1C99  09F2               	comf	___awmod@divisor,f
  3321     1C9A  09F3               	comf	___awmod@divisor+1,f
  3322     1C9B  0AF2               	incf	___awmod@divisor,f
  3323     1C9C  1903               	skipnz
  3324     1C9D  0AF3               	incf	___awmod@divisor+1,f
  3325     1C9E                     l2499:
  3326     1C9E  0872               	movf	___awmod@divisor,w
  3327     1C9F  0473               	iorwf	___awmod@divisor+1,w
  3328     1CA0  1903               	btfsc	3,2
  3329     1CA1  2CA3               	goto	u3091
  3330     1CA2  2CA4               	goto	u3090
  3331     1CA3                     u3091:
  3332     1CA3  2CD3               	goto	l2517
  3333     1CA4                     u3090:
  3334     1CA4                     l2501:
  3335     1CA4  01F7               	clrf	___awmod@counter
  3336     1CA5  0AF7               	incf	___awmod@counter,f
  3337     1CA6  2CB2               	goto	l2507
  3338     1CA7                     l2503:
  3339     1CA7  3001               	movlw	1
  3340     1CA8                     u3105:
  3341     1CA8  1003               	clrc
  3342     1CA9  0DF2               	rlf	___awmod@divisor,f
  3343     1CAA  0DF3               	rlf	___awmod@divisor+1,f
  3344     1CAB  3EFF               	addlw	-1
  3345     1CAC  1D03               	skipz
  3346     1CAD  2CA8               	goto	u3105
  3347     1CAE                     l2505:
  3348     1CAE  3001               	movlw	1
  3349     1CAF  00F6               	movwf	??___awmod
  3350     1CB0  0876               	movf	??___awmod,w
  3351     1CB1  07F7               	addwf	___awmod@counter,f
  3352     1CB2                     l2507:
  3353     1CB2  1FF3               	btfss	___awmod@divisor+1,7
  3354     1CB3  2CB5               	goto	u3111
  3355     1CB4  2CB6               	goto	u3110
  3356     1CB5                     u3111:
  3357     1CB5  2CA7               	goto	l2503
  3358     1CB6                     u3110:
  3359     1CB6                     l2509:
  3360     1CB6  0873               	movf	___awmod@divisor+1,w
  3361     1CB7  0275               	subwf	___awmod@dividend+1,w
  3362     1CB8  1D03               	skipz
  3363     1CB9  2CBC               	goto	u3125
  3364     1CBA  0872               	movf	___awmod@divisor,w
  3365     1CBB  0274               	subwf	___awmod@dividend,w
  3366     1CBC                     u3125:
  3367     1CBC  1C03               	skipc
  3368     1CBD  2CBF               	goto	u3121
  3369     1CBE  2CC0               	goto	u3120
  3370     1CBF                     u3121:
  3371     1CBF  2CC6               	goto	l2513
  3372     1CC0                     u3120:
  3373     1CC0                     l2511:
  3374     1CC0  0872               	movf	___awmod@divisor,w
  3375     1CC1  02F4               	subwf	___awmod@dividend,f
  3376     1CC2  0873               	movf	___awmod@divisor+1,w
  3377     1CC3  1C03               	skipc
  3378     1CC4  03F5               	decf	___awmod@dividend+1,f
  3379     1CC5  02F5               	subwf	___awmod@dividend+1,f
  3380     1CC6                     l2513:
  3381     1CC6  3001               	movlw	1
  3382     1CC7                     u3135:
  3383     1CC7  1003               	clrc
  3384     1CC8  0CF3               	rrf	___awmod@divisor+1,f
  3385     1CC9  0CF2               	rrf	___awmod@divisor,f
  3386     1CCA  3EFF               	addlw	-1
  3387     1CCB  1D03               	skipz
  3388     1CCC  2CC7               	goto	u3135
  3389     1CCD                     l2515:
  3390     1CCD  3001               	movlw	1
  3391     1CCE  02F7               	subwf	___awmod@counter,f
  3392     1CCF  1D03               	btfss	3,2
  3393     1CD0  2CD2               	goto	u3141
  3394     1CD1  2CD3               	goto	u3140
  3395     1CD2                     u3141:
  3396     1CD2  2CB6               	goto	l2509
  3397     1CD3                     u3140:
  3398     1CD3                     l2517:
  3399     1CD3  0878               	movf	___awmod@sign,w
  3400     1CD4  1903               	btfsc	3,2
  3401     1CD5  2CD7               	goto	u3151
  3402     1CD6  2CD8               	goto	u3150
  3403     1CD7                     u3151:
  3404     1CD7  2CDD               	goto	l2521
  3405     1CD8                     u3150:
  3406     1CD8                     l2519:
  3407     1CD8  09F4               	comf	___awmod@dividend,f
  3408     1CD9  09F5               	comf	___awmod@dividend+1,f
  3409     1CDA  0AF4               	incf	___awmod@dividend,f
  3410     1CDB  1903               	skipnz
  3411     1CDC  0AF5               	incf	___awmod@dividend+1,f
  3412     1CDD                     l2521:
  3413     1CDD  0875               	movf	___awmod@dividend+1,w
  3414     1CDE  00F3               	movwf	?___awmod+1
  3415     1CDF  0874               	movf	___awmod@dividend,w
  3416     1CE0  00F2               	movwf	?___awmod
  3417     1CE1                     l602:
  3418     1CE1  0008               	return
  3419     1CE2                     __end_of___awmod:
  3420                           
  3421                           	psect	text4
  3422     1DB0                     __ptext4:	
  3423 ;; *************** function ___awdiv *****************
  3424 ;; Defined at:
  3425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  divisor         2    0[BANK0 ] int 
  3428 ;;  dividend        2    2[BANK0 ] int 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quotient        2    6[BANK0 ] int 
  3431 ;;  sign            1    5[BANK0 ] unsigned char 
  3432 ;;  counter         1    4[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2    0[BANK0 ] int 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       4       0       0       0
  3443 ;;      Locals:         0       4       0       0       0
  3444 ;;      Temps:          1       0       0       0       0
  3445 ;;      Totals:         1       8       0       0       0
  3446 ;;Total ram usage:        9 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_scale
  3453 ;;		_sprintf
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457     1DB0                     ___awdiv:	
  3458                           ;psect for function ___awdiv
  3459                           
  3460     1DB0                     l2443:	
  3461                           ;incstack = 0
  3462                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3463                           
  3464     1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  3465     1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  3466     1DB2  01A5               	clrf	___awdiv@sign
  3467     1DB3                     l2445:
  3468     1DB3  1FA1               	btfss	___awdiv@divisor+1,7
  3469     1DB4  2DB6               	goto	u2971
  3470     1DB5  2DB7               	goto	u2970
  3471     1DB6                     u2971:
  3472     1DB6  2DBE               	goto	l2451
  3473     1DB7                     u2970:
  3474     1DB7                     l2447:
  3475     1DB7  09A0               	comf	___awdiv@divisor,f
  3476     1DB8  09A1               	comf	___awdiv@divisor+1,f
  3477     1DB9  0AA0               	incf	___awdiv@divisor,f
  3478     1DBA  1903               	skipnz
  3479     1DBB  0AA1               	incf	___awdiv@divisor+1,f
  3480     1DBC                     l2449:
  3481     1DBC  01A5               	clrf	___awdiv@sign
  3482     1DBD  0AA5               	incf	___awdiv@sign,f
  3483     1DBE                     l2451:
  3484     1DBE  1FA3               	btfss	___awdiv@dividend+1,7
  3485     1DBF  2DC1               	goto	u2981
  3486     1DC0  2DC2               	goto	u2980
  3487     1DC1                     u2981:
  3488     1DC1  2DCB               	goto	l2457
  3489     1DC2                     u2980:
  3490     1DC2                     l2453:
  3491     1DC2  09A2               	comf	___awdiv@dividend,f
  3492     1DC3  09A3               	comf	___awdiv@dividend+1,f
  3493     1DC4  0AA2               	incf	___awdiv@dividend,f
  3494     1DC5  1903               	skipnz
  3495     1DC6  0AA3               	incf	___awdiv@dividend+1,f
  3496     1DC7                     l2455:
  3497     1DC7  3001               	movlw	1
  3498     1DC8  00F9               	movwf	??___awdiv
  3499     1DC9  0879               	movf	??___awdiv,w
  3500     1DCA  06A5               	xorwf	___awdiv@sign,f
  3501     1DCB                     l2457:
  3502     1DCB  01A6               	clrf	___awdiv@quotient
  3503     1DCC  01A7               	clrf	___awdiv@quotient+1
  3504     1DCD                     l2459:
  3505     1DCD  0820               	movf	___awdiv@divisor,w
  3506     1DCE  0421               	iorwf	___awdiv@divisor+1,w
  3507     1DCF  1903               	btfsc	3,2
  3508     1DD0  2DD2               	goto	u2991
  3509     1DD1  2DD3               	goto	u2990
  3510     1DD2                     u2991:
  3511     1DD2  2E0A               	goto	l2479
  3512     1DD3                     u2990:
  3513     1DD3                     l2461:
  3514     1DD3  01A4               	clrf	___awdiv@counter
  3515     1DD4  0AA4               	incf	___awdiv@counter,f
  3516     1DD5  2DE1               	goto	l2467
  3517     1DD6                     l2463:
  3518     1DD6  3001               	movlw	1
  3519     1DD7                     u3005:
  3520     1DD7  1003               	clrc
  3521     1DD8  0DA0               	rlf	___awdiv@divisor,f
  3522     1DD9  0DA1               	rlf	___awdiv@divisor+1,f
  3523     1DDA  3EFF               	addlw	-1
  3524     1DDB  1D03               	skipz
  3525     1DDC  2DD7               	goto	u3005
  3526     1DDD                     l2465:
  3527     1DDD  3001               	movlw	1
  3528     1DDE  00F9               	movwf	??___awdiv
  3529     1DDF  0879               	movf	??___awdiv,w
  3530     1DE0  07A4               	addwf	___awdiv@counter,f
  3531     1DE1                     l2467:
  3532     1DE1  1FA1               	btfss	___awdiv@divisor+1,7
  3533     1DE2  2DE4               	goto	u3011
  3534     1DE3  2DE5               	goto	u3010
  3535     1DE4                     u3011:
  3536     1DE4  2DD6               	goto	l2463
  3537     1DE5                     u3010:
  3538     1DE5                     l2469:
  3539     1DE5  3001               	movlw	1
  3540     1DE6                     u3025:
  3541     1DE6  1003               	clrc
  3542     1DE7  0DA6               	rlf	___awdiv@quotient,f
  3543     1DE8  0DA7               	rlf	___awdiv@quotient+1,f
  3544     1DE9  3EFF               	addlw	-1
  3545     1DEA  1D03               	skipz
  3546     1DEB  2DE6               	goto	u3025
  3547     1DEC  0821               	movf	___awdiv@divisor+1,w
  3548     1DED  0223               	subwf	___awdiv@dividend+1,w
  3549     1DEE  1D03               	skipz
  3550     1DEF  2DF2               	goto	u3035
  3551     1DF0  0820               	movf	___awdiv@divisor,w
  3552     1DF1  0222               	subwf	___awdiv@dividend,w
  3553     1DF2                     u3035:
  3554     1DF2  1C03               	skipc
  3555     1DF3  2DF5               	goto	u3031
  3556     1DF4  2DF6               	goto	u3030
  3557     1DF5                     u3031:
  3558     1DF5  2DFD               	goto	l2475
  3559     1DF6                     u3030:
  3560     1DF6                     l2471:
  3561     1DF6  0820               	movf	___awdiv@divisor,w
  3562     1DF7  02A2               	subwf	___awdiv@dividend,f
  3563     1DF8  0821               	movf	___awdiv@divisor+1,w
  3564     1DF9  1C03               	skipc
  3565     1DFA  03A3               	decf	___awdiv@dividend+1,f
  3566     1DFB  02A3               	subwf	___awdiv@dividend+1,f
  3567     1DFC                     l2473:
  3568     1DFC  1426               	bsf	___awdiv@quotient,0
  3569     1DFD                     l2475:
  3570     1DFD  3001               	movlw	1
  3571     1DFE                     u3045:
  3572     1DFE  1003               	clrc
  3573     1DFF  0CA1               	rrf	___awdiv@divisor+1,f
  3574     1E00  0CA0               	rrf	___awdiv@divisor,f
  3575     1E01  3EFF               	addlw	-1
  3576     1E02  1D03               	skipz
  3577     1E03  2DFE               	goto	u3045
  3578     1E04                     l2477:
  3579     1E04  3001               	movlw	1
  3580     1E05  02A4               	subwf	___awdiv@counter,f
  3581     1E06  1D03               	btfss	3,2
  3582     1E07  2E09               	goto	u3051
  3583     1E08  2E0A               	goto	u3050
  3584     1E09                     u3051:
  3585     1E09  2DE5               	goto	l2469
  3586     1E0A                     u3050:
  3587     1E0A                     l2479:
  3588     1E0A  0825               	movf	___awdiv@sign,w
  3589     1E0B  1903               	btfsc	3,2
  3590     1E0C  2E0E               	goto	u3061
  3591     1E0D  2E0F               	goto	u3060
  3592     1E0E                     u3061:
  3593     1E0E  2E14               	goto	l2483
  3594     1E0F                     u3060:
  3595     1E0F                     l2481:
  3596     1E0F  09A6               	comf	___awdiv@quotient,f
  3597     1E10  09A7               	comf	___awdiv@quotient+1,f
  3598     1E11  0AA6               	incf	___awdiv@quotient,f
  3599     1E12  1903               	skipnz
  3600     1E13  0AA7               	incf	___awdiv@quotient+1,f
  3601     1E14                     l2483:
  3602     1E14  0827               	movf	___awdiv@quotient+1,w
  3603     1E15  00A1               	movwf	?___awdiv+1
  3604     1E16  0826               	movf	___awdiv@quotient,w
  3605     1E17  00A0               	movwf	?___awdiv
  3606     1E18                     l589:
  3607     1E18  0008               	return
  3608     1E19                     __end_of___awdiv:
  3609                           
  3610                           	psect	text5
  3611     19D7                     __ptext5:	
  3612 ;; *************** function _isdigit *****************
  3613 ;; Defined at:
  3614 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  c               1    wreg     unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  c               1    3[COMMON] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;		None               void
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         2       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         2       0       0       0       0
  3632 ;;Total ram usage:        2 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 2
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_sprintf
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     19D7                     _isdigit:	
  3643                           ;psect for function _isdigit
  3644                           
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3648                           ;isdigit@c stored from wreg
  3649     19D7  00F3               	movwf	isdigit@c
  3650     19D8                     l2997:
  3651     19D8  01F2               	clrf	_isdigit$1090
  3652     19D9                     l2999:
  3653     19D9  303A               	movlw	58
  3654     19DA  0273               	subwf	isdigit@c,w
  3655     19DB  1803               	skipnc
  3656     19DC  29DE               	goto	u4381
  3657     19DD  29DF               	goto	u4380
  3658     19DE                     u4381:
  3659     19DE  29E7               	goto	l3005
  3660     19DF                     u4380:
  3661     19DF                     l3001:
  3662     19DF  3030               	movlw	48
  3663     19E0  0273               	subwf	isdigit@c,w
  3664     19E1  1C03               	skipc
  3665     19E2  29E4               	goto	u4391
  3666     19E3  29E5               	goto	u4390
  3667     19E4                     u4391:
  3668     19E4  29E7               	goto	l3005
  3669     19E5                     u4390:
  3670     19E5                     l3003:
  3671     19E5  01F2               	clrf	_isdigit$1090
  3672     19E6  0AF2               	incf	_isdigit$1090,f
  3673     19E7                     l3005:
  3674     19E7  0C72               	rrf	_isdigit$1090,w
  3675     19E8                     l923:
  3676     19E8  0008               	return
  3677     19E9                     __end_of_isdigit:
  3678                           
  3679                           	psect	text6
  3680     05B1                     __ptext6:	
  3681 ;; *************** function _fround *****************
  3682 ;; Defined at:
  3683 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  prec            1    wreg     unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  prec            1   53[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  4   34[BANK0 ] unsigned char 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       4       0       0       0
  3698 ;;      Locals:         0       9       0       0       0
  3699 ;;      Temps:          0       7       0       0       0
  3700 ;;      Totals:         0      20       0       0       0
  3701 ;;Total ram usage:       20 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 4
  3704 ;; This function calls:
  3705 ;;		___flmul
  3706 ;;		___lwdiv
  3707 ;;		___lwmod
  3708 ;; This function is called by:
  3709 ;;		_sprintf
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     05B1                     _fround:	
  3714                           ;psect for function _fround
  3715                           
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3719                           ;fround@prec stored from wreg
  3720     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3721     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  3722     05B3  00D5               	movwf	fround@prec
  3723     05B4                     l3871:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3726     05B4  306E               	movlw	110
  3727     05B5  0255               	subwf	fround@prec,w
  3728     05B6  1C03               	skipc
  3729     05B7  2DB9               	goto	u5851
  3730     05B8  2DBA               	goto	u5850
  3731     05B9                     u5851:
  3732     05B9  2EC9               	goto	l3879
  3733     05BA                     u5850:
  3734     05BA                     l3873:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3737     05BA  303F               	movlw	63
  3738     05BB  00AB               	movwf	___flmul@b+3
  3739     05BC  3000               	movlw	0
  3740     05BD  00AA               	movwf	___flmul@b+2
  3741     05BE  3000               	movlw	0
  3742     05BF  00A9               	movwf	___flmul@b+1
  3743     05C0  3000               	movlw	0
  3744     05C1  00A8               	movwf	___flmul@b
  3745     05C2  3064               	movlw	100
  3746     05C3  00A0               	movwf	___lwdiv@divisor
  3747     05C4  3000               	movlw	0
  3748     05C5  00A1               	movwf	___lwdiv@divisor+1
  3749     05C6  0855               	movf	fround@prec,w
  3750     05C7  00C6               	movwf	??_fround
  3751     05C8  01C7               	clrf	??_fround+1
  3752     05C9  0846               	movf	??_fround,w
  3753     05CA  00A2               	movwf	___lwdiv@dividend
  3754     05CB  0847               	movf	??_fround+1,w
  3755     05CC  00A3               	movwf	___lwdiv@dividend+1
  3756     05CD  160A  158A  234D  120A  118A  	fcall	___lwdiv
  3757     05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3758     05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3759     05D4  0820               	movf	?___lwdiv,w
  3760     05D5  00C8               	movwf	??_fround+2
  3761     05D6  3001               	movlw	1
  3762     05D7                     u5865:
  3763     05D7  1003               	clrc
  3764     05D8  0DC8               	rlf	??_fround+2,f
  3765     05D9  3EFF               	addlw	-1
  3766     05DA  1D03               	skipz
  3767     05DB  2DD7               	goto	u5865
  3768     05DC  1003               	clrc
  3769     05DD  0D48               	rlf	??_fround+2,w
  3770     05DE  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3771     05DF  0084               	movwf	4
  3772     05E0  160A  118A  200A  120A  118A  	fcall	stringdir
  3773     05E5  00C9               	movwf	??_fround+3
  3774     05E6  160A  118A  200A  120A  118A  	fcall	stringdir
  3775     05EB  00CA               	movwf	??_fround+4
  3776     05EC  160A  118A  200A  120A  118A  	fcall	stringdir
  3777     05F1  00CB               	movwf	??_fround+5
  3778     05F2  160A  118A  200A  120A  118A  	fcall	stringdir
  3779     05F7  00CC               	movwf	??_fround+6
  3780     05F8  084C               	movf	??_fround+6,w
  3781     05F9  00AF               	movwf	___flmul@a+3
  3782     05FA  084B               	movf	??_fround+5,w
  3783     05FB  00AE               	movwf	___flmul@a+2
  3784     05FC  084A               	movf	??_fround+4,w
  3785     05FD  00AD               	movwf	___flmul@a+1
  3786     05FE  0849               	movf	??_fround+3,w
  3787     05FF  00AC               	movwf	___flmul@a
  3788     0600  120A  158A  2158  120A  118A  	fcall	___flmul
  3789     0605  1283               	bcf	3,5	;RP0=0, select bank0
  3790     0606  1303               	bcf	3,6	;RP1=0, select bank0
  3791     0607  082B               	movf	?___flmul+3,w
  3792     0608  00D4               	movwf	_fround$1270+3
  3793     0609  082A               	movf	?___flmul+2,w
  3794     060A  00D3               	movwf	_fround$1270+2
  3795     060B  0829               	movf	?___flmul+1,w
  3796     060C  00D2               	movwf	_fround$1270+1
  3797     060D  0828               	movf	?___flmul,w
  3798     060E  00D1               	movwf	_fround$1270
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3801     060F  300A               	movlw	10
  3802     0610  00A0               	movwf	___lwdiv@divisor
  3803     0611  3000               	movlw	0
  3804     0612  00A1               	movwf	___lwdiv@divisor+1
  3805     0613  0855               	movf	fround@prec,w
  3806     0614  00C6               	movwf	??_fround
  3807     0615  01C7               	clrf	??_fround+1
  3808     0616  0846               	movf	??_fround,w
  3809     0617  00F4               	movwf	___lwmod@dividend
  3810     0618  0847               	movf	??_fround+1,w
  3811     0619  00F5               	movwf	___lwmod@dividend+1
  3812     061A  3064               	movlw	100
  3813     061B  00F2               	movwf	___lwmod@divisor
  3814     061C  3000               	movlw	0
  3815     061D  00F3               	movwf	___lwmod@divisor+1
  3816     061E  160A  158A  22CD  120A  118A  	fcall	___lwmod
  3817     0623  0873               	movf	?___lwmod+1,w
  3818     0624  1283               	bcf	3,5	;RP0=0, select bank0
  3819     0625  1303               	bcf	3,6	;RP1=0, select bank0
  3820     0626  00A3               	movwf	___lwdiv@dividend+1
  3821     0627  0872               	movf	?___lwmod,w
  3822     0628  00A2               	movwf	___lwdiv@dividend
  3823     0629  160A  158A  234D  120A  118A  	fcall	___lwdiv
  3824     062E  1283               	bcf	3,5	;RP0=0, select bank0
  3825     062F  1303               	bcf	3,6	;RP1=0, select bank0
  3826     0630  0820               	movf	?___lwdiv,w
  3827     0631  00C8               	movwf	??_fround+2
  3828     0632  3001               	movlw	1
  3829     0633                     u5875:
  3830     0633  1003               	clrc
  3831     0634  0DC8               	rlf	??_fround+2,f
  3832     0635  3EFF               	addlw	-1
  3833     0636  1D03               	skipz
  3834     0637  2E33               	goto	u5875
  3835     0638  1003               	clrc
  3836     0639  0D48               	rlf	??_fround+2,w
  3837     063A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3838     063B  0084               	movwf	4
  3839     063C  160A  118A  200A  120A  118A  	fcall	stringdir
  3840     0641  00C9               	movwf	??_fround+3
  3841     0642  160A  118A  200A  120A  118A  	fcall	stringdir
  3842     0647  00CA               	movwf	??_fround+4
  3843     0648  160A  118A  200A  120A  118A  	fcall	stringdir
  3844     064D  00CB               	movwf	??_fround+5
  3845     064E  160A  118A  200A  120A  118A  	fcall	stringdir
  3846     0653  00CC               	movwf	??_fround+6
  3847     0654  084C               	movf	??_fround+6,w
  3848     0655  00AB               	movwf	___flmul@b+3
  3849     0656  084B               	movf	??_fround+5,w
  3850     0657  00AA               	movwf	___flmul@b+2
  3851     0658  084A               	movf	??_fround+4,w
  3852     0659  00A9               	movwf	___flmul@b+1
  3853     065A  0849               	movf	??_fround+3,w
  3854     065B  00A8               	movwf	___flmul@b
  3855     065C  0854               	movf	_fround$1270+3,w
  3856     065D  00AF               	movwf	___flmul@a+3
  3857     065E  0853               	movf	_fround$1270+2,w
  3858     065F  00AE               	movwf	___flmul@a+2
  3859     0660  0852               	movf	_fround$1270+1,w
  3860     0661  00AD               	movwf	___flmul@a+1
  3861     0662  0851               	movf	_fround$1270,w
  3862     0663  00AC               	movwf	___flmul@a
  3863     0664  120A  158A  2158  120A  118A  	fcall	___flmul
  3864     0669  1283               	bcf	3,5	;RP0=0, select bank0
  3865     066A  1303               	bcf	3,6	;RP1=0, select bank0
  3866     066B  082B               	movf	?___flmul+3,w
  3867     066C  00D0               	movwf	_fround$1271+3
  3868     066D  082A               	movf	?___flmul+2,w
  3869     066E  00CF               	movwf	_fround$1271+2
  3870     066F  0829               	movf	?___flmul+1,w
  3871     0670  00CE               	movwf	_fround$1271+1
  3872     0671  0828               	movf	?___flmul,w
  3873     0672  00CD               	movwf	_fround$1271
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3876     0673  300A               	movlw	10
  3877     0674  00F2               	movwf	___lwmod@divisor
  3878     0675  3000               	movlw	0
  3879     0676  00F3               	movwf	___lwmod@divisor+1
  3880     0677  0855               	movf	fround@prec,w
  3881     0678  00C6               	movwf	??_fround
  3882     0679  01C7               	clrf	??_fround+1
  3883     067A  0846               	movf	??_fround,w
  3884     067B  00F4               	movwf	___lwmod@dividend
  3885     067C  0847               	movf	??_fround+1,w
  3886     067D  00F5               	movwf	___lwmod@dividend+1
  3887     067E  160A  158A  22CD  120A  118A  	fcall	___lwmod
  3888     0683  0872               	movf	?___lwmod,w
  3889     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3890     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3891     0686  00C8               	movwf	??_fround+2
  3892     0687  3001               	movlw	1
  3893     0688                     u5885:
  3894     0688  1003               	clrc
  3895     0689  0DC8               	rlf	??_fround+2,f
  3896     068A  3EFF               	addlw	-1
  3897     068B  1D03               	skipz
  3898     068C  2E88               	goto	u5885
  3899     068D  1003               	clrc
  3900     068E  0D48               	rlf	??_fround+2,w
  3901     068F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3902     0690  0084               	movwf	4
  3903     0691  160A  118A  200A  120A  118A  	fcall	stringdir
  3904     0696  00C9               	movwf	??_fround+3
  3905     0697  160A  118A  200A  120A  118A  	fcall	stringdir
  3906     069C  00CA               	movwf	??_fround+4
  3907     069D  160A  118A  200A  120A  118A  	fcall	stringdir
  3908     06A2  00CB               	movwf	??_fround+5
  3909     06A3  160A  118A  200A  120A  118A  	fcall	stringdir
  3910     06A8  00CC               	movwf	??_fround+6
  3911     06A9  084C               	movf	??_fround+6,w
  3912     06AA  00AB               	movwf	___flmul@b+3
  3913     06AB  084B               	movf	??_fround+5,w
  3914     06AC  00AA               	movwf	___flmul@b+2
  3915     06AD  084A               	movf	??_fround+4,w
  3916     06AE  00A9               	movwf	___flmul@b+1
  3917     06AF  0849               	movf	??_fround+3,w
  3918     06B0  00A8               	movwf	___flmul@b
  3919     06B1  0850               	movf	_fround$1271+3,w
  3920     06B2  00AF               	movwf	___flmul@a+3
  3921     06B3  084F               	movf	_fround$1271+2,w
  3922     06B4  00AE               	movwf	___flmul@a+2
  3923     06B5  084E               	movf	_fround$1271+1,w
  3924     06B6  00AD               	movwf	___flmul@a+1
  3925     06B7  084D               	movf	_fround$1271,w
  3926     06B8  00AC               	movwf	___flmul@a
  3927     06B9  120A  158A  2158  120A  118A  	fcall	___flmul
  3928     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3929     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3930     06C0  082B               	movf	?___flmul+3,w
  3931     06C1  00C5               	movwf	?_fround+3
  3932     06C2  082A               	movf	?___flmul+2,w
  3933     06C3  00C4               	movwf	?_fround+2
  3934     06C4  0829               	movf	?___flmul+1,w
  3935     06C5  00C3               	movwf	?_fround+1
  3936     06C6  0828               	movf	?___flmul,w
  3937     06C7  00C2               	movwf	?_fround
  3938     06C8  2FBD               	goto	l350
  3939     06C9                     l3879:
  3940     06C9  300B               	movlw	11
  3941     06CA  0255               	subwf	fround@prec,w
  3942     06CB  1C03               	skipc
  3943     06CC  2ECE               	goto	u5891
  3944     06CD  2ECF               	goto	u5890
  3945     06CE                     u5891:
  3946     06CE  2F7A               	goto	l3885
  3947     06CF                     u5890:
  3948     06CF                     l3881:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3951     06CF  303F               	movlw	63
  3952     06D0  00AB               	movwf	___flmul@b+3
  3953     06D1  3000               	movlw	0
  3954     06D2  00AA               	movwf	___flmul@b+2
  3955     06D3  3000               	movlw	0
  3956     06D4  00A9               	movwf	___flmul@b+1
  3957     06D5  3000               	movlw	0
  3958     06D6  00A8               	movwf	___flmul@b
  3959     06D7  300A               	movlw	10
  3960     06D8  00A0               	movwf	___lwdiv@divisor
  3961     06D9  3000               	movlw	0
  3962     06DA  00A1               	movwf	___lwdiv@divisor+1
  3963     06DB  0855               	movf	fround@prec,w
  3964     06DC  00C6               	movwf	??_fround
  3965     06DD  01C7               	clrf	??_fround+1
  3966     06DE  0846               	movf	??_fround,w
  3967     06DF  00A2               	movwf	___lwdiv@dividend
  3968     06E0  0847               	movf	??_fround+1,w
  3969     06E1  00A3               	movwf	___lwdiv@dividend+1
  3970     06E2  160A  158A  234D  120A  118A  	fcall	___lwdiv
  3971     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  3972     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  3973     06E9  0820               	movf	?___lwdiv,w
  3974     06EA  00C8               	movwf	??_fround+2
  3975     06EB  3001               	movlw	1
  3976     06EC                     u5905:
  3977     06EC  1003               	clrc
  3978     06ED  0DC8               	rlf	??_fround+2,f
  3979     06EE  3EFF               	addlw	-1
  3980     06EF  1D03               	skipz
  3981     06F0  2EEC               	goto	u5905
  3982     06F1  1003               	clrc
  3983     06F2  0D48               	rlf	??_fround+2,w
  3984     06F3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3985     06F4  0084               	movwf	4
  3986     06F5  160A  118A  200A  120A  118A  	fcall	stringdir
  3987     06FA  00C9               	movwf	??_fround+3
  3988     06FB  160A  118A  200A  120A  118A  	fcall	stringdir
  3989     0700  00CA               	movwf	??_fround+4
  3990     0701  160A  118A  200A  120A  118A  	fcall	stringdir
  3991     0706  00CB               	movwf	??_fround+5
  3992     0707  160A  118A  200A  120A  118A  	fcall	stringdir
  3993     070C  00CC               	movwf	??_fround+6
  3994     070D  084C               	movf	??_fround+6,w
  3995     070E  00AF               	movwf	___flmul@a+3
  3996     070F  084B               	movf	??_fround+5,w
  3997     0710  00AE               	movwf	___flmul@a+2
  3998     0711  084A               	movf	??_fround+4,w
  3999     0712  00AD               	movwf	___flmul@a+1
  4000     0713  0849               	movf	??_fround+3,w
  4001     0714  00AC               	movwf	___flmul@a
  4002     0715  120A  158A  2158  120A  118A  	fcall	___flmul
  4003     071A  1283               	bcf	3,5	;RP0=0, select bank0
  4004     071B  1303               	bcf	3,6	;RP1=0, select bank0
  4005     071C  082B               	movf	?___flmul+3,w
  4006     071D  00D4               	movwf	_fround$1270+3
  4007     071E  082A               	movf	?___flmul+2,w
  4008     071F  00D3               	movwf	_fround$1270+2
  4009     0720  0829               	movf	?___flmul+1,w
  4010     0721  00D2               	movwf	_fround$1270+1
  4011     0722  0828               	movf	?___flmul,w
  4012     0723  00D1               	movwf	_fround$1270
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4015     0724  300A               	movlw	10
  4016     0725  00F2               	movwf	___lwmod@divisor
  4017     0726  3000               	movlw	0
  4018     0727  00F3               	movwf	___lwmod@divisor+1
  4019     0728  0855               	movf	fround@prec,w
  4020     0729  00C6               	movwf	??_fround
  4021     072A  01C7               	clrf	??_fround+1
  4022     072B  0846               	movf	??_fround,w
  4023     072C  00F4               	movwf	___lwmod@dividend
  4024     072D  0847               	movf	??_fround+1,w
  4025     072E  00F5               	movwf	___lwmod@dividend+1
  4026     072F  160A  158A  22CD  120A  118A  	fcall	___lwmod
  4027     0734  0872               	movf	?___lwmod,w
  4028     0735  1283               	bcf	3,5	;RP0=0, select bank0
  4029     0736  1303               	bcf	3,6	;RP1=0, select bank0
  4030     0737  00C8               	movwf	??_fround+2
  4031     0738  3001               	movlw	1
  4032     0739                     u5915:
  4033     0739  1003               	clrc
  4034     073A  0DC8               	rlf	??_fround+2,f
  4035     073B  3EFF               	addlw	-1
  4036     073C  1D03               	skipz
  4037     073D  2F39               	goto	u5915
  4038     073E  1003               	clrc
  4039     073F  0D48               	rlf	??_fround+2,w
  4040     0740  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4041     0741  0084               	movwf	4
  4042     0742  160A  118A  200A  120A  118A  	fcall	stringdir
  4043     0747  00C9               	movwf	??_fround+3
  4044     0748  160A  118A  200A  120A  118A  	fcall	stringdir
  4045     074D  00CA               	movwf	??_fround+4
  4046     074E  160A  118A  200A  120A  118A  	fcall	stringdir
  4047     0753  00CB               	movwf	??_fround+5
  4048     0754  160A  118A  200A  120A  118A  	fcall	stringdir
  4049     0759  00CC               	movwf	??_fround+6
  4050     075A  084C               	movf	??_fround+6,w
  4051     075B  00AB               	movwf	___flmul@b+3
  4052     075C  084B               	movf	??_fround+5,w
  4053     075D  00AA               	movwf	___flmul@b+2
  4054     075E  084A               	movf	??_fround+4,w
  4055     075F  00A9               	movwf	___flmul@b+1
  4056     0760  0849               	movf	??_fround+3,w
  4057     0761  00A8               	movwf	___flmul@b
  4058     0762  0854               	movf	_fround$1270+3,w
  4059     0763  00AF               	movwf	___flmul@a+3
  4060     0764  0853               	movf	_fround$1270+2,w
  4061     0765  00AE               	movwf	___flmul@a+2
  4062     0766  0852               	movf	_fround$1270+1,w
  4063     0767  00AD               	movwf	___flmul@a+1
  4064     0768  0851               	movf	_fround$1270,w
  4065     0769  00AC               	movwf	___flmul@a
  4066     076A  120A  158A  2158  120A  118A  	fcall	___flmul
  4067     076F  1283               	bcf	3,5	;RP0=0, select bank0
  4068     0770  1303               	bcf	3,6	;RP1=0, select bank0
  4069     0771  082B               	movf	?___flmul+3,w
  4070     0772  00C5               	movwf	?_fround+3
  4071     0773  082A               	movf	?___flmul+2,w
  4072     0774  00C4               	movwf	?_fround+2
  4073     0775  0829               	movf	?___flmul+1,w
  4074     0776  00C3               	movwf	?_fround+1
  4075     0777  0828               	movf	?___flmul,w
  4076     0778  00C2               	movwf	?_fround
  4077     0779  2FBD               	goto	l350
  4078     077A                     l3885:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4081     077A  303F               	movlw	63
  4082     077B  00AB               	movwf	___flmul@b+3
  4083     077C  3000               	movlw	0
  4084     077D  00AA               	movwf	___flmul@b+2
  4085     077E  3000               	movlw	0
  4086     077F  00A9               	movwf	___flmul@b+1
  4087     0780  3000               	movlw	0
  4088     0781  00A8               	movwf	___flmul@b
  4089     0782  0855               	movf	fround@prec,w
  4090     0783  00C6               	movwf	??_fround
  4091     0784  3001               	movlw	1
  4092     0785                     u5925:
  4093     0785  1003               	clrc
  4094     0786  0DC6               	rlf	??_fround,f
  4095     0787  3EFF               	addlw	-1
  4096     0788  1D03               	skipz
  4097     0789  2F85               	goto	u5925
  4098     078A  1003               	clrc
  4099     078B  0D46               	rlf	??_fround,w
  4100     078C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4101     078D  0084               	movwf	4
  4102     078E  160A  118A  200A  120A  118A  	fcall	stringdir
  4103     0793  00C7               	movwf	??_fround+1
  4104     0794  160A  118A  200A  120A  118A  	fcall	stringdir
  4105     0799  00C8               	movwf	??_fround+2
  4106     079A  160A  118A  200A  120A  118A  	fcall	stringdir
  4107     079F  00C9               	movwf	??_fround+3
  4108     07A0  160A  118A  200A  120A  118A  	fcall	stringdir
  4109     07A5  00CA               	movwf	??_fround+4
  4110     07A6  084A               	movf	??_fround+4,w
  4111     07A7  00AF               	movwf	___flmul@a+3
  4112     07A8  0849               	movf	??_fround+3,w
  4113     07A9  00AE               	movwf	___flmul@a+2
  4114     07AA  0848               	movf	??_fround+2,w
  4115     07AB  00AD               	movwf	___flmul@a+1
  4116     07AC  0847               	movf	??_fround+1,w
  4117     07AD  00AC               	movwf	___flmul@a
  4118     07AE  120A  158A  2158  120A  118A  	fcall	___flmul
  4119     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  4120     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  4121     07B5  082B               	movf	?___flmul+3,w
  4122     07B6  00C5               	movwf	?_fround+3
  4123     07B7  082A               	movf	?___flmul+2,w
  4124     07B8  00C4               	movwf	?_fround+2
  4125     07B9  0829               	movf	?___flmul+1,w
  4126     07BA  00C3               	movwf	?_fround+1
  4127     07BB  0828               	movf	?___flmul,w
  4128     07BC  00C2               	movwf	?_fround
  4129     07BD                     l350:
  4130     07BD  0008               	return
  4131     07BE                     __end_of_fround:
  4132                           
  4133                           	psect	text7
  4134     1ACD                     __ptext7:	
  4135 ;; *************** function ___lwmod *****************
  4136 ;; Defined at:
  4137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  divisor         2    2[COMMON] unsigned int 
  4140 ;;  dividend        2    4[COMMON] unsigned int 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  counter         1    7[COMMON] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  2    2[COMMON] unsigned int 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         4       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0
  4154 ;;      Temps:          1       0       0       0       0
  4155 ;;      Totals:         6       0       0       0       0
  4156 ;;Total ram usage:        6 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 2
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_fround
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166     1ACD                     ___lwmod:	
  4167                           ;psect for function ___lwmod
  4168                           
  4169     1ACD                     l2551:	
  4170                           ;incstack = 0
  4171                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4172                           
  4173     1ACD  0872               	movf	___lwmod@divisor,w
  4174     1ACE  0473               	iorwf	___lwmod@divisor+1,w
  4175     1ACF  1903               	btfsc	3,2
  4176     1AD0  2AD2               	goto	u3231
  4177     1AD1  2AD3               	goto	u3230
  4178     1AD2                     u3231:
  4179     1AD2  2B02               	goto	l2569
  4180     1AD3                     u3230:
  4181     1AD3                     l2553:
  4182     1AD3  01F7               	clrf	___lwmod@counter
  4183     1AD4  0AF7               	incf	___lwmod@counter,f
  4184     1AD5  2AE1               	goto	l2559
  4185     1AD6                     l2555:
  4186     1AD6  3001               	movlw	1
  4187     1AD7                     u3245:
  4188     1AD7  1003               	clrc
  4189     1AD8  0DF2               	rlf	___lwmod@divisor,f
  4190     1AD9  0DF3               	rlf	___lwmod@divisor+1,f
  4191     1ADA  3EFF               	addlw	-1
  4192     1ADB  1D03               	skipz
  4193     1ADC  2AD7               	goto	u3245
  4194     1ADD                     l2557:
  4195     1ADD  3001               	movlw	1
  4196     1ADE  00F6               	movwf	??___lwmod
  4197     1ADF  0876               	movf	??___lwmod,w
  4198     1AE0  07F7               	addwf	___lwmod@counter,f
  4199     1AE1                     l2559:
  4200     1AE1  1FF3               	btfss	___lwmod@divisor+1,7
  4201     1AE2  2AE4               	goto	u3251
  4202     1AE3  2AE5               	goto	u3250
  4203     1AE4                     u3251:
  4204     1AE4  2AD6               	goto	l2555
  4205     1AE5                     u3250:
  4206     1AE5                     l2561:
  4207     1AE5  0873               	movf	___lwmod@divisor+1,w
  4208     1AE6  0275               	subwf	___lwmod@dividend+1,w
  4209     1AE7  1D03               	skipz
  4210     1AE8  2AEB               	goto	u3265
  4211     1AE9  0872               	movf	___lwmod@divisor,w
  4212     1AEA  0274               	subwf	___lwmod@dividend,w
  4213     1AEB                     u3265:
  4214     1AEB  1C03               	skipc
  4215     1AEC  2AEE               	goto	u3261
  4216     1AED  2AEF               	goto	u3260
  4217     1AEE                     u3261:
  4218     1AEE  2AF5               	goto	l2565
  4219     1AEF                     u3260:
  4220     1AEF                     l2563:
  4221     1AEF  0872               	movf	___lwmod@divisor,w
  4222     1AF0  02F4               	subwf	___lwmod@dividend,f
  4223     1AF1  0873               	movf	___lwmod@divisor+1,w
  4224     1AF2  1C03               	skipc
  4225     1AF3  03F5               	decf	___lwmod@dividend+1,f
  4226     1AF4  02F5               	subwf	___lwmod@dividend+1,f
  4227     1AF5                     l2565:
  4228     1AF5  3001               	movlw	1
  4229     1AF6                     u3275:
  4230     1AF6  1003               	clrc
  4231     1AF7  0CF3               	rrf	___lwmod@divisor+1,f
  4232     1AF8  0CF2               	rrf	___lwmod@divisor,f
  4233     1AF9  3EFF               	addlw	-1
  4234     1AFA  1D03               	skipz
  4235     1AFB  2AF6               	goto	u3275
  4236     1AFC                     l2567:
  4237     1AFC  3001               	movlw	1
  4238     1AFD  02F7               	subwf	___lwmod@counter,f
  4239     1AFE  1D03               	btfss	3,2
  4240     1AFF  2B01               	goto	u3281
  4241     1B00  2B02               	goto	u3280
  4242     1B01                     u3281:
  4243     1B01  2AE5               	goto	l2561
  4244     1B02                     u3280:
  4245     1B02                     l2569:
  4246     1B02  0875               	movf	___lwmod@dividend+1,w
  4247     1B03  00F3               	movwf	?___lwmod+1
  4248     1B04  0874               	movf	___lwmod@dividend,w
  4249     1B05  00F2               	movwf	?___lwmod
  4250     1B06                     l752:
  4251     1B06  0008               	return
  4252     1B07                     __end_of___lwmod:
  4253                           
  4254                           	psect	text8
  4255     1B4D                     __ptext8:	
  4256 ;; *************** function ___lwdiv *****************
  4257 ;; Defined at:
  4258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  divisor         2    0[BANK0 ] unsigned int 
  4261 ;;  dividend        2    2[BANK0 ] unsigned int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  quotient        2    5[BANK0 ] unsigned int 
  4264 ;;  counter         1    4[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2    0[BANK0 ] unsigned int 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       4       0       0       0
  4275 ;;      Locals:         0       3       0       0       0
  4276 ;;      Temps:          1       0       0       0       0
  4277 ;;      Totals:         1       7       0       0       0
  4278 ;;Total ram usage:        8 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 2
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_fround
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288     1B4D                     ___lwdiv:	
  4289                           ;psect for function ___lwdiv
  4290                           
  4291     1B4D                     l3817:	
  4292                           ;incstack = 0
  4293                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4294                           
  4295     1B4D  1283               	bcf	3,5	;RP0=0, select bank0
  4296     1B4E  1303               	bcf	3,6	;RP1=0, select bank0
  4297     1B4F  01A5               	clrf	___lwdiv@quotient
  4298     1B50  01A6               	clrf	___lwdiv@quotient+1
  4299     1B51                     l3819:
  4300     1B51  0820               	movf	___lwdiv@divisor,w
  4301     1B52  0421               	iorwf	___lwdiv@divisor+1,w
  4302     1B53  1903               	btfsc	3,2
  4303     1B54  2B56               	goto	u5781
  4304     1B55  2B57               	goto	u5780
  4305     1B56                     u5781:
  4306     1B56  2B8E               	goto	l3839
  4307     1B57                     u5780:
  4308     1B57                     l3821:
  4309     1B57  01A4               	clrf	___lwdiv@counter
  4310     1B58  0AA4               	incf	___lwdiv@counter,f
  4311     1B59  2B65               	goto	l3827
  4312     1B5A                     l3823:
  4313     1B5A  3001               	movlw	1
  4314     1B5B                     u5795:
  4315     1B5B  1003               	clrc
  4316     1B5C  0DA0               	rlf	___lwdiv@divisor,f
  4317     1B5D  0DA1               	rlf	___lwdiv@divisor+1,f
  4318     1B5E  3EFF               	addlw	-1
  4319     1B5F  1D03               	skipz
  4320     1B60  2B5B               	goto	u5795
  4321     1B61                     l3825:
  4322     1B61  3001               	movlw	1
  4323     1B62  00F8               	movwf	??___lwdiv
  4324     1B63  0878               	movf	??___lwdiv,w
  4325     1B64  07A4               	addwf	___lwdiv@counter,f
  4326     1B65                     l3827:
  4327     1B65  1FA1               	btfss	___lwdiv@divisor+1,7
  4328     1B66  2B68               	goto	u5801
  4329     1B67  2B69               	goto	u5800
  4330     1B68                     u5801:
  4331     1B68  2B5A               	goto	l3823
  4332     1B69                     u5800:
  4333     1B69                     l3829:
  4334     1B69  3001               	movlw	1
  4335     1B6A                     u5815:
  4336     1B6A  1003               	clrc
  4337     1B6B  0DA5               	rlf	___lwdiv@quotient,f
  4338     1B6C  0DA6               	rlf	___lwdiv@quotient+1,f
  4339     1B6D  3EFF               	addlw	-1
  4340     1B6E  1D03               	skipz
  4341     1B6F  2B6A               	goto	u5815
  4342     1B70  0821               	movf	___lwdiv@divisor+1,w
  4343     1B71  0223               	subwf	___lwdiv@dividend+1,w
  4344     1B72  1D03               	skipz
  4345     1B73  2B76               	goto	u5825
  4346     1B74  0820               	movf	___lwdiv@divisor,w
  4347     1B75  0222               	subwf	___lwdiv@dividend,w
  4348     1B76                     u5825:
  4349     1B76  1C03               	skipc
  4350     1B77  2B79               	goto	u5821
  4351     1B78  2B7A               	goto	u5820
  4352     1B79                     u5821:
  4353     1B79  2B81               	goto	l3835
  4354     1B7A                     u5820:
  4355     1B7A                     l3831:
  4356     1B7A  0820               	movf	___lwdiv@divisor,w
  4357     1B7B  02A2               	subwf	___lwdiv@dividend,f
  4358     1B7C  0821               	movf	___lwdiv@divisor+1,w
  4359     1B7D  1C03               	skipc
  4360     1B7E  03A3               	decf	___lwdiv@dividend+1,f
  4361     1B7F  02A3               	subwf	___lwdiv@dividend+1,f
  4362     1B80                     l3833:
  4363     1B80  1425               	bsf	___lwdiv@quotient,0
  4364     1B81                     l3835:
  4365     1B81  3001               	movlw	1
  4366     1B82                     u5835:
  4367     1B82  1003               	clrc
  4368     1B83  0CA1               	rrf	___lwdiv@divisor+1,f
  4369     1B84  0CA0               	rrf	___lwdiv@divisor,f
  4370     1B85  3EFF               	addlw	-1
  4371     1B86  1D03               	skipz
  4372     1B87  2B82               	goto	u5835
  4373     1B88                     l3837:
  4374     1B88  3001               	movlw	1
  4375     1B89  02A4               	subwf	___lwdiv@counter,f
  4376     1B8A  1D03               	btfss	3,2
  4377     1B8B  2B8D               	goto	u5841
  4378     1B8C  2B8E               	goto	u5840
  4379     1B8D                     u5841:
  4380     1B8D  2B69               	goto	l3829
  4381     1B8E                     u5840:
  4382     1B8E                     l3839:
  4383     1B8E  0826               	movf	___lwdiv@quotient+1,w
  4384     1B8F  00A1               	movwf	?___lwdiv+1
  4385     1B90  0825               	movf	___lwdiv@quotient,w
  4386     1B91  00A0               	movwf	?___lwdiv
  4387     1B92                     l742:
  4388     1B92  0008               	return
  4389     1B93                     __end_of___lwdiv:
  4390                           
  4391                           	psect	text9
  4392     0958                     __ptext9:	
  4393 ;; *************** function ___flmul *****************
  4394 ;; Defined at:
  4395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  b               4    8[BANK0 ] unsigned int 
  4398 ;;  a               4   12[BANK0 ] unsigned int 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  prod            4   28[BANK0 ] struct .
  4401 ;;  grs             4   22[BANK0 ] unsigned long 
  4402 ;;  temp            2   32[BANK0 ] struct .
  4403 ;;  bexp            1   27[BANK0 ] unsigned char 
  4404 ;;  aexp            1   26[BANK0 ] unsigned char 
  4405 ;;  sign            1   21[BANK0 ] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  4    8[BANK0 ] unsigned char 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4415 ;;      Params:         0       8       0       0       0
  4416 ;;      Locals:         0      13       0       0       0
  4417 ;;      Temps:          0       5       0       0       0
  4418 ;;      Totals:         0      26       0       0       0
  4419 ;;Total ram usage:       26 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 3
  4422 ;; This function calls:
  4423 ;;		__Umul8_16
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;;		_fround
  4427 ;;		_scale
  4428 ;;		_sprintf
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432     0958                     ___flmul:	
  4433                           ;psect for function ___flmul
  4434                           
  4435     0958                     l2767:	
  4436                           ;incstack = 0
  4437                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4438                           
  4439     0958  1283               	bcf	3,5	;RP0=0, select bank0
  4440     0959  1303               	bcf	3,6	;RP1=0, select bank0
  4441     095A  082B               	movf	___flmul@b+3,w
  4442     095B  3980               	andlw	128
  4443     095C  00B5               	movwf	___flmul@sign
  4444     095D                     l2769:
  4445     095D  082B               	movf	___flmul@b+3,w
  4446     095E  00B0               	movwf	??___flmul
  4447     095F  0730               	addwf	??___flmul,w
  4448     0960  00BB               	movwf	___flmul@bexp
  4449     0961                     l2771:
  4450     0961  1FAA               	btfss	___flmul@b+2,7
  4451     0962  2964               	goto	u3751
  4452     0963  2965               	goto	u3750
  4453     0964                     u3751:
  4454     0964  2966               	goto	l2775
  4455     0965                     u3750:
  4456     0965                     l2773:
  4457     0965  143B               	bsf	___flmul@bexp,0
  4458     0966                     l2775:
  4459     0966  083B               	movf	___flmul@bexp,w
  4460     0967  1903               	btfsc	3,2
  4461     0968  296A               	goto	u3761
  4462     0969  296B               	goto	u3760
  4463     096A                     u3761:
  4464     096A  297A               	goto	l2783
  4465     096B                     u3760:
  4466     096B                     l2777:
  4467     096B  0A3B               	incf	___flmul@bexp,w
  4468     096C  1D03               	btfss	3,2
  4469     096D  296F               	goto	u3771
  4470     096E  2970               	goto	u3770
  4471     096F                     u3771:
  4472     096F  2978               	goto	l2781
  4473     0970                     u3770:
  4474     0970                     l2779:
  4475     0970  3000               	movlw	0
  4476     0971  00AB               	movwf	___flmul@b+3
  4477     0972  3000               	movlw	0
  4478     0973  00AA               	movwf	___flmul@b+2
  4479     0974  3000               	movlw	0
  4480     0975  00A9               	movwf	___flmul@b+1
  4481     0976  3000               	movlw	0
  4482     0977  00A8               	movwf	___flmul@b
  4483     0978                     l2781:
  4484     0978  17AA               	bsf	___flmul@b+2,7
  4485     0979  2982               	goto	l2785
  4486     097A                     l2783:
  4487     097A  3000               	movlw	0
  4488     097B  00AB               	movwf	___flmul@b+3
  4489     097C  3000               	movlw	0
  4490     097D  00AA               	movwf	___flmul@b+2
  4491     097E  3000               	movlw	0
  4492     097F  00A9               	movwf	___flmul@b+1
  4493     0980  3000               	movlw	0
  4494     0981  00A8               	movwf	___flmul@b
  4495     0982                     l2785:
  4496     0982  082F               	movf	___flmul@a+3,w
  4497     0983  3980               	andlw	128
  4498     0984  00B0               	movwf	??___flmul
  4499     0985  0830               	movf	??___flmul,w
  4500     0986  06B5               	xorwf	___flmul@sign,f
  4501     0987                     l2787:
  4502     0987  082F               	movf	___flmul@a+3,w
  4503     0988  00B0               	movwf	??___flmul
  4504     0989  0730               	addwf	??___flmul,w
  4505     098A  00BA               	movwf	___flmul@aexp
  4506     098B                     l2789:
  4507     098B  1FAE               	btfss	___flmul@a+2,7
  4508     098C  298E               	goto	u3781
  4509     098D  298F               	goto	u3780
  4510     098E                     u3781:
  4511     098E  2990               	goto	l2793
  4512     098F                     u3780:
  4513     098F                     l2791:
  4514     098F  143A               	bsf	___flmul@aexp,0
  4515     0990                     l2793:
  4516     0990  083A               	movf	___flmul@aexp,w
  4517     0991  1903               	btfsc	3,2
  4518     0992  2994               	goto	u3791
  4519     0993  2995               	goto	u3790
  4520     0994                     u3791:
  4521     0994  29A4               	goto	l2801
  4522     0995                     u3790:
  4523     0995                     l2795:
  4524     0995  0A3A               	incf	___flmul@aexp,w
  4525     0996  1D03               	btfss	3,2
  4526     0997  2999               	goto	u3801
  4527     0998  299A               	goto	u3800
  4528     0999                     u3801:
  4529     0999  29A2               	goto	l2799
  4530     099A                     u3800:
  4531     099A                     l2797:
  4532     099A  3000               	movlw	0
  4533     099B  00AF               	movwf	___flmul@a+3
  4534     099C  3000               	movlw	0
  4535     099D  00AE               	movwf	___flmul@a+2
  4536     099E  3000               	movlw	0
  4537     099F  00AD               	movwf	___flmul@a+1
  4538     09A0  3000               	movlw	0
  4539     09A1  00AC               	movwf	___flmul@a
  4540     09A2                     l2799:
  4541     09A2  17AE               	bsf	___flmul@a+2,7
  4542     09A3  29AC               	goto	l2803
  4543     09A4                     l2801:
  4544     09A4  3000               	movlw	0
  4545     09A5  00AF               	movwf	___flmul@a+3
  4546     09A6  3000               	movlw	0
  4547     09A7  00AE               	movwf	___flmul@a+2
  4548     09A8  3000               	movlw	0
  4549     09A9  00AD               	movwf	___flmul@a+1
  4550     09AA  3000               	movlw	0
  4551     09AB  00AC               	movwf	___flmul@a
  4552     09AC                     l2803:
  4553     09AC  083A               	movf	___flmul@aexp,w
  4554     09AD  1903               	btfsc	3,2
  4555     09AE  29B0               	goto	u3811
  4556     09AF  29B1               	goto	u3810
  4557     09B0                     u3811:
  4558     09B0  29B6               	goto	l2807
  4559     09B1                     u3810:
  4560     09B1                     l2805:
  4561     09B1  083B               	movf	___flmul@bexp,w
  4562     09B2  1D03               	btfss	3,2
  4563     09B3  29B5               	goto	u3821
  4564     09B4  29B6               	goto	u3820
  4565     09B5                     u3821:
  4566     09B5  29BF               	goto	l2811
  4567     09B6                     u3820:
  4568     09B6                     l2807:
  4569     09B6  3000               	movlw	0
  4570     09B7  00AB               	movwf	?___flmul+3
  4571     09B8  3000               	movlw	0
  4572     09B9  00AA               	movwf	?___flmul+2
  4573     09BA  3000               	movlw	0
  4574     09BB  00A9               	movwf	?___flmul+1
  4575     09BC  3000               	movlw	0
  4576     09BD  00A8               	movwf	?___flmul
  4577     09BE  2C9C               	goto	l859
  4578     09BF                     l2811:
  4579     09BF  0828               	movf	___flmul@b,w
  4580     09C0  00F2               	movwf	__Umul8_16@multiplicand
  4581     09C1  082E               	movf	___flmul@a+2,w
  4582     09C2  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4583     09C7  0873               	movf	?__Umul8_16+1,w
  4584     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  4585     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  4586     09CA  00C1               	movwf	___flmul@temp+1
  4587     09CB  0872               	movf	?__Umul8_16,w
  4588     09CC  00C0               	movwf	___flmul@temp
  4589     09CD                     l2813:
  4590     09CD  0840               	movf	___flmul@temp,w
  4591     09CE  00B0               	movwf	??___flmul
  4592     09CF  01B1               	clrf	??___flmul+1
  4593     09D0  01B2               	clrf	??___flmul+2
  4594     09D1  01B3               	clrf	??___flmul+3
  4595     09D2  0833               	movf	??___flmul+3,w
  4596     09D3  00B9               	movwf	___flmul@grs+3
  4597     09D4  0832               	movf	??___flmul+2,w
  4598     09D5  00B8               	movwf	___flmul@grs+2
  4599     09D6  0831               	movf	??___flmul+1,w
  4600     09D7  00B7               	movwf	___flmul@grs+1
  4601     09D8  0830               	movf	??___flmul,w
  4602     09D9  00B6               	movwf	___flmul@grs
  4603     09DA                     l2815:
  4604     09DA  0841               	movf	___flmul@temp+1,w
  4605     09DB  00B0               	movwf	??___flmul
  4606     09DC  01B1               	clrf	??___flmul+1
  4607     09DD  01B2               	clrf	??___flmul+2
  4608     09DE  01B3               	clrf	??___flmul+3
  4609     09DF  0833               	movf	??___flmul+3,w
  4610     09E0  00BF               	movwf	___flmul@prod+3
  4611     09E1  0832               	movf	??___flmul+2,w
  4612     09E2  00BE               	movwf	___flmul@prod+2
  4613     09E3  0831               	movf	??___flmul+1,w
  4614     09E4  00BD               	movwf	___flmul@prod+1
  4615     09E5  0830               	movf	??___flmul,w
  4616     09E6  00BC               	movwf	___flmul@prod
  4617     09E7  0829               	movf	___flmul@b+1,w
  4618     09E8  00F2               	movwf	__Umul8_16@multiplicand
  4619     09E9  082D               	movf	___flmul@a+1,w
  4620     09EA  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4621     09EF  0873               	movf	?__Umul8_16+1,w
  4622     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  4623     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  4624     09F2  00C1               	movwf	___flmul@temp+1
  4625     09F3  0872               	movf	?__Umul8_16,w
  4626     09F4  00C0               	movwf	___flmul@temp
  4627     09F5                     l2817:
  4628     09F5  0840               	movf	___flmul@temp,w
  4629     09F6  00B0               	movwf	??___flmul
  4630     09F7  01B1               	clrf	??___flmul+1
  4631     09F8  01B2               	clrf	??___flmul+2
  4632     09F9  01B3               	clrf	??___flmul+3
  4633     09FA  0830               	movf	??___flmul,w
  4634     09FB  07B6               	addwf	___flmul@grs,f
  4635     09FC  0831               	movf	??___flmul+1,w
  4636     09FD  1103               	clrz
  4637     09FE  1803               	skipnc
  4638     09FF  3E01               	addlw	1
  4639     0A00  1903               	skipnz
  4640     0A01  2A03               	goto	u3831
  4641     0A02  07B7               	addwf	___flmul@grs+1,f
  4642     0A03                     u3831:
  4643     0A03  0832               	movf	??___flmul+2,w
  4644     0A04  1103               	clrz
  4645     0A05  1803               	skipnc
  4646     0A06  3E01               	addlw	1
  4647     0A07  1903               	skipnz
  4648     0A08  2A0A               	goto	u3832
  4649     0A09  07B8               	addwf	___flmul@grs+2,f
  4650     0A0A                     u3832:
  4651     0A0A  0833               	movf	??___flmul+3,w
  4652     0A0B  1103               	clrz
  4653     0A0C  1803               	skipnc
  4654     0A0D  3E01               	addlw	1
  4655     0A0E  1903               	skipnz
  4656     0A0F  2A11               	goto	u3833
  4657     0A10  07B9               	addwf	___flmul@grs+3,f
  4658     0A11                     u3833:
  4659     0A11                     l2819:
  4660     0A11  0841               	movf	___flmul@temp+1,w
  4661     0A12  00B0               	movwf	??___flmul
  4662     0A13  01B1               	clrf	??___flmul+1
  4663     0A14  01B2               	clrf	??___flmul+2
  4664     0A15  01B3               	clrf	??___flmul+3
  4665     0A16  0830               	movf	??___flmul,w
  4666     0A17  07BC               	addwf	___flmul@prod,f
  4667     0A18  0831               	movf	??___flmul+1,w
  4668     0A19  1103               	clrz
  4669     0A1A  1803               	skipnc
  4670     0A1B  3E01               	addlw	1
  4671     0A1C  1903               	skipnz
  4672     0A1D  2A1F               	goto	u3841
  4673     0A1E  07BD               	addwf	___flmul@prod+1,f
  4674     0A1F                     u3841:
  4675     0A1F  0832               	movf	??___flmul+2,w
  4676     0A20  1103               	clrz
  4677     0A21  1803               	skipnc
  4678     0A22  3E01               	addlw	1
  4679     0A23  1903               	skipnz
  4680     0A24  2A26               	goto	u3842
  4681     0A25  07BE               	addwf	___flmul@prod+2,f
  4682     0A26                     u3842:
  4683     0A26  0833               	movf	??___flmul+3,w
  4684     0A27  1103               	clrz
  4685     0A28  1803               	skipnc
  4686     0A29  3E01               	addlw	1
  4687     0A2A  1903               	skipnz
  4688     0A2B  2A2D               	goto	u3843
  4689     0A2C  07BF               	addwf	___flmul@prod+3,f
  4690     0A2D                     u3843:
  4691     0A2D  082A               	movf	___flmul@b+2,w
  4692     0A2E  00F2               	movwf	__Umul8_16@multiplicand
  4693     0A2F  082C               	movf	___flmul@a,w
  4694     0A30  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4695     0A35  0873               	movf	?__Umul8_16+1,w
  4696     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  4697     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  4698     0A38  00C1               	movwf	___flmul@temp+1
  4699     0A39  0872               	movf	?__Umul8_16,w
  4700     0A3A  00C0               	movwf	___flmul@temp
  4701     0A3B                     l2821:
  4702     0A3B  0840               	movf	___flmul@temp,w
  4703     0A3C  00B0               	movwf	??___flmul
  4704     0A3D  01B1               	clrf	??___flmul+1
  4705     0A3E  01B2               	clrf	??___flmul+2
  4706     0A3F  01B3               	clrf	??___flmul+3
  4707     0A40  0830               	movf	??___flmul,w
  4708     0A41  07B6               	addwf	___flmul@grs,f
  4709     0A42  0831               	movf	??___flmul+1,w
  4710     0A43  1103               	clrz
  4711     0A44  1803               	skipnc
  4712     0A45  3E01               	addlw	1
  4713     0A46  1903               	skipnz
  4714     0A47  2A49               	goto	u3851
  4715     0A48  07B7               	addwf	___flmul@grs+1,f
  4716     0A49                     u3851:
  4717     0A49  0832               	movf	??___flmul+2,w
  4718     0A4A  1103               	clrz
  4719     0A4B  1803               	skipnc
  4720     0A4C  3E01               	addlw	1
  4721     0A4D  1903               	skipnz
  4722     0A4E  2A50               	goto	u3852
  4723     0A4F  07B8               	addwf	___flmul@grs+2,f
  4724     0A50                     u3852:
  4725     0A50  0833               	movf	??___flmul+3,w
  4726     0A51  1103               	clrz
  4727     0A52  1803               	skipnc
  4728     0A53  3E01               	addlw	1
  4729     0A54  1903               	skipnz
  4730     0A55  2A57               	goto	u3853
  4731     0A56  07B9               	addwf	___flmul@grs+3,f
  4732     0A57                     u3853:
  4733     0A57                     l2823:
  4734     0A57  0841               	movf	___flmul@temp+1,w
  4735     0A58  00B0               	movwf	??___flmul
  4736     0A59  01B1               	clrf	??___flmul+1
  4737     0A5A  01B2               	clrf	??___flmul+2
  4738     0A5B  01B3               	clrf	??___flmul+3
  4739     0A5C  0830               	movf	??___flmul,w
  4740     0A5D  07BC               	addwf	___flmul@prod,f
  4741     0A5E  0831               	movf	??___flmul+1,w
  4742     0A5F  1103               	clrz
  4743     0A60  1803               	skipnc
  4744     0A61  3E01               	addlw	1
  4745     0A62  1903               	skipnz
  4746     0A63  2A65               	goto	u3861
  4747     0A64  07BD               	addwf	___flmul@prod+1,f
  4748     0A65                     u3861:
  4749     0A65  0832               	movf	??___flmul+2,w
  4750     0A66  1103               	clrz
  4751     0A67  1803               	skipnc
  4752     0A68  3E01               	addlw	1
  4753     0A69  1903               	skipnz
  4754     0A6A  2A6C               	goto	u3862
  4755     0A6B  07BE               	addwf	___flmul@prod+2,f
  4756     0A6C                     u3862:
  4757     0A6C  0833               	movf	??___flmul+3,w
  4758     0A6D  1103               	clrz
  4759     0A6E  1803               	skipnc
  4760     0A6F  3E01               	addlw	1
  4761     0A70  1903               	skipnz
  4762     0A71  2A73               	goto	u3863
  4763     0A72  07BF               	addwf	___flmul@prod+3,f
  4764     0A73                     u3863:
  4765     0A73                     l2825:
  4766     0A73  3008               	movlw	8
  4767     0A74  00B0               	movwf	??___flmul
  4768     0A75                     u3875:
  4769     0A75  1003               	clrc
  4770     0A76  0DB6               	rlf	___flmul@grs,f
  4771     0A77  0DB7               	rlf	___flmul@grs+1,f
  4772     0A78  0DB8               	rlf	___flmul@grs+2,f
  4773     0A79  0DB9               	rlf	___flmul@grs+3,f
  4774     0A7A  0BB0               	decfsz	??___flmul,f
  4775     0A7B  2A75               	goto	u3875
  4776     0A7C                     l2827:
  4777     0A7C  0829               	movf	___flmul@b+1,w
  4778     0A7D  00F2               	movwf	__Umul8_16@multiplicand
  4779     0A7E  082C               	movf	___flmul@a,w
  4780     0A7F  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4781     0A84  0873               	movf	?__Umul8_16+1,w
  4782     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  4783     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  4784     0A87  00C1               	movwf	___flmul@temp+1
  4785     0A88  0872               	movf	?__Umul8_16,w
  4786     0A89  00C0               	movwf	___flmul@temp
  4787     0A8A                     l2829:
  4788     0A8A  0840               	movf	___flmul@temp,w
  4789     0A8B  00B0               	movwf	??___flmul
  4790     0A8C  0841               	movf	___flmul@temp+1,w
  4791     0A8D  00B1               	movwf	??___flmul+1
  4792     0A8E  01B2               	clrf	??___flmul+2
  4793     0A8F  01B3               	clrf	??___flmul+3
  4794     0A90  0830               	movf	??___flmul,w
  4795     0A91  07B6               	addwf	___flmul@grs,f
  4796     0A92  0831               	movf	??___flmul+1,w
  4797     0A93  1103               	clrz
  4798     0A94  1803               	skipnc
  4799     0A95  3E01               	addlw	1
  4800     0A96  1903               	skipnz
  4801     0A97  2A99               	goto	u3881
  4802     0A98  07B7               	addwf	___flmul@grs+1,f
  4803     0A99                     u3881:
  4804     0A99  0832               	movf	??___flmul+2,w
  4805     0A9A  1103               	clrz
  4806     0A9B  1803               	skipnc
  4807     0A9C  3E01               	addlw	1
  4808     0A9D  1903               	skipnz
  4809     0A9E  2AA0               	goto	u3882
  4810     0A9F  07B8               	addwf	___flmul@grs+2,f
  4811     0AA0                     u3882:
  4812     0AA0  0833               	movf	??___flmul+3,w
  4813     0AA1  1103               	clrz
  4814     0AA2  1803               	skipnc
  4815     0AA3  3E01               	addlw	1
  4816     0AA4  1903               	skipnz
  4817     0AA5  2AA7               	goto	u3883
  4818     0AA6  07B9               	addwf	___flmul@grs+3,f
  4819     0AA7                     u3883:
  4820     0AA7                     l2831:
  4821     0AA7  0828               	movf	___flmul@b,w
  4822     0AA8  00F2               	movwf	__Umul8_16@multiplicand
  4823     0AA9  082D               	movf	___flmul@a+1,w
  4824     0AAA  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4825     0AAF  0873               	movf	?__Umul8_16+1,w
  4826     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  4827     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  4828     0AB2  00C1               	movwf	___flmul@temp+1
  4829     0AB3  0872               	movf	?__Umul8_16,w
  4830     0AB4  00C0               	movwf	___flmul@temp
  4831     0AB5                     l2833:
  4832     0AB5  0840               	movf	___flmul@temp,w
  4833     0AB6  00B0               	movwf	??___flmul
  4834     0AB7  0841               	movf	___flmul@temp+1,w
  4835     0AB8  00B1               	movwf	??___flmul+1
  4836     0AB9  01B2               	clrf	??___flmul+2
  4837     0ABA  01B3               	clrf	??___flmul+3
  4838     0ABB  0830               	movf	??___flmul,w
  4839     0ABC  07B6               	addwf	___flmul@grs,f
  4840     0ABD  0831               	movf	??___flmul+1,w
  4841     0ABE  1103               	clrz
  4842     0ABF  1803               	skipnc
  4843     0AC0  3E01               	addlw	1
  4844     0AC1  1903               	skipnz
  4845     0AC2  2AC4               	goto	u3891
  4846     0AC3  07B7               	addwf	___flmul@grs+1,f
  4847     0AC4                     u3891:
  4848     0AC4  0832               	movf	??___flmul+2,w
  4849     0AC5  1103               	clrz
  4850     0AC6  1803               	skipnc
  4851     0AC7  3E01               	addlw	1
  4852     0AC8  1903               	skipnz
  4853     0AC9  2ACB               	goto	u3892
  4854     0ACA  07B8               	addwf	___flmul@grs+2,f
  4855     0ACB                     u3892:
  4856     0ACB  0833               	movf	??___flmul+3,w
  4857     0ACC  1103               	clrz
  4858     0ACD  1803               	skipnc
  4859     0ACE  3E01               	addlw	1
  4860     0ACF  1903               	skipnz
  4861     0AD0  2AD2               	goto	u3893
  4862     0AD1  07B9               	addwf	___flmul@grs+3,f
  4863     0AD2                     u3893:
  4864     0AD2                     l2835:
  4865     0AD2  3008               	movlw	8
  4866     0AD3  00B0               	movwf	??___flmul
  4867     0AD4                     u3905:
  4868     0AD4  1003               	clrc
  4869     0AD5  0DB6               	rlf	___flmul@grs,f
  4870     0AD6  0DB7               	rlf	___flmul@grs+1,f
  4871     0AD7  0DB8               	rlf	___flmul@grs+2,f
  4872     0AD8  0DB9               	rlf	___flmul@grs+3,f
  4873     0AD9  0BB0               	decfsz	??___flmul,f
  4874     0ADA  2AD4               	goto	u3905
  4875     0ADB  0828               	movf	___flmul@b,w
  4876     0ADC  00F2               	movwf	__Umul8_16@multiplicand
  4877     0ADD  082C               	movf	___flmul@a,w
  4878     0ADE  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4879     0AE3  0873               	movf	?__Umul8_16+1,w
  4880     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  4881     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  4882     0AE6  00C1               	movwf	___flmul@temp+1
  4883     0AE7  0872               	movf	?__Umul8_16,w
  4884     0AE8  00C0               	movwf	___flmul@temp
  4885     0AE9                     l2837:
  4886     0AE9  0840               	movf	___flmul@temp,w
  4887     0AEA  00B0               	movwf	??___flmul
  4888     0AEB  0841               	movf	___flmul@temp+1,w
  4889     0AEC  00B1               	movwf	??___flmul+1
  4890     0AED  01B2               	clrf	??___flmul+2
  4891     0AEE  01B3               	clrf	??___flmul+3
  4892     0AEF  0830               	movf	??___flmul,w
  4893     0AF0  07B6               	addwf	___flmul@grs,f
  4894     0AF1  0831               	movf	??___flmul+1,w
  4895     0AF2  1103               	clrz
  4896     0AF3  1803               	skipnc
  4897     0AF4  3E01               	addlw	1
  4898     0AF5  1903               	skipnz
  4899     0AF6  2AF8               	goto	u3911
  4900     0AF7  07B7               	addwf	___flmul@grs+1,f
  4901     0AF8                     u3911:
  4902     0AF8  0832               	movf	??___flmul+2,w
  4903     0AF9  1103               	clrz
  4904     0AFA  1803               	skipnc
  4905     0AFB  3E01               	addlw	1
  4906     0AFC  1903               	skipnz
  4907     0AFD  2AFF               	goto	u3912
  4908     0AFE  07B8               	addwf	___flmul@grs+2,f
  4909     0AFF                     u3912:
  4910     0AFF  0833               	movf	??___flmul+3,w
  4911     0B00  1103               	clrz
  4912     0B01  1803               	skipnc
  4913     0B02  3E01               	addlw	1
  4914     0B03  1903               	skipnz
  4915     0B04  2B06               	goto	u3913
  4916     0B05  07B9               	addwf	___flmul@grs+3,f
  4917     0B06                     u3913:
  4918     0B06                     l2839:
  4919     0B06  0829               	movf	___flmul@b+1,w
  4920     0B07  00F2               	movwf	__Umul8_16@multiplicand
  4921     0B08  082E               	movf	___flmul@a+2,w
  4922     0B09  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4923     0B0E  0873               	movf	?__Umul8_16+1,w
  4924     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  4925     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  4926     0B11  00C1               	movwf	___flmul@temp+1
  4927     0B12  0872               	movf	?__Umul8_16,w
  4928     0B13  00C0               	movwf	___flmul@temp
  4929     0B14  0840               	movf	___flmul@temp,w
  4930     0B15  00B0               	movwf	??___flmul
  4931     0B16  0841               	movf	___flmul@temp+1,w
  4932     0B17  00B1               	movwf	??___flmul+1
  4933     0B18  01B2               	clrf	??___flmul+2
  4934     0B19  01B3               	clrf	??___flmul+3
  4935     0B1A  0830               	movf	??___flmul,w
  4936     0B1B  07BC               	addwf	___flmul@prod,f
  4937     0B1C  0831               	movf	??___flmul+1,w
  4938     0B1D  1103               	clrz
  4939     0B1E  1803               	skipnc
  4940     0B1F  3E01               	addlw	1
  4941     0B20  1903               	skipnz
  4942     0B21  2B23               	goto	u3921
  4943     0B22  07BD               	addwf	___flmul@prod+1,f
  4944     0B23                     u3921:
  4945     0B23  0832               	movf	??___flmul+2,w
  4946     0B24  1103               	clrz
  4947     0B25  1803               	skipnc
  4948     0B26  3E01               	addlw	1
  4949     0B27  1903               	skipnz
  4950     0B28  2B2A               	goto	u3922
  4951     0B29  07BE               	addwf	___flmul@prod+2,f
  4952     0B2A                     u3922:
  4953     0B2A  0833               	movf	??___flmul+3,w
  4954     0B2B  1103               	clrz
  4955     0B2C  1803               	skipnc
  4956     0B2D  3E01               	addlw	1
  4957     0B2E  1903               	skipnz
  4958     0B2F  2B31               	goto	u3923
  4959     0B30  07BF               	addwf	___flmul@prod+3,f
  4960     0B31                     u3923:
  4961     0B31                     l2841:
  4962     0B31  082A               	movf	___flmul@b+2,w
  4963     0B32  00F2               	movwf	__Umul8_16@multiplicand
  4964     0B33  082D               	movf	___flmul@a+1,w
  4965     0B34  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  4966     0B39  0873               	movf	?__Umul8_16+1,w
  4967     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  4968     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  4969     0B3C  00C1               	movwf	___flmul@temp+1
  4970     0B3D  0872               	movf	?__Umul8_16,w
  4971     0B3E  00C0               	movwf	___flmul@temp
  4972     0B3F                     l2843:
  4973     0B3F  0840               	movf	___flmul@temp,w
  4974     0B40  00B0               	movwf	??___flmul
  4975     0B41  0841               	movf	___flmul@temp+1,w
  4976     0B42  00B1               	movwf	??___flmul+1
  4977     0B43  01B2               	clrf	??___flmul+2
  4978     0B44  01B3               	clrf	??___flmul+3
  4979     0B45  0830               	movf	??___flmul,w
  4980     0B46  07BC               	addwf	___flmul@prod,f
  4981     0B47  0831               	movf	??___flmul+1,w
  4982     0B48  1103               	clrz
  4983     0B49  1803               	skipnc
  4984     0B4A  3E01               	addlw	1
  4985     0B4B  1903               	skipnz
  4986     0B4C  2B4E               	goto	u3931
  4987     0B4D  07BD               	addwf	___flmul@prod+1,f
  4988     0B4E                     u3931:
  4989     0B4E  0832               	movf	??___flmul+2,w
  4990     0B4F  1103               	clrz
  4991     0B50  1803               	skipnc
  4992     0B51  3E01               	addlw	1
  4993     0B52  1903               	skipnz
  4994     0B53  2B55               	goto	u3932
  4995     0B54  07BE               	addwf	___flmul@prod+2,f
  4996     0B55                     u3932:
  4997     0B55  0833               	movf	??___flmul+3,w
  4998     0B56  1103               	clrz
  4999     0B57  1803               	skipnc
  5000     0B58  3E01               	addlw	1
  5001     0B59  1903               	skipnz
  5002     0B5A  2B5C               	goto	u3933
  5003     0B5B  07BF               	addwf	___flmul@prod+3,f
  5004     0B5C                     u3933:
  5005     0B5C  082A               	movf	___flmul@b+2,w
  5006     0B5D  00F2               	movwf	__Umul8_16@multiplicand
  5007     0B5E  082E               	movf	___flmul@a+2,w
  5008     0B5F  160A  158A  22A6  120A  158A  	fcall	__Umul8_16
  5009     0B64  0873               	movf	?__Umul8_16+1,w
  5010     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0B67  00C1               	movwf	___flmul@temp+1
  5013     0B68  0872               	movf	?__Umul8_16,w
  5014     0B69  00C0               	movwf	___flmul@temp
  5015     0B6A                     l2845:
  5016     0B6A  0840               	movf	___flmul@temp,w
  5017     0B6B  00B0               	movwf	??___flmul
  5018     0B6C  0841               	movf	___flmul@temp+1,w
  5019     0B6D  00B1               	movwf	??___flmul+1
  5020     0B6E  01B2               	clrf	??___flmul+2
  5021     0B6F  01B3               	clrf	??___flmul+3
  5022     0B70  3008               	movlw	8
  5023     0B71                     u3945:
  5024     0B71  1003               	clrc
  5025     0B72  0DB0               	rlf	??___flmul,f
  5026     0B73  0DB1               	rlf	??___flmul+1,f
  5027     0B74  0DB2               	rlf	??___flmul+2,f
  5028     0B75  0DB3               	rlf	??___flmul+3,f
  5029     0B76                     u3940:
  5030     0B76  3EFF               	addlw	-1
  5031     0B77  1D03               	skipz
  5032     0B78  2B71               	goto	u3945
  5033     0B79  0830               	movf	??___flmul,w
  5034     0B7A  07BC               	addwf	___flmul@prod,f
  5035     0B7B  0831               	movf	??___flmul+1,w
  5036     0B7C  1103               	clrz
  5037     0B7D  1803               	skipnc
  5038     0B7E  3E01               	addlw	1
  5039     0B7F  1903               	skipnz
  5040     0B80  2B82               	goto	u3951
  5041     0B81  07BD               	addwf	___flmul@prod+1,f
  5042     0B82                     u3951:
  5043     0B82  0832               	movf	??___flmul+2,w
  5044     0B83  1103               	clrz
  5045     0B84  1803               	skipnc
  5046     0B85  3E01               	addlw	1
  5047     0B86  1903               	skipnz
  5048     0B87  2B89               	goto	u3952
  5049     0B88  07BE               	addwf	___flmul@prod+2,f
  5050     0B89                     u3952:
  5051     0B89  0833               	movf	??___flmul+3,w
  5052     0B8A  1103               	clrz
  5053     0B8B  1803               	skipnc
  5054     0B8C  3E01               	addlw	1
  5055     0B8D  1903               	skipnz
  5056     0B8E  2B90               	goto	u3953
  5057     0B8F  07BF               	addwf	___flmul@prod+3,f
  5058     0B90                     u3953:
  5059     0B90                     l2847:
  5060     0B90  0836               	movf	___flmul@grs,w
  5061     0B91  00B0               	movwf	??___flmul
  5062     0B92  0837               	movf	___flmul@grs+1,w
  5063     0B93  00B1               	movwf	??___flmul+1
  5064     0B94  0838               	movf	___flmul@grs+2,w
  5065     0B95  00B2               	movwf	??___flmul+2
  5066     0B96  0839               	movf	___flmul@grs+3,w
  5067     0B97  00B3               	movwf	??___flmul+3
  5068     0B98  3018               	movlw	24
  5069     0B99                     u3965:
  5070     0B99  1003               	clrc
  5071     0B9A  0CB3               	rrf	??___flmul+3,f
  5072     0B9B  0CB2               	rrf	??___flmul+2,f
  5073     0B9C  0CB1               	rrf	??___flmul+1,f
  5074     0B9D  0CB0               	rrf	??___flmul,f
  5075     0B9E                     u3960:
  5076     0B9E  3EFF               	addlw	-1
  5077     0B9F  1D03               	skipz
  5078     0BA0  2B99               	goto	u3965
  5079     0BA1  0830               	movf	??___flmul,w
  5080     0BA2  07BC               	addwf	___flmul@prod,f
  5081     0BA3  0831               	movf	??___flmul+1,w
  5082     0BA4  1103               	clrz
  5083     0BA5  1803               	skipnc
  5084     0BA6  3E01               	addlw	1
  5085     0BA7  1903               	skipnz
  5086     0BA8  2BAA               	goto	u3971
  5087     0BA9  07BD               	addwf	___flmul@prod+1,f
  5088     0BAA                     u3971:
  5089     0BAA  0832               	movf	??___flmul+2,w
  5090     0BAB  1103               	clrz
  5091     0BAC  1803               	skipnc
  5092     0BAD  3E01               	addlw	1
  5093     0BAE  1903               	skipnz
  5094     0BAF  2BB1               	goto	u3972
  5095     0BB0  07BE               	addwf	___flmul@prod+2,f
  5096     0BB1                     u3972:
  5097     0BB1  0833               	movf	??___flmul+3,w
  5098     0BB2  1103               	clrz
  5099     0BB3  1803               	skipnc
  5100     0BB4  3E01               	addlw	1
  5101     0BB5  1903               	skipnz
  5102     0BB6  2BB8               	goto	u3973
  5103     0BB7  07BF               	addwf	___flmul@prod+3,f
  5104     0BB8                     u3973:
  5105     0BB8                     l2849:
  5106     0BB8  3008               	movlw	8
  5107     0BB9  00B0               	movwf	??___flmul
  5108     0BBA                     u3985:
  5109     0BBA  1003               	clrc
  5110     0BBB  0DB6               	rlf	___flmul@grs,f
  5111     0BBC  0DB7               	rlf	___flmul@grs+1,f
  5112     0BBD  0DB8               	rlf	___flmul@grs+2,f
  5113     0BBE  0DB9               	rlf	___flmul@grs+3,f
  5114     0BBF  0BB0               	decfsz	??___flmul,f
  5115     0BC0  2BBA               	goto	u3985
  5116     0BC1                     l2851:
  5117     0BC1  083B               	movf	___flmul@bexp,w
  5118     0BC2  073A               	addwf	___flmul@aexp,w
  5119     0BC3  00B0               	movwf	??___flmul
  5120     0BC4  01B1               	clrf	??___flmul+1
  5121     0BC5  0DB1               	rlf	??___flmul+1,f
  5122     0BC6  0830               	movf	??___flmul,w
  5123     0BC7  3E82               	addlw	130
  5124     0BC8  00C0               	movwf	___flmul@temp
  5125     0BC9  0831               	movf	??___flmul+1,w
  5126     0BCA  1803               	skipnc
  5127     0BCB  3E01               	addlw	1
  5128     0BCC  3EFF               	addlw	255
  5129     0BCD  00C1               	movwf	___flmul@temp+1
  5130     0BCE  2BEC               	goto	l2863
  5131     0BCF                     l2853:
  5132     0BCF  3001               	movlw	1
  5133     0BD0  00B0               	movwf	??___flmul
  5134     0BD1                     u3995:
  5135     0BD1  1003               	clrc
  5136     0BD2  0DBC               	rlf	___flmul@prod,f
  5137     0BD3  0DBD               	rlf	___flmul@prod+1,f
  5138     0BD4  0DBE               	rlf	___flmul@prod+2,f
  5139     0BD5  0DBF               	rlf	___flmul@prod+3,f
  5140     0BD6  0BB0               	decfsz	??___flmul,f
  5141     0BD7  2BD1               	goto	u3995
  5142     0BD8                     l2855:
  5143     0BD8  1FB9               	btfss	___flmul@grs+3,7
  5144     0BD9  2BDB               	goto	u4001
  5145     0BDA  2BDC               	goto	u4000
  5146     0BDB                     u4001:
  5147     0BDB  2BDD               	goto	l2859
  5148     0BDC                     u4000:
  5149     0BDC                     l2857:
  5150     0BDC  143C               	bsf	___flmul@prod,0
  5151     0BDD                     l2859:
  5152     0BDD  3001               	movlw	1
  5153     0BDE  00B0               	movwf	??___flmul
  5154     0BDF                     u4015:
  5155     0BDF  1003               	clrc
  5156     0BE0  0DB6               	rlf	___flmul@grs,f
  5157     0BE1  0DB7               	rlf	___flmul@grs+1,f
  5158     0BE2  0DB8               	rlf	___flmul@grs+2,f
  5159     0BE3  0DB9               	rlf	___flmul@grs+3,f
  5160     0BE4  0BB0               	decfsz	??___flmul,f
  5161     0BE5  2BDF               	goto	u4015
  5162     0BE6                     l2861:
  5163     0BE6  30FF               	movlw	255
  5164     0BE7  07C0               	addwf	___flmul@temp,f
  5165     0BE8  1803               	skipnc
  5166     0BE9  0AC1               	incf	___flmul@temp+1,f
  5167     0BEA  30FF               	movlw	255
  5168     0BEB  07C1               	addwf	___flmul@temp+1,f
  5169     0BEC                     l2863:
  5170     0BEC  1FBE               	btfss	___flmul@prod+2,7
  5171     0BED  2BEF               	goto	u4021
  5172     0BEE  2BF0               	goto	u4020
  5173     0BEF                     u4021:
  5174     0BEF  2BCF               	goto	l2853
  5175     0BF0                     u4020:
  5176     0BF0                     l2865:
  5177     0BF0  01BA               	clrf	___flmul@aexp
  5178     0BF1                     l2867:
  5179     0BF1  1FB9               	btfss	___flmul@grs+3,7
  5180     0BF2  2BF4               	goto	u4031
  5181     0BF3  2BF5               	goto	u4030
  5182     0BF4                     u4031:
  5183     0BF4  2C11               	goto	l2875
  5184     0BF5                     u4030:
  5185     0BF5                     l2869:
  5186     0BF5  30FF               	movlw	255
  5187     0BF6  0536               	andwf	___flmul@grs,w
  5188     0BF7  00B0               	movwf	??___flmul
  5189     0BF8  30FF               	movlw	255
  5190     0BF9  0537               	andwf	___flmul@grs+1,w
  5191     0BFA  00B1               	movwf	??___flmul+1
  5192     0BFB  30FF               	movlw	255
  5193     0BFC  0538               	andwf	___flmul@grs+2,w
  5194     0BFD  00B2               	movwf	??___flmul+2
  5195     0BFE  307F               	movlw	127
  5196     0BFF  0539               	andwf	___flmul@grs+3,w
  5197     0C00  00B3               	movwf	??___flmul+3
  5198     0C01  0833               	movf	??___flmul+3,w
  5199     0C02  0432               	iorwf	??___flmul+2,w
  5200     0C03  0431               	iorwf	??___flmul+1,w
  5201     0C04  0430               	iorwf	??___flmul,w
  5202     0C05  1903               	skipnz
  5203     0C06  2C08               	goto	u4041
  5204     0C07  2C09               	goto	u4040
  5205     0C08                     u4041:
  5206     0C08  2C0C               	goto	l865
  5207     0C09                     u4040:
  5208     0C09                     l2871:
  5209     0C09  01BA               	clrf	___flmul@aexp
  5210     0C0A  0ABA               	incf	___flmul@aexp,f
  5211     0C0B  2C11               	goto	l2875
  5212     0C0C                     l865:
  5213     0C0C  1C3C               	btfss	___flmul@prod,0
  5214     0C0D  2C0F               	goto	u4051
  5215     0C0E  2C10               	goto	u4050
  5216     0C0F                     u4051:
  5217     0C0F  2C11               	goto	l2875
  5218     0C10                     u4050:
  5219     0C10  2C09               	goto	l2871
  5220     0C11                     l2875:
  5221     0C11  083A               	movf	___flmul@aexp,w
  5222     0C12  1903               	btfsc	3,2
  5223     0C13  2C15               	goto	u4061
  5224     0C14  2C16               	goto	u4060
  5225     0C15                     u4061:
  5226     0C15  2C47               	goto	l2885
  5227     0C16                     u4060:
  5228     0C16                     l2877:
  5229     0C16  3001               	movlw	1
  5230     0C17  07BC               	addwf	___flmul@prod,f
  5231     0C18  3000               	movlw	0
  5232     0C19  1803               	skipnc
  5233     0C1A  3001               	movlw	1
  5234     0C1B  07BD               	addwf	___flmul@prod+1,f
  5235     0C1C  3000               	movlw	0
  5236     0C1D  1803               	skipnc
  5237     0C1E  3001               	movlw	1
  5238     0C1F  07BE               	addwf	___flmul@prod+2,f
  5239     0C20  3000               	movlw	0
  5240     0C21  1803               	skipnc
  5241     0C22  3001               	movlw	1
  5242     0C23  07BF               	addwf	___flmul@prod+3,f
  5243     0C24                     l2879:
  5244     0C24  1C3F               	btfss	___flmul@prod+3,0
  5245     0C25  2C27               	goto	u4071
  5246     0C26  2C28               	goto	u4070
  5247     0C27                     u4071:
  5248     0C27  2C47               	goto	l2885
  5249     0C28                     u4070:
  5250     0C28                     l2881:
  5251     0C28  083C               	movf	___flmul@prod,w
  5252     0C29  00B0               	movwf	??___flmul
  5253     0C2A  083D               	movf	___flmul@prod+1,w
  5254     0C2B  00B1               	movwf	??___flmul+1
  5255     0C2C  083E               	movf	___flmul@prod+2,w
  5256     0C2D  00B2               	movwf	??___flmul+2
  5257     0C2E  083F               	movf	___flmul@prod+3,w
  5258     0C2F  00B3               	movwf	??___flmul+3
  5259     0C30  3001               	movlw	1
  5260     0C31  00B4               	movwf	??___flmul+4
  5261     0C32                     u4085:
  5262     0C32  0D33               	rlf	??___flmul+3,w
  5263     0C33  0CB3               	rrf	??___flmul+3,f
  5264     0C34  0CB2               	rrf	??___flmul+2,f
  5265     0C35  0CB1               	rrf	??___flmul+1,f
  5266     0C36  0CB0               	rrf	??___flmul,f
  5267     0C37                     u4080:
  5268     0C37  0BB4               	decfsz	??___flmul+4,f
  5269     0C38  2C32               	goto	u4085
  5270     0C39  0833               	movf	??___flmul+3,w
  5271     0C3A  00BF               	movwf	___flmul@prod+3
  5272     0C3B  0832               	movf	??___flmul+2,w
  5273     0C3C  00BE               	movwf	___flmul@prod+2
  5274     0C3D  0831               	movf	??___flmul+1,w
  5275     0C3E  00BD               	movwf	___flmul@prod+1
  5276     0C3F  0830               	movf	??___flmul,w
  5277     0C40  00BC               	movwf	___flmul@prod
  5278     0C41                     l2883:
  5279     0C41  3001               	movlw	1
  5280     0C42  07C0               	addwf	___flmul@temp,f
  5281     0C43  1803               	skipnc
  5282     0C44  0AC1               	incf	___flmul@temp+1,f
  5283     0C45  3000               	movlw	0
  5284     0C46  07C1               	addwf	___flmul@temp+1,f
  5285     0C47                     l2885:
  5286     0C47  0841               	movf	___flmul@temp+1,w
  5287     0C48  3A80               	xorlw	128
  5288     0C49  00FF               	movwf	btemp+1
  5289     0C4A  3080               	movlw	128
  5290     0C4B  027F               	subwf	btemp+1,w
  5291     0C4C  1D03               	skipz
  5292     0C4D  2C50               	goto	u4095
  5293     0C4E  30FF               	movlw	255
  5294     0C4F  0240               	subwf	___flmul@temp,w
  5295     0C50                     u4095:
  5296     0C50  1C03               	skipc
  5297     0C51  2C53               	goto	u4091
  5298     0C52  2C54               	goto	u4090
  5299     0C53                     u4091:
  5300     0C53  2C5F               	goto	l2889
  5301     0C54                     u4090:
  5302     0C54                     l2887:
  5303     0C54  307F               	movlw	127
  5304     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  5305     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  5306     0C57  00BF               	movwf	___flmul@prod+3
  5307     0C58  3080               	movlw	128
  5308     0C59  00BE               	movwf	___flmul@prod+2
  5309     0C5A  3000               	movlw	0
  5310     0C5B  00BD               	movwf	___flmul@prod+1
  5311     0C5C  3000               	movlw	0
  5312     0C5D  00BC               	movwf	___flmul@prod
  5313     0C5E  2C90               	goto	l871
  5314     0C5F                     l2889:
  5315     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  5316     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  5317     0C61  0841               	movf	___flmul@temp+1,w
  5318     0C62  3A80               	xorlw	128
  5319     0C63  00FF               	movwf	btemp+1
  5320     0C64  3080               	movlw	128
  5321     0C65  027F               	subwf	btemp+1,w
  5322     0C66  1D03               	skipz
  5323     0C67  2C6A               	goto	u4105
  5324     0C68  3001               	movlw	1
  5325     0C69  0240               	subwf	___flmul@temp,w
  5326     0C6A                     u4105:
  5327     0C6A  1803               	skipnc
  5328     0C6B  2C6D               	goto	u4101
  5329     0C6C  2C6E               	goto	u4100
  5330     0C6D                     u4101:
  5331     0C6D  2C7A               	goto	l2895
  5332     0C6E                     u4100:
  5333     0C6E                     l2891:
  5334     0C6E  3000               	movlw	0
  5335     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  5336     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  5337     0C71  00BF               	movwf	___flmul@prod+3
  5338     0C72  3000               	movlw	0
  5339     0C73  00BE               	movwf	___flmul@prod+2
  5340     0C74  3000               	movlw	0
  5341     0C75  00BD               	movwf	___flmul@prod+1
  5342     0C76  3000               	movlw	0
  5343     0C77  00BC               	movwf	___flmul@prod
  5344     0C78                     l2893:
  5345     0C78  01B5               	clrf	___flmul@sign
  5346     0C79  2C90               	goto	l871
  5347     0C7A                     l2895:
  5348     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5349     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5350     0C7C  0840               	movf	___flmul@temp,w
  5351     0C7D  00BB               	movwf	___flmul@bexp
  5352     0C7E  30FF               	movlw	255
  5353     0C7F  05BC               	andwf	___flmul@prod,f
  5354     0C80  30FF               	movlw	255
  5355     0C81  05BD               	andwf	___flmul@prod+1,f
  5356     0C82  307F               	movlw	127
  5357     0C83  05BE               	andwf	___flmul@prod+2,f
  5358     0C84  3000               	movlw	0
  5359     0C85  05BF               	andwf	___flmul@prod+3,f
  5360     0C86                     l2897:
  5361     0C86  1C3B               	btfss	___flmul@bexp,0
  5362     0C87  2C89               	goto	u4111
  5363     0C88  2C8A               	goto	u4110
  5364     0C89                     u4111:
  5365     0C89  2C8B               	goto	l2901
  5366     0C8A                     u4110:
  5367     0C8A                     l2899:
  5368     0C8A  17BE               	bsf	___flmul@prod+2,7
  5369     0C8B                     l2901:
  5370     0C8B  083B               	movf	___flmul@bexp,w
  5371     0C8C  00B0               	movwf	??___flmul
  5372     0C8D  1003               	clrc
  5373     0C8E  0C30               	rrf	??___flmul,w
  5374     0C8F  00BF               	movwf	___flmul@prod+3
  5375     0C90                     l871:
  5376     0C90  0835               	movf	___flmul@sign,w
  5377     0C91  00B0               	movwf	??___flmul
  5378     0C92  0830               	movf	??___flmul,w
  5379     0C93  04BF               	iorwf	___flmul@prod+3,f
  5380     0C94                     l2903:
  5381     0C94  083F               	movf	___flmul@prod+3,w
  5382     0C95  00AB               	movwf	?___flmul+3
  5383     0C96  083E               	movf	___flmul@prod+2,w
  5384     0C97  00AA               	movwf	?___flmul+2
  5385     0C98  083D               	movf	___flmul@prod+1,w
  5386     0C99  00A9               	movwf	?___flmul+1
  5387     0C9A  083C               	movf	___flmul@prod,w
  5388     0C9B  00A8               	movwf	?___flmul
  5389     0C9C                     l859:
  5390     0C9C  0008               	return
  5391     0C9D                     __end_of___flmul:
  5392                           
  5393                           	psect	text10
  5394     1AA6                     __ptext10:	
  5395 ;; *************** function __Umul8_16 *****************
  5396 ;; Defined at:
  5397 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  multiplier      1    wreg     unsigned char 
  5400 ;;  multiplicand    1    2[COMMON] unsigned char 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  multiplier      1   10[COMMON] unsigned char 
  5403 ;;  word_mpld       2    8[COMMON] unsigned int 
  5404 ;;  product         2    6[COMMON] unsigned int 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  2    2[COMMON] unsigned int 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5414 ;;      Params:         2       0       0       0       0
  5415 ;;      Locals:         5       0       0       0       0
  5416 ;;      Temps:          2       0       0       0       0
  5417 ;;      Totals:         9       0       0       0       0
  5418 ;;Total ram usage:        9 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 2
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		___flmul
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428     1AA6                     __Umul8_16:	
  5429                           ;psect for function __Umul8_16
  5430                           
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5434                           ;__Umul8_16@multiplier stored from wreg
  5435     1AA6  00FA               	movwf	__Umul8_16@multiplier
  5436     1AA7                     l2411:
  5437     1AA7  01F6               	clrf	__Umul8_16@product
  5438     1AA8  01F7               	clrf	__Umul8_16@product+1
  5439     1AA9                     l2413:
  5440     1AA9  0872               	movf	__Umul8_16@multiplicand,w
  5441     1AAA  00F4               	movwf	??__Umul8_16
  5442     1AAB  01F5               	clrf	??__Umul8_16+1
  5443     1AAC  0874               	movf	??__Umul8_16,w
  5444     1AAD  00F8               	movwf	__Umul8_16@word_mpld
  5445     1AAE  0875               	movf	??__Umul8_16+1,w
  5446     1AAF  00F9               	movwf	__Umul8_16@word_mpld+1
  5447     1AB0                     l2415:
  5448     1AB0  1C7A               	btfss	__Umul8_16@multiplier,0
  5449     1AB1  2AB3               	goto	u2861
  5450     1AB2  2AB4               	goto	u2860
  5451     1AB3                     u2861:
  5452     1AB3  2ABA               	goto	l878
  5453     1AB4                     u2860:
  5454     1AB4                     l2417:
  5455     1AB4  0878               	movf	__Umul8_16@word_mpld,w
  5456     1AB5  07F6               	addwf	__Umul8_16@product,f
  5457     1AB6  1803               	skipnc
  5458     1AB7  0AF7               	incf	__Umul8_16@product+1,f
  5459     1AB8  0879               	movf	__Umul8_16@word_mpld+1,w
  5460     1AB9  07F7               	addwf	__Umul8_16@product+1,f
  5461     1ABA                     l878:
  5462     1ABA  3001               	movlw	1
  5463     1ABB                     u2875:
  5464     1ABB  1003               	clrc
  5465     1ABC  0DF8               	rlf	__Umul8_16@word_mpld,f
  5466     1ABD  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5467     1ABE  3EFF               	addlw	-1
  5468     1ABF  1D03               	skipz
  5469     1AC0  2ABB               	goto	u2875
  5470     1AC1  1003               	clrc
  5471     1AC2  0CFA               	rrf	__Umul8_16@multiplier,f
  5472     1AC3                     l2419:
  5473     1AC3  087A               	movf	__Umul8_16@multiplier,w
  5474     1AC4  1D03               	btfss	3,2
  5475     1AC5  2AC7               	goto	u2881
  5476     1AC6  2AC8               	goto	u2880
  5477     1AC7                     u2881:
  5478     1AC7  2AB0               	goto	l2415
  5479     1AC8                     u2880:
  5480     1AC8                     l2421:
  5481     1AC8  0877               	movf	__Umul8_16@product+1,w
  5482     1AC9  00F3               	movwf	?__Umul8_16+1
  5483     1ACA  0876               	movf	__Umul8_16@product,w
  5484     1ACB  00F2               	movwf	?__Umul8_16
  5485     1ACC                     l880:
  5486     1ACC  0008               	return
  5487     1ACD                     __end_of__Umul8_16:
  5488                           
  5489                           	psect	text11
  5490     1E91                     __ptext11:	
  5491 ;; *************** function __tdiv_to_l_ *****************
  5492 ;; Defined at:
  5493 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  f1              4    2[COMMON] float 
  5496 ;;  f2              4    6[COMMON] float 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  quot            4    3[BANK0 ] unsigned long 
  5499 ;;  exp1            1    8[BANK0 ] unsigned char 
  5500 ;;  cntr            1    7[BANK0 ] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4    2[COMMON] unsigned long 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         8       0       0       0       0
  5511 ;;      Locals:         0       6       0       0       0
  5512 ;;      Temps:          0       3       0       0       0
  5513 ;;      Totals:         8       9       0       0       0
  5514 ;;Total ram usage:       17 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 2
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_sprintf
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524     1E91                     __tdiv_to_l_:	
  5525                           ;psect for function __tdiv_to_l_
  5526                           
  5527     1E91                     l3009:	
  5528                           ;incstack = 0
  5529                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5530                           
  5531     1E91  0872               	movf	__tdiv_to_l_@f1,w
  5532     1E92  1283               	bcf	3,5	;RP0=0, select bank0
  5533     1E93  1303               	bcf	3,6	;RP1=0, select bank0
  5534     1E94  00A0               	movwf	??__tdiv_to_l_
  5535     1E95  0873               	movf	__tdiv_to_l_@f1+1,w
  5536     1E96  00A1               	movwf	??__tdiv_to_l_+1
  5537     1E97  0874               	movf	__tdiv_to_l_@f1+2,w
  5538     1E98  00A2               	movwf	??__tdiv_to_l_+2
  5539     1E99  1003               	clrc
  5540     1E9A  0D21               	rlf	??__tdiv_to_l_+1,w
  5541     1E9B  0D22               	rlf	??__tdiv_to_l_+2,w
  5542     1E9C  00A8               	movwf	__tdiv_to_l_@exp1
  5543     1E9D  0828               	movf	__tdiv_to_l_@exp1,w
  5544     1E9E  1D03               	btfss	3,2
  5545     1E9F  2EA1               	goto	u4401
  5546     1EA0  2EA2               	goto	u4400
  5547     1EA1                     u4401:
  5548     1EA1  2EAB               	goto	l3015
  5549     1EA2                     u4400:
  5550     1EA2                     l3011:
  5551     1EA2  3000               	movlw	0
  5552     1EA3  00F5               	movwf	?__tdiv_to_l_+3
  5553     1EA4  3000               	movlw	0
  5554     1EA5  00F4               	movwf	?__tdiv_to_l_+2
  5555     1EA6  3000               	movlw	0
  5556     1EA7  00F3               	movwf	?__tdiv_to_l_+1
  5557     1EA8  3000               	movlw	0
  5558     1EA9  00F2               	movwf	?__tdiv_to_l_
  5559     1EAA  2F47               	goto	l653
  5560     1EAB                     l3015:
  5561     1EAB  0876               	movf	__tdiv_to_l_@f2,w
  5562     1EAC  00A0               	movwf	??__tdiv_to_l_
  5563     1EAD  0877               	movf	__tdiv_to_l_@f2+1,w
  5564     1EAE  00A1               	movwf	??__tdiv_to_l_+1
  5565     1EAF  0878               	movf	__tdiv_to_l_@f2+2,w
  5566     1EB0  00A2               	movwf	??__tdiv_to_l_+2
  5567     1EB1  1003               	clrc
  5568     1EB2  0D21               	rlf	??__tdiv_to_l_+1,w
  5569     1EB3  0D22               	rlf	??__tdiv_to_l_+2,w
  5570     1EB4  00A7               	movwf	__tdiv_to_l_@cntr
  5571     1EB5  0827               	movf	__tdiv_to_l_@cntr,w
  5572     1EB6  1D03               	btfss	3,2
  5573     1EB7  2EB9               	goto	u4411
  5574     1EB8  2EBA               	goto	u4410
  5575     1EB9                     u4411:
  5576     1EB9  2EBB               	goto	l654
  5577     1EBA                     u4410:
  5578     1EBA  2EA2               	goto	l3011
  5579     1EBB                     l654:
  5580     1EBB  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5581     1EBC                     l3021:
  5582     1EBC  30FF               	movlw	255
  5583     1EBD  05F2               	andwf	__tdiv_to_l_@f1,f
  5584     1EBE  30FF               	movlw	255
  5585     1EBF  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5586     1EC0  3000               	movlw	0
  5587     1EC1  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5588     1EC2                     l3023:
  5589     1EC2  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5590     1EC3  30FF               	movlw	255
  5591     1EC4  05F6               	andwf	__tdiv_to_l_@f2,f
  5592     1EC5  30FF               	movlw	255
  5593     1EC6  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5594     1EC7  3000               	movlw	0
  5595     1EC8  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5596     1EC9  3000               	movlw	0
  5597     1ECA  00A6               	movwf	__tdiv_to_l_@quot+3
  5598     1ECB  3000               	movlw	0
  5599     1ECC  00A5               	movwf	__tdiv_to_l_@quot+2
  5600     1ECD  3000               	movlw	0
  5601     1ECE  00A4               	movwf	__tdiv_to_l_@quot+1
  5602     1ECF  3000               	movlw	0
  5603     1ED0  00A3               	movwf	__tdiv_to_l_@quot
  5604     1ED1                     l3025:
  5605     1ED1  307F               	movlw	127
  5606     1ED2  02A8               	subwf	__tdiv_to_l_@exp1,f
  5607     1ED3                     l3027:
  5608     1ED3  3098               	movlw	152
  5609     1ED4  0727               	addwf	__tdiv_to_l_@cntr,w
  5610     1ED5  00A0               	movwf	??__tdiv_to_l_
  5611     1ED6  0820               	movf	??__tdiv_to_l_,w
  5612     1ED7  02A8               	subwf	__tdiv_to_l_@exp1,f
  5613     1ED8  3018               	movlw	24
  5614     1ED9  00A7               	movwf	__tdiv_to_l_@cntr
  5615     1EDA                     l3029:
  5616     1EDA  3001               	movlw	1
  5617     1EDB  00A0               	movwf	??__tdiv_to_l_
  5618     1EDC                     u4425:
  5619     1EDC  1003               	clrc
  5620     1EDD  0DA3               	rlf	__tdiv_to_l_@quot,f
  5621     1EDE  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5622     1EDF  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5623     1EE0  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5624     1EE1  0BA0               	decfsz	??__tdiv_to_l_,f
  5625     1EE2  2EDC               	goto	u4425
  5626     1EE3                     l3031:
  5627     1EE3  0878               	movf	__tdiv_to_l_@f2+2,w
  5628     1EE4  0274               	subwf	__tdiv_to_l_@f1+2,w
  5629     1EE5  1D03               	skipz
  5630     1EE6  2EED               	goto	u4435
  5631     1EE7  0877               	movf	__tdiv_to_l_@f2+1,w
  5632     1EE8  0273               	subwf	__tdiv_to_l_@f1+1,w
  5633     1EE9  1D03               	skipz
  5634     1EEA  2EED               	goto	u4435
  5635     1EEB  0876               	movf	__tdiv_to_l_@f2,w
  5636     1EEC  0272               	subwf	__tdiv_to_l_@f1,w
  5637     1EED                     u4435:
  5638     1EED  1C03               	skipc
  5639     1EEE  2EF0               	goto	u4431
  5640     1EEF  2EF1               	goto	u4430
  5641     1EF0                     u4431:
  5642     1EF0  2EFC               	goto	l3037
  5643     1EF1                     u4430:
  5644     1EF1                     l3033:
  5645     1EF1  0876               	movf	__tdiv_to_l_@f2,w
  5646     1EF2  02F2               	subwf	__tdiv_to_l_@f1,f
  5647     1EF3  0877               	movf	__tdiv_to_l_@f2+1,w
  5648     1EF4  1C03               	skipc
  5649     1EF5  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5650     1EF6  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5651     1EF7  0878               	movf	__tdiv_to_l_@f2+2,w
  5652     1EF8  1C03               	skipc
  5653     1EF9  0A78               	incf	__tdiv_to_l_@f2+2,w
  5654     1EFA  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5655     1EFB                     l3035:
  5656     1EFB  1423               	bsf	__tdiv_to_l_@quot,0
  5657     1EFC                     l3037:
  5658     1EFC  3001               	movlw	1
  5659     1EFD                     u4445:
  5660     1EFD  1003               	clrc
  5661     1EFE  0DF2               	rlf	__tdiv_to_l_@f1,f
  5662     1EFF  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5663     1F00  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5664     1F01  3EFF               	addlw	-1
  5665     1F02  1D03               	skipz
  5666     1F03  2EFD               	goto	u4445
  5667     1F04                     l3039:
  5668     1F04  3001               	movlw	1
  5669     1F05  02A7               	subwf	__tdiv_to_l_@cntr,f
  5670     1F06  1D03               	btfss	3,2
  5671     1F07  2F09               	goto	u4451
  5672     1F08  2F0A               	goto	u4450
  5673     1F09                     u4451:
  5674     1F09  2EDA               	goto	l3029
  5675     1F0A                     u4450:
  5676     1F0A                     l657:
  5677     1F0A  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5678     1F0B  2F0D               	goto	u4461
  5679     1F0C  2F0E               	goto	u4460
  5680     1F0D                     u4461:
  5681     1F0D  2F28               	goto	l3049
  5682     1F0E                     u4460:
  5683     1F0E                     l3041:
  5684     1F0E  0828               	movf	__tdiv_to_l_@exp1,w
  5685     1F0F  3A80               	xorlw	128
  5686     1F10  3E97               	addlw	151
  5687     1F11  1803               	skipnc
  5688     1F12  2F14               	goto	u4471
  5689     1F13  2F15               	goto	u4470
  5690     1F14                     u4471:
  5691     1F14  2F16               	goto	l3047
  5692     1F15                     u4470:
  5693     1F15  2EA2               	goto	l3011
  5694     1F16                     l3047:
  5695     1F16  3001               	movlw	1
  5696     1F17                     u4485:
  5697     1F17  1003               	clrc
  5698     1F18  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5699     1F19  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5700     1F1A  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5701     1F1B  0CA3               	rrf	__tdiv_to_l_@quot,f
  5702     1F1C  3EFF               	addlw	-1
  5703     1F1D  1D03               	skipz
  5704     1F1E  2F17               	goto	u4485
  5705     1F1F  3001               	movlw	1
  5706     1F20  00A0               	movwf	??__tdiv_to_l_
  5707     1F21  0820               	movf	??__tdiv_to_l_,w
  5708     1F22  07A8               	addwf	__tdiv_to_l_@exp1,f
  5709     1F23  1D03               	btfss	3,2
  5710     1F24  2F26               	goto	u4491
  5711     1F25  2F27               	goto	u4490
  5712     1F26                     u4491:
  5713     1F26  2F16               	goto	l3047
  5714     1F27                     u4490:
  5715     1F27  2F3F               	goto	l3057
  5716     1F28                     l3049:
  5717     1F28  3018               	movlw	24
  5718     1F29  0228               	subwf	__tdiv_to_l_@exp1,w
  5719     1F2A  1C03               	skipc
  5720     1F2B  2F2D               	goto	u4501
  5721     1F2C  2F2E               	goto	u4500
  5722     1F2D                     u4501:
  5723     1F2D  2F3A               	goto	l664
  5724     1F2E                     u4500:
  5725     1F2E  2EA2               	goto	l3011
  5726     1F2F                     l3055:
  5727     1F2F  3001               	movlw	1
  5728     1F30  00A0               	movwf	??__tdiv_to_l_
  5729     1F31                     u4515:
  5730     1F31  1003               	clrc
  5731     1F32  0DA3               	rlf	__tdiv_to_l_@quot,f
  5732     1F33  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5733     1F34  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5734     1F35  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5735     1F36  0BA0               	decfsz	??__tdiv_to_l_,f
  5736     1F37  2F31               	goto	u4515
  5737     1F38  3001               	movlw	1
  5738     1F39  02A8               	subwf	__tdiv_to_l_@exp1,f
  5739     1F3A                     l664:
  5740     1F3A  0828               	movf	__tdiv_to_l_@exp1,w
  5741     1F3B  1D03               	btfss	3,2
  5742     1F3C  2F3E               	goto	u4521
  5743     1F3D  2F3F               	goto	u4520
  5744     1F3E                     u4521:
  5745     1F3E  2F2F               	goto	l3055
  5746     1F3F                     u4520:
  5747     1F3F                     l3057:
  5748     1F3F  0826               	movf	__tdiv_to_l_@quot+3,w
  5749     1F40  00F5               	movwf	?__tdiv_to_l_+3
  5750     1F41  0825               	movf	__tdiv_to_l_@quot+2,w
  5751     1F42  00F4               	movwf	?__tdiv_to_l_+2
  5752     1F43  0824               	movf	__tdiv_to_l_@quot+1,w
  5753     1F44  00F3               	movwf	?__tdiv_to_l_+1
  5754     1F45  0823               	movf	__tdiv_to_l_@quot,w
  5755     1F46  00F2               	movwf	?__tdiv_to_l_
  5756     1F47                     l653:
  5757     1F47  0008               	return
  5758     1F48                     __end_of__tdiv_to_l_:
  5759                           
  5760                           	psect	text12
  5761     1F48                     __ptext12:	
  5762 ;; *************** function __div_to_l_ *****************
  5763 ;; Defined at:
  5764 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  f1              4    2[COMMON] unsigned long 
  5767 ;;  f2              4    6[COMMON] unsigned long 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  quot            4    0[BANK0 ] unsigned long 
  5770 ;;  exp1            1    5[BANK0 ] unsigned char 
  5771 ;;  cntr            1    4[BANK0 ] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  4    2[COMMON] unsigned long 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5781 ;;      Params:         8       0       0       0       0
  5782 ;;      Locals:         0       6       0       0       0
  5783 ;;      Temps:          1       0       0       0       0
  5784 ;;      Totals:         9       6       0       0       0
  5785 ;;Total ram usage:       15 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 2
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_sprintf
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795     1F48                     __div_to_l_:	
  5796                           ;psect for function __div_to_l_
  5797                           
  5798     1F48                     l3061:	
  5799                           ;incstack = 0
  5800                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5801                           
  5802     1F48  1003               	clrc
  5803     1F49  0D74               	rlf	__div_to_l_@f1+2,w
  5804     1F4A  0D75               	rlf	__div_to_l_@f1+3,w
  5805     1F4B  1283               	bcf	3,5	;RP0=0, select bank0
  5806     1F4C  1303               	bcf	3,6	;RP1=0, select bank0
  5807     1F4D  00A5               	movwf	__div_to_l_@exp1
  5808     1F4E  0825               	movf	__div_to_l_@exp1,w
  5809     1F4F  1D03               	btfss	3,2
  5810     1F50  2F52               	goto	u4531
  5811     1F51  2F53               	goto	u4530
  5812     1F52                     u4531:
  5813     1F52  2F5C               	goto	l3067
  5814     1F53                     u4530:
  5815     1F53                     l3063:
  5816     1F53  3000               	movlw	0
  5817     1F54  00F5               	movwf	?__div_to_l_+3
  5818     1F55  3000               	movlw	0
  5819     1F56  00F4               	movwf	?__div_to_l_+2
  5820     1F57  3000               	movlw	0
  5821     1F58  00F3               	movwf	?__div_to_l_+1
  5822     1F59  3000               	movlw	0
  5823     1F5A  00F2               	movwf	?__div_to_l_
  5824     1F5B  2FFF               	goto	l606
  5825     1F5C                     l3067:
  5826     1F5C  1003               	clrc
  5827     1F5D  0D78               	rlf	__div_to_l_@f2+2,w
  5828     1F5E  0D79               	rlf	__div_to_l_@f2+3,w
  5829     1F5F  00A4               	movwf	__div_to_l_@cntr
  5830     1F60  0824               	movf	__div_to_l_@cntr,w
  5831     1F61  1D03               	btfss	3,2
  5832     1F62  2F64               	goto	u4541
  5833     1F63  2F65               	goto	u4540
  5834     1F64                     u4541:
  5835     1F64  2F66               	goto	l607
  5836     1F65                     u4540:
  5837     1F65  2F53               	goto	l3063
  5838     1F66                     l607:
  5839     1F66  17F4               	bsf	__div_to_l_@f1+2,7
  5840     1F67                     l3073:
  5841     1F67  30FF               	movlw	255
  5842     1F68  05F2               	andwf	__div_to_l_@f1,f
  5843     1F69  30FF               	movlw	255
  5844     1F6A  05F3               	andwf	__div_to_l_@f1+1,f
  5845     1F6B  30FF               	movlw	255
  5846     1F6C  05F4               	andwf	__div_to_l_@f1+2,f
  5847     1F6D  3000               	movlw	0
  5848     1F6E  05F5               	andwf	__div_to_l_@f1+3,f
  5849     1F6F                     l3075:
  5850     1F6F  17F8               	bsf	__div_to_l_@f2+2,7
  5851     1F70  30FF               	movlw	255
  5852     1F71  05F6               	andwf	__div_to_l_@f2,f
  5853     1F72  30FF               	movlw	255
  5854     1F73  05F7               	andwf	__div_to_l_@f2+1,f
  5855     1F74  30FF               	movlw	255
  5856     1F75  05F8               	andwf	__div_to_l_@f2+2,f
  5857     1F76  3000               	movlw	0
  5858     1F77  05F9               	andwf	__div_to_l_@f2+3,f
  5859     1F78  3000               	movlw	0
  5860     1F79  00A3               	movwf	__div_to_l_@quot+3
  5861     1F7A  3000               	movlw	0
  5862     1F7B  00A2               	movwf	__div_to_l_@quot+2
  5863     1F7C  3000               	movlw	0
  5864     1F7D  00A1               	movwf	__div_to_l_@quot+1
  5865     1F7E  3000               	movlw	0
  5866     1F7F  00A0               	movwf	__div_to_l_@quot
  5867     1F80                     l3077:
  5868     1F80  307F               	movlw	127
  5869     1F81  02A5               	subwf	__div_to_l_@exp1,f
  5870     1F82                     l3079:
  5871     1F82  30A0               	movlw	160
  5872     1F83  0724               	addwf	__div_to_l_@cntr,w
  5873     1F84  00FA               	movwf	??__div_to_l_
  5874     1F85  087A               	movf	??__div_to_l_,w
  5875     1F86  02A5               	subwf	__div_to_l_@exp1,f
  5876     1F87  3020               	movlw	32
  5877     1F88  00A4               	movwf	__div_to_l_@cntr
  5878     1F89                     l3081:
  5879     1F89  3001               	movlw	1
  5880     1F8A  00FA               	movwf	??__div_to_l_
  5881     1F8B                     u4555:
  5882     1F8B  1003               	clrc
  5883     1F8C  0DA0               	rlf	__div_to_l_@quot,f
  5884     1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  5885     1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  5886     1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  5887     1F90  0BFA               	decfsz	??__div_to_l_,f
  5888     1F91  2F8B               	goto	u4555
  5889     1F92                     l3083:
  5890     1F92  0879               	movf	__div_to_l_@f2+3,w
  5891     1F93  0275               	subwf	__div_to_l_@f1+3,w
  5892     1F94  1D03               	skipz
  5893     1F95  2FA0               	goto	u4565
  5894     1F96  0878               	movf	__div_to_l_@f2+2,w
  5895     1F97  0274               	subwf	__div_to_l_@f1+2,w
  5896     1F98  1D03               	skipz
  5897     1F99  2FA0               	goto	u4565
  5898     1F9A  0877               	movf	__div_to_l_@f2+1,w
  5899     1F9B  0273               	subwf	__div_to_l_@f1+1,w
  5900     1F9C  1D03               	skipz
  5901     1F9D  2FA0               	goto	u4565
  5902     1F9E  0876               	movf	__div_to_l_@f2,w
  5903     1F9F  0272               	subwf	__div_to_l_@f1,w
  5904     1FA0                     u4565:
  5905     1FA0  1C03               	skipc
  5906     1FA1  2FA3               	goto	u4561
  5907     1FA2  2FA4               	goto	u4560
  5908     1FA3                     u4561:
  5909     1FA3  2FB3               	goto	l3089
  5910     1FA4                     u4560:
  5911     1FA4                     l3085:
  5912     1FA4  0876               	movf	__div_to_l_@f2,w
  5913     1FA5  02F2               	subwf	__div_to_l_@f1,f
  5914     1FA6  0877               	movf	__div_to_l_@f2+1,w
  5915     1FA7  1C03               	skipc
  5916     1FA8  0F77               	incfsz	__div_to_l_@f2+1,w
  5917     1FA9  02F3               	subwf	__div_to_l_@f1+1,f
  5918     1FAA  0878               	movf	__div_to_l_@f2+2,w
  5919     1FAB  1C03               	skipc
  5920     1FAC  0F78               	incfsz	__div_to_l_@f2+2,w
  5921     1FAD  02F4               	subwf	__div_to_l_@f1+2,f
  5922     1FAE  0879               	movf	__div_to_l_@f2+3,w
  5923     1FAF  1C03               	skipc
  5924     1FB0  0F79               	incfsz	__div_to_l_@f2+3,w
  5925     1FB1  02F5               	subwf	__div_to_l_@f1+3,f
  5926     1FB2                     l3087:
  5927     1FB2  1420               	bsf	__div_to_l_@quot,0
  5928     1FB3                     l3089:
  5929     1FB3  3001               	movlw	1
  5930     1FB4  00FA               	movwf	??__div_to_l_
  5931     1FB5                     u4575:
  5932     1FB5  1003               	clrc
  5933     1FB6  0DF2               	rlf	__div_to_l_@f1,f
  5934     1FB7  0DF3               	rlf	__div_to_l_@f1+1,f
  5935     1FB8  0DF4               	rlf	__div_to_l_@f1+2,f
  5936     1FB9  0DF5               	rlf	__div_to_l_@f1+3,f
  5937     1FBA  0BFA               	decfsz	??__div_to_l_,f
  5938     1FBB  2FB5               	goto	u4575
  5939     1FBC                     l3091:
  5940     1FBC  3001               	movlw	1
  5941     1FBD  02A4               	subwf	__div_to_l_@cntr,f
  5942     1FBE  1D03               	btfss	3,2
  5943     1FBF  2FC1               	goto	u4581
  5944     1FC0  2FC2               	goto	u4580
  5945     1FC1                     u4581:
  5946     1FC1  2F89               	goto	l3081
  5947     1FC2                     u4580:
  5948     1FC2                     l610:
  5949     1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  5950     1FC3  2FC5               	goto	u4591
  5951     1FC4  2FC6               	goto	u4590
  5952     1FC5                     u4591:
  5953     1FC5  2FE0               	goto	l3101
  5954     1FC6                     u4590:
  5955     1FC6                     l3093:
  5956     1FC6  0825               	movf	__div_to_l_@exp1,w
  5957     1FC7  3A80               	xorlw	128
  5958     1FC8  3E9F               	addlw	159
  5959     1FC9  1803               	skipnc
  5960     1FCA  2FCC               	goto	u4601
  5961     1FCB  2FCD               	goto	u4600
  5962     1FCC                     u4601:
  5963     1FCC  2FCE               	goto	l3099
  5964     1FCD                     u4600:
  5965     1FCD  2F53               	goto	l3063
  5966     1FCE                     l3099:
  5967     1FCE  3001               	movlw	1
  5968     1FCF                     u4615:
  5969     1FCF  1003               	clrc
  5970     1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  5971     1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  5972     1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  5973     1FD3  0CA0               	rrf	__div_to_l_@quot,f
  5974     1FD4  3EFF               	addlw	-1
  5975     1FD5  1D03               	skipz
  5976     1FD6  2FCF               	goto	u4615
  5977     1FD7  3001               	movlw	1
  5978     1FD8  00FA               	movwf	??__div_to_l_
  5979     1FD9  087A               	movf	??__div_to_l_,w
  5980     1FDA  07A5               	addwf	__div_to_l_@exp1,f
  5981     1FDB  1D03               	btfss	3,2
  5982     1FDC  2FDE               	goto	u4621
  5983     1FDD  2FDF               	goto	u4620
  5984     1FDE                     u4621:
  5985     1FDE  2FCE               	goto	l3099
  5986     1FDF                     u4620:
  5987     1FDF  2FF7               	goto	l3109
  5988     1FE0                     l3101:
  5989     1FE0  3020               	movlw	32
  5990     1FE1  0225               	subwf	__div_to_l_@exp1,w
  5991     1FE2  1C03               	skipc
  5992     1FE3  2FE5               	goto	u4631
  5993     1FE4  2FE6               	goto	u4630
  5994     1FE5                     u4631:
  5995     1FE5  2FF2               	goto	l617
  5996     1FE6                     u4630:
  5997     1FE6  2F53               	goto	l3063
  5998     1FE7                     l3107:
  5999     1FE7  3001               	movlw	1
  6000     1FE8  00FA               	movwf	??__div_to_l_
  6001     1FE9                     u4645:
  6002     1FE9  1003               	clrc
  6003     1FEA  0DA0               	rlf	__div_to_l_@quot,f
  6004     1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  6005     1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  6006     1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  6007     1FEE  0BFA               	decfsz	??__div_to_l_,f
  6008     1FEF  2FE9               	goto	u4645
  6009     1FF0  3001               	movlw	1
  6010     1FF1  02A5               	subwf	__div_to_l_@exp1,f
  6011     1FF2                     l617:
  6012     1FF2  0825               	movf	__div_to_l_@exp1,w
  6013     1FF3  1D03               	btfss	3,2
  6014     1FF4  2FF6               	goto	u4651
  6015     1FF5  2FF7               	goto	u4650
  6016     1FF6                     u4651:
  6017     1FF6  2FE7               	goto	l3107
  6018     1FF7                     u4650:
  6019     1FF7                     l3109:
  6020     1FF7  0823               	movf	__div_to_l_@quot+3,w
  6021     1FF8  00F5               	movwf	?__div_to_l_+3
  6022     1FF9  0822               	movf	__div_to_l_@quot+2,w
  6023     1FFA  00F4               	movwf	?__div_to_l_+2
  6024     1FFB  0821               	movf	__div_to_l_@quot+1,w
  6025     1FFC  00F3               	movwf	?__div_to_l_+1
  6026     1FFD  0820               	movf	__div_to_l_@quot,w
  6027     1FFE  00F2               	movwf	?__div_to_l_
  6028     1FFF                     l606:
  6029     1FFF  0008               	return
  6030     2000                     __end_of__div_to_l_:
  6031                           
  6032                           	psect	text13
  6033     1165                     __ptext13:	
  6034 ;; *************** function ___xxtofl *****************
  6035 ;; Defined at:
  6036 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  sign            1    wreg     unsigned char 
  6039 ;;  val             4    2[COMMON] long 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  sign            1    0[BANK0 ] unsigned char 
  6042 ;;  arg             4    2[BANK0 ] unsigned long 
  6043 ;;  exp             1    1[BANK0 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  4    2[COMMON] unsigned char 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6053 ;;      Params:         4       0       0       0       0
  6054 ;;      Locals:         0       6       0       0       0
  6055 ;;      Temps:          4       0       0       0       0
  6056 ;;      Totals:         8       6       0       0       0
  6057 ;;Total ram usage:       14 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 2
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_main
  6064 ;;		_sprintf
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     1165                     ___xxtofl:	
  6069                           ;psect for function ___xxtofl
  6070                           
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6074                           ;___xxtofl@sign stored from wreg
  6075     1165  1283               	bcf	3,5	;RP0=0, select bank0
  6076     1166  1303               	bcf	3,6	;RP1=0, select bank0
  6077     1167  00A0               	movwf	___xxtofl@sign
  6078     1168                     l3253:
  6079     1168  0820               	movf	___xxtofl@sign,w
  6080     1169  1903               	btfsc	3,2
  6081     116A  296C               	goto	u5041
  6082     116B  296D               	goto	u5040
  6083     116C                     u5041:
  6084     116C  2981               	goto	l3259
  6085     116D                     u5040:
  6086     116D                     l3255:
  6087     116D  1FF5               	btfss	___xxtofl@val+3,7
  6088     116E  2970               	goto	u5051
  6089     116F  2971               	goto	u5050
  6090     1170                     u5051:
  6091     1170  2981               	goto	l3259
  6092     1171                     u5050:
  6093     1171                     l3257:
  6094     1171  0972               	comf	___xxtofl@val,w
  6095     1172  00A2               	movwf	___xxtofl@arg
  6096     1173  0973               	comf	___xxtofl@val+1,w
  6097     1174  00A3               	movwf	___xxtofl@arg+1
  6098     1175  0974               	comf	___xxtofl@val+2,w
  6099     1176  00A4               	movwf	___xxtofl@arg+2
  6100     1177  0975               	comf	___xxtofl@val+3,w
  6101     1178  00A5               	movwf	___xxtofl@arg+3
  6102     1179  0AA2               	incf	___xxtofl@arg,f
  6103     117A  1903               	skipnz
  6104     117B  0AA3               	incf	___xxtofl@arg+1,f
  6105     117C  1903               	skipnz
  6106     117D  0AA4               	incf	___xxtofl@arg+2,f
  6107     117E  1903               	skipnz
  6108     117F  0AA5               	incf	___xxtofl@arg+3,f
  6109     1180  2989               	goto	l903
  6110     1181                     l3259:
  6111     1181  0875               	movf	___xxtofl@val+3,w
  6112     1182  00A5               	movwf	___xxtofl@arg+3
  6113     1183  0874               	movf	___xxtofl@val+2,w
  6114     1184  00A4               	movwf	___xxtofl@arg+2
  6115     1185  0873               	movf	___xxtofl@val+1,w
  6116     1186  00A3               	movwf	___xxtofl@arg+1
  6117     1187  0872               	movf	___xxtofl@val,w
  6118     1188  00A2               	movwf	___xxtofl@arg
  6119     1189                     l903:
  6120     1189  0875               	movf	___xxtofl@val+3,w
  6121     118A  0474               	iorwf	___xxtofl@val+2,w
  6122     118B  0473               	iorwf	___xxtofl@val+1,w
  6123     118C  0472               	iorwf	___xxtofl@val,w
  6124     118D  1D03               	skipz
  6125     118E  2990               	goto	u5061
  6126     118F  2991               	goto	u5060
  6127     1190                     u5061:
  6128     1190  299A               	goto	l3265
  6129     1191                     u5060:
  6130     1191                     l3261:
  6131     1191  3000               	movlw	0
  6132     1192  00F5               	movwf	?___xxtofl+3
  6133     1193  3000               	movlw	0
  6134     1194  00F4               	movwf	?___xxtofl+2
  6135     1195  3000               	movlw	0
  6136     1196  00F3               	movwf	?___xxtofl+1
  6137     1197  3000               	movlw	0
  6138     1198  00F2               	movwf	?___xxtofl
  6139     1199  2A1E               	goto	l905
  6140     119A                     l3265:
  6141     119A  3096               	movlw	150
  6142     119B  00A1               	movwf	___xxtofl@exp
  6143     119C  29AA               	goto	l3269
  6144     119D                     l3267:
  6145     119D  3001               	movlw	1
  6146     119E  00F6               	movwf	??___xxtofl
  6147     119F  0876               	movf	??___xxtofl,w
  6148     11A0  07A1               	addwf	___xxtofl@exp,f
  6149     11A1  3001               	movlw	1
  6150     11A2                     u5075:
  6151     11A2  1003               	clrc
  6152     11A3  0CA5               	rrf	___xxtofl@arg+3,f
  6153     11A4  0CA4               	rrf	___xxtofl@arg+2,f
  6154     11A5  0CA3               	rrf	___xxtofl@arg+1,f
  6155     11A6  0CA2               	rrf	___xxtofl@arg,f
  6156     11A7  3EFF               	addlw	-1
  6157     11A8  1D03               	skipz
  6158     11A9  29A2               	goto	u5075
  6159     11AA                     l3269:
  6160     11AA  30FE               	movlw	254
  6161     11AB  0525               	andwf	___xxtofl@arg+3,w
  6162     11AC  1D03               	btfss	3,2
  6163     11AD  29AF               	goto	u5081
  6164     11AE  29B0               	goto	u5080
  6165     11AF                     u5081:
  6166     11AF  299D               	goto	l3267
  6167     11B0                     u5080:
  6168     11B0  29CC               	goto	l909
  6169     11B1                     l3271:
  6170     11B1  3001               	movlw	1
  6171     11B2  00F6               	movwf	??___xxtofl
  6172     11B3  0876               	movf	??___xxtofl,w
  6173     11B4  07A1               	addwf	___xxtofl@exp,f
  6174     11B5                     l3273:
  6175     11B5  3001               	movlw	1
  6176     11B6  07A2               	addwf	___xxtofl@arg,f
  6177     11B7  3000               	movlw	0
  6178     11B8  1803               	skipnc
  6179     11B9  3001               	movlw	1
  6180     11BA  07A3               	addwf	___xxtofl@arg+1,f
  6181     11BB  3000               	movlw	0
  6182     11BC  1803               	skipnc
  6183     11BD  3001               	movlw	1
  6184     11BE  07A4               	addwf	___xxtofl@arg+2,f
  6185     11BF  3000               	movlw	0
  6186     11C0  1803               	skipnc
  6187     11C1  3001               	movlw	1
  6188     11C2  07A5               	addwf	___xxtofl@arg+3,f
  6189     11C3                     l3275:
  6190     11C3  3001               	movlw	1
  6191     11C4                     u5095:
  6192     11C4  1003               	clrc
  6193     11C5  0CA5               	rrf	___xxtofl@arg+3,f
  6194     11C6  0CA4               	rrf	___xxtofl@arg+2,f
  6195     11C7  0CA3               	rrf	___xxtofl@arg+1,f
  6196     11C8  0CA2               	rrf	___xxtofl@arg,f
  6197     11C9  3EFF               	addlw	-1
  6198     11CA  1D03               	skipz
  6199     11CB  29C4               	goto	u5095
  6200     11CC                     l909:
  6201     11CC  30FF               	movlw	255
  6202     11CD  0525               	andwf	___xxtofl@arg+3,w
  6203     11CE  1D03               	btfss	3,2
  6204     11CF  29D1               	goto	u5101
  6205     11D0  29D2               	goto	u5100
  6206     11D1                     u5101:
  6207     11D1  29B1               	goto	l3271
  6208     11D2                     u5100:
  6209     11D2  29DE               	goto	l3279
  6210     11D3                     l3277:
  6211     11D3  3001               	movlw	1
  6212     11D4  02A1               	subwf	___xxtofl@exp,f
  6213     11D5  3001               	movlw	1
  6214     11D6  00F6               	movwf	??___xxtofl
  6215     11D7                     u5115:
  6216     11D7  1003               	clrc
  6217     11D8  0DA2               	rlf	___xxtofl@arg,f
  6218     11D9  0DA3               	rlf	___xxtofl@arg+1,f
  6219     11DA  0DA4               	rlf	___xxtofl@arg+2,f
  6220     11DB  0DA5               	rlf	___xxtofl@arg+3,f
  6221     11DC  0BF6               	decfsz	??___xxtofl,f
  6222     11DD  29D7               	goto	u5115
  6223     11DE                     l3279:
  6224     11DE  1BA4               	btfsc	___xxtofl@arg+2,7
  6225     11DF  29E1               	goto	u5121
  6226     11E0  29E2               	goto	u5120
  6227     11E1                     u5121:
  6228     11E1  29E8               	goto	l916
  6229     11E2                     u5120:
  6230     11E2                     l3281:
  6231     11E2  3002               	movlw	2
  6232     11E3  0221               	subwf	___xxtofl@exp,w
  6233     11E4  1803               	skipnc
  6234     11E5  29E7               	goto	u5131
  6235     11E6  29E8               	goto	u5130
  6236     11E7                     u5131:
  6237     11E7  29D3               	goto	l3277
  6238     11E8                     u5130:
  6239     11E8                     l916:
  6240     11E8  1821               	btfsc	___xxtofl@exp,0
  6241     11E9  29EB               	goto	u5141
  6242     11EA  29EC               	goto	u5140
  6243     11EB                     u5141:
  6244     11EB  29F4               	goto	l917
  6245     11EC                     u5140:
  6246     11EC                     l3283:
  6247     11EC  30FF               	movlw	255
  6248     11ED  05A2               	andwf	___xxtofl@arg,f
  6249     11EE  30FF               	movlw	255
  6250     11EF  05A3               	andwf	___xxtofl@arg+1,f
  6251     11F0  307F               	movlw	127
  6252     11F1  05A4               	andwf	___xxtofl@arg+2,f
  6253     11F2  30FF               	movlw	255
  6254     11F3  05A5               	andwf	___xxtofl@arg+3,f
  6255     11F4                     l917:
  6256     11F4  1003               	clrc
  6257     11F5  0CA1               	rrf	___xxtofl@exp,f
  6258     11F6                     l3285:
  6259     11F6  0821               	movf	___xxtofl@exp,w
  6260     11F7  00F6               	movwf	??___xxtofl
  6261     11F8  01F7               	clrf	??___xxtofl+1
  6262     11F9  01F8               	clrf	??___xxtofl+2
  6263     11FA  01F9               	clrf	??___xxtofl+3
  6264     11FB  3018               	movlw	24
  6265     11FC                     u5155:
  6266     11FC  1003               	clrc
  6267     11FD  0DF6               	rlf	??___xxtofl,f
  6268     11FE  0DF7               	rlf	??___xxtofl+1,f
  6269     11FF  0DF8               	rlf	??___xxtofl+2,f
  6270     1200  0DF9               	rlf	??___xxtofl+3,f
  6271     1201                     u5150:
  6272     1201  3EFF               	addlw	-1
  6273     1202  1D03               	skipz
  6274     1203  29FC               	goto	u5155
  6275     1204  0876               	movf	??___xxtofl,w
  6276     1205  04A2               	iorwf	___xxtofl@arg,f
  6277     1206  0877               	movf	??___xxtofl+1,w
  6278     1207  04A3               	iorwf	___xxtofl@arg+1,f
  6279     1208  0878               	movf	??___xxtofl+2,w
  6280     1209  04A4               	iorwf	___xxtofl@arg+2,f
  6281     120A  0879               	movf	??___xxtofl+3,w
  6282     120B  04A5               	iorwf	___xxtofl@arg+3,f
  6283     120C                     l3287:
  6284     120C  0820               	movf	___xxtofl@sign,w
  6285     120D  1903               	btfsc	3,2
  6286     120E  2A10               	goto	u5161
  6287     120F  2A11               	goto	u5160
  6288     1210                     u5161:
  6289     1210  2A16               	goto	l3293
  6290     1211                     u5160:
  6291     1211                     l3289:
  6292     1211  1FF5               	btfss	___xxtofl@val+3,7
  6293     1212  2A14               	goto	u5171
  6294     1213  2A15               	goto	u5170
  6295     1214                     u5171:
  6296     1214  2A16               	goto	l3293
  6297     1215                     u5170:
  6298     1215                     l3291:
  6299     1215  17A5               	bsf	___xxtofl@arg+3,7
  6300     1216                     l3293:
  6301     1216  0825               	movf	___xxtofl@arg+3,w
  6302     1217  00F5               	movwf	?___xxtofl+3
  6303     1218  0824               	movf	___xxtofl@arg+2,w
  6304     1219  00F4               	movwf	?___xxtofl+2
  6305     121A  0823               	movf	___xxtofl@arg+1,w
  6306     121B  00F3               	movwf	?___xxtofl+1
  6307     121C  0822               	movf	___xxtofl@arg,w
  6308     121D  00F2               	movwf	?___xxtofl
  6309     121E                     l905:
  6310     121E  0008               	return
  6311     121F                     __end_of___xxtofl:
  6312                           
  6313                           	psect	text14
  6314     1A81                     __ptext14:	
  6315 ;; *************** function ___wmul *****************
  6316 ;; Defined at:
  6317 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  multiplier      2    2[COMMON] unsigned int 
  6320 ;;  multiplicand    2    4[COMMON] unsigned int 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  product         2    6[COMMON] unsigned int 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  2    2[COMMON] unsigned int 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6332 ;;      Params:         4       0       0       0       0
  6333 ;;      Locals:         2       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0
  6335 ;;      Totals:         6       0       0       0       0
  6336 ;;Total ram usage:        6 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 2
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_sprintf
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346     1A81                     ___wmul:	
  6347                           ;psect for function ___wmul
  6348                           
  6349     1A81                     l3113:	
  6350                           ;incstack = 0
  6351                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6352                           
  6353     1A81  01F6               	clrf	___wmul@product
  6354     1A82  01F7               	clrf	___wmul@product+1
  6355     1A83                     l3115:
  6356     1A83  1C72               	btfss	___wmul@multiplier,0
  6357     1A84  2A86               	goto	u4661
  6358     1A85  2A87               	goto	u4660
  6359     1A86                     u4661:
  6360     1A86  2A8D               	goto	l436
  6361     1A87                     u4660:
  6362     1A87                     l3117:
  6363     1A87  0874               	movf	___wmul@multiplicand,w
  6364     1A88  07F6               	addwf	___wmul@product,f
  6365     1A89  1803               	skipnc
  6366     1A8A  0AF7               	incf	___wmul@product+1,f
  6367     1A8B  0875               	movf	___wmul@multiplicand+1,w
  6368     1A8C  07F7               	addwf	___wmul@product+1,f
  6369     1A8D                     l436:
  6370     1A8D  3001               	movlw	1
  6371     1A8E                     u4675:
  6372     1A8E  1003               	clrc
  6373     1A8F  0DF4               	rlf	___wmul@multiplicand,f
  6374     1A90  0DF5               	rlf	___wmul@multiplicand+1,f
  6375     1A91  3EFF               	addlw	-1
  6376     1A92  1D03               	skipz
  6377     1A93  2A8E               	goto	u4675
  6378     1A94                     l3119:
  6379     1A94  3001               	movlw	1
  6380     1A95                     u4685:
  6381     1A95  1003               	clrc
  6382     1A96  0CF3               	rrf	___wmul@multiplier+1,f
  6383     1A97  0CF2               	rrf	___wmul@multiplier,f
  6384     1A98  3EFF               	addlw	-1
  6385     1A99  1D03               	skipz
  6386     1A9A  2A95               	goto	u4685
  6387     1A9B                     l3121:
  6388     1A9B  0872               	movf	___wmul@multiplier,w
  6389     1A9C  0473               	iorwf	___wmul@multiplier+1,w
  6390     1A9D  1D03               	btfss	3,2
  6391     1A9E  2AA0               	goto	u4691
  6392     1A9F  2AA1               	goto	u4690
  6393     1AA0                     u4691:
  6394     1AA0  2A83               	goto	l3115
  6395     1AA1                     u4690:
  6396     1AA1                     l3123:
  6397     1AA1  0877               	movf	___wmul@product+1,w
  6398     1AA2  00F3               	movwf	?___wmul+1
  6399     1AA3  0876               	movf	___wmul@product,w
  6400     1AA4  00F2               	movwf	?___wmul
  6401     1AA5                     l438:
  6402     1AA5  0008               	return
  6403     1AA6                     __end_of___wmul:
  6404                           
  6405                           	psect	text15
  6406     1C33                     __ptext15:	
  6407 ;; *************** function ___llmod *****************
  6408 ;; Defined at:
  6409 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  divisor         4    5[BANK0 ] unsigned long 
  6412 ;;  dividend        4    9[BANK0 ] unsigned long 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  counter         1   14[BANK0 ] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  4    5[BANK0 ] unsigned long 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6424 ;;      Params:         0       8       0       0       0
  6425 ;;      Locals:         0       1       0       0       0
  6426 ;;      Temps:          0       1       0       0       0
  6427 ;;      Totals:         0      10       0       0       0
  6428 ;;Total ram usage:       10 bytes
  6429 ;; Hardware stack levels used: 1
  6430 ;; Hardware stack levels required when called: 2
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		_sprintf
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438     1C33                     ___llmod:	
  6439                           ;psect for function ___llmod
  6440                           
  6441     1C33                     l3889:	
  6442                           ;incstack = 0
  6443                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6444                           
  6445     1C33  1283               	bcf	3,5	;RP0=0, select bank0
  6446     1C34  1303               	bcf	3,6	;RP1=0, select bank0
  6447     1C35  0828               	movf	___llmod@divisor+3,w
  6448     1C36  0427               	iorwf	___llmod@divisor+2,w
  6449     1C37  0426               	iorwf	___llmod@divisor+1,w
  6450     1C38  0425               	iorwf	___llmod@divisor,w
  6451     1C39  1903               	skipnz
  6452     1C3A  2C3C               	goto	u5931
  6453     1C3B  2C3D               	goto	u5930
  6454     1C3C                     u5931:
  6455     1C3C  2C80               	goto	l3905
  6456     1C3D                     u5930:
  6457     1C3D                     l3891:
  6458     1C3D  01AE               	clrf	___llmod@counter
  6459     1C3E  0AAE               	incf	___llmod@counter,f
  6460     1C3F  2C4D               	goto	l3895
  6461     1C40                     l3893:
  6462     1C40  3001               	movlw	1
  6463     1C41  00AD               	movwf	??___llmod
  6464     1C42                     u5945:
  6465     1C42  1003               	clrc
  6466     1C43  0DA5               	rlf	___llmod@divisor,f
  6467     1C44  0DA6               	rlf	___llmod@divisor+1,f
  6468     1C45  0DA7               	rlf	___llmod@divisor+2,f
  6469     1C46  0DA8               	rlf	___llmod@divisor+3,f
  6470     1C47  0BAD               	decfsz	??___llmod,f
  6471     1C48  2C42               	goto	u5945
  6472     1C49  3001               	movlw	1
  6473     1C4A  00AD               	movwf	??___llmod
  6474     1C4B  082D               	movf	??___llmod,w
  6475     1C4C  07AE               	addwf	___llmod@counter,f
  6476     1C4D                     l3895:
  6477     1C4D  1FA8               	btfss	___llmod@divisor+3,7
  6478     1C4E  2C50               	goto	u5951
  6479     1C4F  2C51               	goto	u5950
  6480     1C50                     u5951:
  6481     1C50  2C40               	goto	l3893
  6482     1C51                     u5950:
  6483     1C51                     l3897:
  6484     1C51  0828               	movf	___llmod@divisor+3,w
  6485     1C52  022C               	subwf	___llmod@dividend+3,w
  6486     1C53  1D03               	skipz
  6487     1C54  2C5F               	goto	u5965
  6488     1C55  0827               	movf	___llmod@divisor+2,w
  6489     1C56  022B               	subwf	___llmod@dividend+2,w
  6490     1C57  1D03               	skipz
  6491     1C58  2C5F               	goto	u5965
  6492     1C59  0826               	movf	___llmod@divisor+1,w
  6493     1C5A  022A               	subwf	___llmod@dividend+1,w
  6494     1C5B  1D03               	skipz
  6495     1C5C  2C5F               	goto	u5965
  6496     1C5D  0825               	movf	___llmod@divisor,w
  6497     1C5E  0229               	subwf	___llmod@dividend,w
  6498     1C5F                     u5965:
  6499     1C5F  1C03               	skipc
  6500     1C60  2C62               	goto	u5961
  6501     1C61  2C63               	goto	u5960
  6502     1C62                     u5961:
  6503     1C62  2C71               	goto	l3901
  6504     1C63                     u5960:
  6505     1C63                     l3899:
  6506     1C63  0825               	movf	___llmod@divisor,w
  6507     1C64  02A9               	subwf	___llmod@dividend,f
  6508     1C65  0826               	movf	___llmod@divisor+1,w
  6509     1C66  1C03               	skipc
  6510     1C67  0F26               	incfsz	___llmod@divisor+1,w
  6511     1C68  02AA               	subwf	___llmod@dividend+1,f
  6512     1C69  0827               	movf	___llmod@divisor+2,w
  6513     1C6A  1C03               	skipc
  6514     1C6B  0F27               	incfsz	___llmod@divisor+2,w
  6515     1C6C  02AB               	subwf	___llmod@dividend+2,f
  6516     1C6D  0828               	movf	___llmod@divisor+3,w
  6517     1C6E  1C03               	skipc
  6518     1C6F  0F28               	incfsz	___llmod@divisor+3,w
  6519     1C70  02AC               	subwf	___llmod@dividend+3,f
  6520     1C71                     l3901:
  6521     1C71  3001               	movlw	1
  6522     1C72                     u5975:
  6523     1C72  1003               	clrc
  6524     1C73  0CA8               	rrf	___llmod@divisor+3,f
  6525     1C74  0CA7               	rrf	___llmod@divisor+2,f
  6526     1C75  0CA6               	rrf	___llmod@divisor+1,f
  6527     1C76  0CA5               	rrf	___llmod@divisor,f
  6528     1C77  3EFF               	addlw	-1
  6529     1C78  1D03               	skipz
  6530     1C79  2C72               	goto	u5975
  6531     1C7A                     l3903:
  6532     1C7A  3001               	movlw	1
  6533     1C7B  02AE               	subwf	___llmod@counter,f
  6534     1C7C  1D03               	btfss	3,2
  6535     1C7D  2C7F               	goto	u5981
  6536     1C7E  2C80               	goto	u5980
  6537     1C7F                     u5981:
  6538     1C7F  2C51               	goto	l3897
  6539     1C80                     u5980:
  6540     1C80                     l3905:
  6541     1C80  082C               	movf	___llmod@dividend+3,w
  6542     1C81  00A8               	movwf	?___llmod+3
  6543     1C82  082B               	movf	___llmod@dividend+2,w
  6544     1C83  00A7               	movwf	?___llmod+2
  6545     1C84  082A               	movf	___llmod@dividend+1,w
  6546     1C85  00A6               	movwf	?___llmod+1
  6547     1C86  0829               	movf	___llmod@dividend,w
  6548     1C87  00A5               	movwf	?___llmod
  6549     1C88                     l692:
  6550     1C88  0008               	return
  6551     1C89                     __end_of___llmod:
  6552                           
  6553                           	psect	text16
  6554     1D48                     __ptext16:	
  6555 ;; *************** function ___lldiv *****************
  6556 ;; Defined at:
  6557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  divisor         4    2[COMMON] unsigned long 
  6560 ;;  dividend        4    6[COMMON] unsigned long 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  quotient        4    0[BANK0 ] unsigned long 
  6563 ;;  counter         1    4[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  4    2[COMMON] unsigned long 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6573 ;;      Params:         8       0       0       0       0
  6574 ;;      Locals:         0       5       0       0       0
  6575 ;;      Temps:          1       0       0       0       0
  6576 ;;      Totals:         9       5       0       0       0
  6577 ;;Total ram usage:       14 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 2
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_sprintf
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587     1D48                     ___lldiv:	
  6588                           ;psect for function ___lldiv
  6589                           
  6590     1D48                     l3127:	
  6591                           ;incstack = 0
  6592                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6593                           
  6594     1D48  3000               	movlw	0
  6595     1D49  1283               	bcf	3,5	;RP0=0, select bank0
  6596     1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  6597     1D4B  00A3               	movwf	___lldiv@quotient+3
  6598     1D4C  3000               	movlw	0
  6599     1D4D  00A2               	movwf	___lldiv@quotient+2
  6600     1D4E  3000               	movlw	0
  6601     1D4F  00A1               	movwf	___lldiv@quotient+1
  6602     1D50  3000               	movlw	0
  6603     1D51  00A0               	movwf	___lldiv@quotient
  6604     1D52  0875               	movf	___lldiv@divisor+3,w
  6605     1D53  0474               	iorwf	___lldiv@divisor+2,w
  6606     1D54  0473               	iorwf	___lldiv@divisor+1,w
  6607     1D55  0472               	iorwf	___lldiv@divisor,w
  6608     1D56  1903               	skipnz
  6609     1D57  2D59               	goto	u4701
  6610     1D58  2D5A               	goto	u4700
  6611     1D59                     u4701:
  6612     1D59  2DA7               	goto	l3147
  6613     1D5A                     u4700:
  6614     1D5A                     l3129:
  6615     1D5A  01A4               	clrf	___lldiv@counter
  6616     1D5B  0AA4               	incf	___lldiv@counter,f
  6617     1D5C  2D6A               	goto	l3133
  6618     1D5D                     l3131:
  6619     1D5D  3001               	movlw	1
  6620     1D5E  00FA               	movwf	??___lldiv
  6621     1D5F                     u4715:
  6622     1D5F  1003               	clrc
  6623     1D60  0DF2               	rlf	___lldiv@divisor,f
  6624     1D61  0DF3               	rlf	___lldiv@divisor+1,f
  6625     1D62  0DF4               	rlf	___lldiv@divisor+2,f
  6626     1D63  0DF5               	rlf	___lldiv@divisor+3,f
  6627     1D64  0BFA               	decfsz	??___lldiv,f
  6628     1D65  2D5F               	goto	u4715
  6629     1D66  3001               	movlw	1
  6630     1D67  00FA               	movwf	??___lldiv
  6631     1D68  087A               	movf	??___lldiv,w
  6632     1D69  07A4               	addwf	___lldiv@counter,f
  6633     1D6A                     l3133:
  6634     1D6A  1FF5               	btfss	___lldiv@divisor+3,7
  6635     1D6B  2D6D               	goto	u4721
  6636     1D6C  2D6E               	goto	u4720
  6637     1D6D                     u4721:
  6638     1D6D  2D5D               	goto	l3131
  6639     1D6E                     u4720:
  6640     1D6E                     l3135:
  6641     1D6E  3001               	movlw	1
  6642     1D6F  00FA               	movwf	??___lldiv
  6643     1D70                     u4735:
  6644     1D70  1003               	clrc
  6645     1D71  0DA0               	rlf	___lldiv@quotient,f
  6646     1D72  0DA1               	rlf	___lldiv@quotient+1,f
  6647     1D73  0DA2               	rlf	___lldiv@quotient+2,f
  6648     1D74  0DA3               	rlf	___lldiv@quotient+3,f
  6649     1D75  0BFA               	decfsz	??___lldiv,f
  6650     1D76  2D70               	goto	u4735
  6651     1D77                     l3137:
  6652     1D77  0875               	movf	___lldiv@divisor+3,w
  6653     1D78  0279               	subwf	___lldiv@dividend+3,w
  6654     1D79  1D03               	skipz
  6655     1D7A  2D85               	goto	u4745
  6656     1D7B  0874               	movf	___lldiv@divisor+2,w
  6657     1D7C  0278               	subwf	___lldiv@dividend+2,w
  6658     1D7D  1D03               	skipz
  6659     1D7E  2D85               	goto	u4745
  6660     1D7F  0873               	movf	___lldiv@divisor+1,w
  6661     1D80  0277               	subwf	___lldiv@dividend+1,w
  6662     1D81  1D03               	skipz
  6663     1D82  2D85               	goto	u4745
  6664     1D83  0872               	movf	___lldiv@divisor,w
  6665     1D84  0276               	subwf	___lldiv@dividend,w
  6666     1D85                     u4745:
  6667     1D85  1C03               	skipc
  6668     1D86  2D88               	goto	u4741
  6669     1D87  2D89               	goto	u4740
  6670     1D88                     u4741:
  6671     1D88  2D98               	goto	l3143
  6672     1D89                     u4740:
  6673     1D89                     l3139:
  6674     1D89  0872               	movf	___lldiv@divisor,w
  6675     1D8A  02F6               	subwf	___lldiv@dividend,f
  6676     1D8B  0873               	movf	___lldiv@divisor+1,w
  6677     1D8C  1C03               	skipc
  6678     1D8D  0F73               	incfsz	___lldiv@divisor+1,w
  6679     1D8E  02F7               	subwf	___lldiv@dividend+1,f
  6680     1D8F  0874               	movf	___lldiv@divisor+2,w
  6681     1D90  1C03               	skipc
  6682     1D91  0F74               	incfsz	___lldiv@divisor+2,w
  6683     1D92  02F8               	subwf	___lldiv@dividend+2,f
  6684     1D93  0875               	movf	___lldiv@divisor+3,w
  6685     1D94  1C03               	skipc
  6686     1D95  0F75               	incfsz	___lldiv@divisor+3,w
  6687     1D96  02F9               	subwf	___lldiv@dividend+3,f
  6688     1D97                     l3141:
  6689     1D97  1420               	bsf	___lldiv@quotient,0
  6690     1D98                     l3143:
  6691     1D98  3001               	movlw	1
  6692     1D99                     u4755:
  6693     1D99  1003               	clrc
  6694     1D9A  0CF5               	rrf	___lldiv@divisor+3,f
  6695     1D9B  0CF4               	rrf	___lldiv@divisor+2,f
  6696     1D9C  0CF3               	rrf	___lldiv@divisor+1,f
  6697     1D9D  0CF2               	rrf	___lldiv@divisor,f
  6698     1D9E  3EFF               	addlw	-1
  6699     1D9F  1D03               	skipz
  6700     1DA0  2D99               	goto	u4755
  6701     1DA1                     l3145:
  6702     1DA1  3001               	movlw	1
  6703     1DA2  02A4               	subwf	___lldiv@counter,f
  6704     1DA3  1D03               	btfss	3,2
  6705     1DA4  2DA6               	goto	u4761
  6706     1DA5  2DA7               	goto	u4760
  6707     1DA6                     u4761:
  6708     1DA6  2D6E               	goto	l3135
  6709     1DA7                     u4760:
  6710     1DA7                     l3147:
  6711     1DA7  0823               	movf	___lldiv@quotient+3,w
  6712     1DA8  00F5               	movwf	?___lldiv+3
  6713     1DA9  0822               	movf	___lldiv@quotient+2,w
  6714     1DAA  00F4               	movwf	?___lldiv+2
  6715     1DAB  0821               	movf	___lldiv@quotient+1,w
  6716     1DAC  00F3               	movwf	?___lldiv+1
  6717     1DAD  0820               	movf	___lldiv@quotient,w
  6718     1DAE  00F2               	movwf	?___lldiv
  6719     1DAF                     l472:
  6720     1DAF  0008               	return
  6721     1DB0                     __end_of___lldiv:
  6722                           
  6723                           	psect	text17
  6724     1E19                     __ptext17:	
  6725 ;; *************** function ___fltol *****************
  6726 ;; Defined at:
  6727 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  f1              4   53[BANK0 ] unsigned long 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  exp1            1   62[BANK0 ] unsigned char 
  6732 ;;  sign1           1   61[BANK0 ] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  4   53[BANK0 ] long 
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6742 ;;      Params:         0       4       0       0       0
  6743 ;;      Locals:         0       2       0       0       0
  6744 ;;      Temps:          0       4       0       0       0
  6745 ;;      Totals:         0      10       0       0       0
  6746 ;;Total ram usage:       10 bytes
  6747 ;; Hardware stack levels used: 1
  6748 ;; Hardware stack levels required when called: 2
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		_sprintf
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756     1E19                     ___fltol:	
  6757                           ;psect for function ___fltol
  6758                           
  6759     1E19                     l3191:	
  6760                           ;incstack = 0
  6761                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6762                           
  6763     1E19  1003               	clrc
  6764     1E1A  1283               	bcf	3,5	;RP0=0, select bank0
  6765     1E1B  1303               	bcf	3,6	;RP1=0, select bank0
  6766     1E1C  0D57               	rlf	___fltol@f1+2,w
  6767     1E1D  0D58               	rlf	___fltol@f1+3,w
  6768     1E1E  00DE               	movwf	___fltol@exp1
  6769     1E1F  085E               	movf	___fltol@exp1,w
  6770     1E20  1D03               	btfss	3,2
  6771     1E21  2E23               	goto	u4881
  6772     1E22  2E24               	goto	u4880
  6773     1E23                     u4881:
  6774     1E23  2E2D               	goto	l3197
  6775     1E24                     u4880:
  6776     1E24                     l3193:
  6777     1E24  3000               	movlw	0
  6778     1E25  00D8               	movwf	?___fltol+3
  6779     1E26  3000               	movlw	0
  6780     1E27  00D7               	movwf	?___fltol+2
  6781     1E28  3000               	movlw	0
  6782     1E29  00D6               	movwf	?___fltol+1
  6783     1E2A  3000               	movlw	0
  6784     1E2B  00D5               	movwf	?___fltol
  6785     1E2C  2E90               	goto	l639
  6786     1E2D                     l3197:
  6787     1E2D  0855               	movf	___fltol@f1,w
  6788     1E2E  00D9               	movwf	??___fltol
  6789     1E2F  0856               	movf	___fltol@f1+1,w
  6790     1E30  00DA               	movwf	??___fltol+1
  6791     1E31  0857               	movf	___fltol@f1+2,w
  6792     1E32  00DB               	movwf	??___fltol+2
  6793     1E33  0858               	movf	___fltol@f1+3,w
  6794     1E34  00DC               	movwf	??___fltol+3
  6795     1E35  301F               	movlw	31
  6796     1E36                     u4895:
  6797     1E36  1003               	clrc
  6798     1E37  0CDC               	rrf	??___fltol+3,f
  6799     1E38  0CDB               	rrf	??___fltol+2,f
  6800     1E39  0CDA               	rrf	??___fltol+1,f
  6801     1E3A  0CD9               	rrf	??___fltol,f
  6802     1E3B                     u4890:
  6803     1E3B  3EFF               	addlw	-1
  6804     1E3C  1D03               	skipz
  6805     1E3D  2E36               	goto	u4895
  6806     1E3E  0859               	movf	??___fltol,w
  6807     1E3F  00DD               	movwf	___fltol@sign1
  6808     1E40                     l3199:
  6809     1E40  17D7               	bsf	___fltol@f1+2,7
  6810     1E41                     l3201:
  6811     1E41  30FF               	movlw	255
  6812     1E42  05D5               	andwf	___fltol@f1,f
  6813     1E43  30FF               	movlw	255
  6814     1E44  05D6               	andwf	___fltol@f1+1,f
  6815     1E45  30FF               	movlw	255
  6816     1E46  05D7               	andwf	___fltol@f1+2,f
  6817     1E47  3000               	movlw	0
  6818     1E48  05D8               	andwf	___fltol@f1+3,f
  6819     1E49                     l3203:
  6820     1E49  3096               	movlw	150
  6821     1E4A  02DE               	subwf	___fltol@exp1,f
  6822     1E4B                     l3205:
  6823     1E4B  1FDE               	btfss	___fltol@exp1,7
  6824     1E4C  2E4E               	goto	u4901
  6825     1E4D  2E4F               	goto	u4900
  6826     1E4E                     u4901:
  6827     1E4E  2E69               	goto	l3215
  6828     1E4F                     u4900:
  6829     1E4F                     l3207:
  6830     1E4F  085E               	movf	___fltol@exp1,w
  6831     1E50  3A80               	xorlw	128
  6832     1E51  3E97               	addlw	151
  6833     1E52  1803               	skipnc
  6834     1E53  2E55               	goto	u4911
  6835     1E54  2E56               	goto	u4910
  6836     1E55                     u4911:
  6837     1E55  2E57               	goto	l3213
  6838     1E56                     u4910:
  6839     1E56  2E24               	goto	l3193
  6840     1E57                     l3213:
  6841     1E57  3001               	movlw	1
  6842     1E58                     u4925:
  6843     1E58  1003               	clrc
  6844     1E59  0CD8               	rrf	___fltol@f1+3,f
  6845     1E5A  0CD7               	rrf	___fltol@f1+2,f
  6846     1E5B  0CD6               	rrf	___fltol@f1+1,f
  6847     1E5C  0CD5               	rrf	___fltol@f1,f
  6848     1E5D  3EFF               	addlw	-1
  6849     1E5E  1D03               	skipz
  6850     1E5F  2E58               	goto	u4925
  6851     1E60  3001               	movlw	1
  6852     1E61  00D9               	movwf	??___fltol
  6853     1E62  0859               	movf	??___fltol,w
  6854     1E63  07DE               	addwf	___fltol@exp1,f
  6855     1E64  1D03               	btfss	3,2
  6856     1E65  2E67               	goto	u4931
  6857     1E66  2E68               	goto	u4930
  6858     1E67                     u4931:
  6859     1E67  2E57               	goto	l3213
  6860     1E68                     u4930:
  6861     1E68  2E80               	goto	l3223
  6862     1E69                     l3215:
  6863     1E69  3020               	movlw	32
  6864     1E6A  025E               	subwf	___fltol@exp1,w
  6865     1E6B  1C03               	skipc
  6866     1E6C  2E6E               	goto	u4941
  6867     1E6D  2E6F               	goto	u4940
  6868     1E6E                     u4941:
  6869     1E6E  2E7B               	goto	l646
  6870     1E6F                     u4940:
  6871     1E6F  2E24               	goto	l3193
  6872     1E70                     l3221:
  6873     1E70  3001               	movlw	1
  6874     1E71  00D9               	movwf	??___fltol
  6875     1E72                     u4955:
  6876     1E72  1003               	clrc
  6877     1E73  0DD5               	rlf	___fltol@f1,f
  6878     1E74  0DD6               	rlf	___fltol@f1+1,f
  6879     1E75  0DD7               	rlf	___fltol@f1+2,f
  6880     1E76  0DD8               	rlf	___fltol@f1+3,f
  6881     1E77  0BD9               	decfsz	??___fltol,f
  6882     1E78  2E72               	goto	u4955
  6883     1E79  3001               	movlw	1
  6884     1E7A  02DE               	subwf	___fltol@exp1,f
  6885     1E7B                     l646:
  6886     1E7B  085E               	movf	___fltol@exp1,w
  6887     1E7C  1D03               	btfss	3,2
  6888     1E7D  2E7F               	goto	u4961
  6889     1E7E  2E80               	goto	u4960
  6890     1E7F                     u4961:
  6891     1E7F  2E70               	goto	l3221
  6892     1E80                     u4960:
  6893     1E80                     l3223:
  6894     1E80  085D               	movf	___fltol@sign1,w
  6895     1E81  1903               	btfsc	3,2
  6896     1E82  2E84               	goto	u4971
  6897     1E83  2E85               	goto	u4970
  6898     1E84                     u4971:
  6899     1E84  2E90               	goto	l649
  6900     1E85                     u4970:
  6901     1E85                     l3225:
  6902     1E85  09D5               	comf	___fltol@f1,f
  6903     1E86  09D6               	comf	___fltol@f1+1,f
  6904     1E87  09D7               	comf	___fltol@f1+2,f
  6905     1E88  09D8               	comf	___fltol@f1+3,f
  6906     1E89  0AD5               	incf	___fltol@f1,f
  6907     1E8A  1903               	skipnz
  6908     1E8B  0AD6               	incf	___fltol@f1+1,f
  6909     1E8C  1903               	skipnz
  6910     1E8D  0AD7               	incf	___fltol@f1+2,f
  6911     1E8E  1903               	skipnz
  6912     1E8F  0AD8               	incf	___fltol@f1+3,f
  6913     1E90                     l649:
  6914     1E90                     l639:
  6915     1E90  0008               	return
  6916     1E91                     __end_of___fltol:
  6917                           
  6918                           	psect	text18
  6919     1BE3                     __ptext18:	
  6920 ;; *************** function ___flsub *****************
  6921 ;; Defined at:
  6922 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  a               4    0[BANK1 ] long 
  6925 ;;  b               4    4[BANK1 ] long 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  4    0[BANK1 ] long 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6937 ;;      Params:         0       0       8       0       0
  6938 ;;      Locals:         0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0
  6940 ;;      Totals:         0       0       8       0       0
  6941 ;;Total ram usage:        8 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 3
  6944 ;; This function calls:
  6945 ;;		___fladd
  6946 ;; This function is called by:
  6947 ;;		_sprintf
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951     1BE3                     ___flsub:	
  6952                           ;psect for function ___flsub
  6953                           
  6954     1BE3                     l3247:	
  6955                           ;incstack = 0
  6956                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6957                           
  6958     1BE3  3080               	movlw	128
  6959     1BE4  1683               	bsf	3,5	;RP0=1, select bank1
  6960     1BE5  1303               	bcf	3,6	;RP1=0, select bank1
  6961     1BE6  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6962     1BE7                     l3249:
  6963     1BE7  0827               	movf	(___flsub@b+3)^(0+128),w
  6964     1BE8  1283               	bcf	3,5	;RP0=0, select bank0
  6965     1BE9  1303               	bcf	3,6	;RP1=0, select bank0
  6966     1BEA  00D9               	movwf	___fladd@b+3
  6967     1BEB  1683               	bsf	3,5	;RP0=1, select bank1
  6968     1BEC  1303               	bcf	3,6	;RP1=0, select bank1
  6969     1BED  0826               	movf	(___flsub@b+2)^(0+128),w
  6970     1BEE  1283               	bcf	3,5	;RP0=0, select bank0
  6971     1BEF  1303               	bcf	3,6	;RP1=0, select bank0
  6972     1BF0  00D8               	movwf	___fladd@b+2
  6973     1BF1  1683               	bsf	3,5	;RP0=1, select bank1
  6974     1BF2  1303               	bcf	3,6	;RP1=0, select bank1
  6975     1BF3  0825               	movf	(___flsub@b+1)^(0+128),w
  6976     1BF4  1283               	bcf	3,5	;RP0=0, select bank0
  6977     1BF5  1303               	bcf	3,6	;RP1=0, select bank0
  6978     1BF6  00D7               	movwf	___fladd@b+1
  6979     1BF7  1683               	bsf	3,5	;RP0=1, select bank1
  6980     1BF8  1303               	bcf	3,6	;RP1=0, select bank1
  6981     1BF9  0824               	movf	___flsub@b^(0+128),w
  6982     1BFA  1283               	bcf	3,5	;RP0=0, select bank0
  6983     1BFB  1303               	bcf	3,6	;RP1=0, select bank0
  6984     1BFC  00D6               	movwf	___fladd@b
  6985     1BFD  1683               	bsf	3,5	;RP0=1, select bank1
  6986     1BFE  1303               	bcf	3,6	;RP1=0, select bank1
  6987     1BFF  0823               	movf	(___flsub@a+3)^(0+128),w
  6988     1C00  1283               	bcf	3,5	;RP0=0, select bank0
  6989     1C01  1303               	bcf	3,6	;RP1=0, select bank0
  6990     1C02  00DD               	movwf	___fladd@a+3
  6991     1C03  1683               	bsf	3,5	;RP0=1, select bank1
  6992     1C04  1303               	bcf	3,6	;RP1=0, select bank1
  6993     1C05  0822               	movf	(___flsub@a+2)^(0+128),w
  6994     1C06  1283               	bcf	3,5	;RP0=0, select bank0
  6995     1C07  1303               	bcf	3,6	;RP1=0, select bank0
  6996     1C08  00DC               	movwf	___fladd@a+2
  6997     1C09  1683               	bsf	3,5	;RP0=1, select bank1
  6998     1C0A  1303               	bcf	3,6	;RP1=0, select bank1
  6999     1C0B  0821               	movf	(___flsub@a+1)^(0+128),w
  7000     1C0C  1283               	bcf	3,5	;RP0=0, select bank0
  7001     1C0D  1303               	bcf	3,6	;RP1=0, select bank0
  7002     1C0E  00DB               	movwf	___fladd@a+1
  7003     1C0F  1683               	bsf	3,5	;RP0=1, select bank1
  7004     1C10  1303               	bcf	3,6	;RP1=0, select bank1
  7005     1C11  0820               	movf	___flsub@a^(0+128),w
  7006     1C12  1283               	bcf	3,5	;RP0=0, select bank0
  7007     1C13  1303               	bcf	3,6	;RP1=0, select bank0
  7008     1C14  00DA               	movwf	___fladd@a
  7009     1C15  160A  118A  2308  160A  158A  	fcall	___fladd
  7010     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  7011     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  7012     1C1C  0859               	movf	?___fladd+3,w
  7013     1C1D  1683               	bsf	3,5	;RP0=1, select bank1
  7014     1C1E  1303               	bcf	3,6	;RP1=0, select bank1
  7015     1C1F  00A3               	movwf	(?___flsub+3)^(0+128)
  7016     1C20  1283               	bcf	3,5	;RP0=0, select bank0
  7017     1C21  1303               	bcf	3,6	;RP1=0, select bank0
  7018     1C22  0858               	movf	?___fladd+2,w
  7019     1C23  1683               	bsf	3,5	;RP0=1, select bank1
  7020     1C24  1303               	bcf	3,6	;RP1=0, select bank1
  7021     1C25  00A2               	movwf	(?___flsub+2)^(0+128)
  7022     1C26  1283               	bcf	3,5	;RP0=0, select bank0
  7023     1C27  1303               	bcf	3,6	;RP1=0, select bank0
  7024     1C28  0857               	movf	?___fladd+1,w
  7025     1C29  1683               	bsf	3,5	;RP0=1, select bank1
  7026     1C2A  1303               	bcf	3,6	;RP1=0, select bank1
  7027     1C2B  00A1               	movwf	(?___flsub+1)^(0+128)
  7028     1C2C  1283               	bcf	3,5	;RP0=0, select bank0
  7029     1C2D  1303               	bcf	3,6	;RP1=0, select bank0
  7030     1C2E  0856               	movf	?___fladd,w
  7031     1C2F  1683               	bsf	3,5	;RP0=1, select bank1
  7032     1C30  1303               	bcf	3,6	;RP1=0, select bank1
  7033     1C31  00A0               	movwf	?___flsub^(0+128)
  7034     1C32                     l809:
  7035     1C32  0008               	return
  7036     1C33                     __end_of___flsub:
  7037                           
  7038                           	psect	text19
  7039     1308                     __ptext19:	
  7040 ;; *************** function ___fladd *****************
  7041 ;; Defined at:
  7042 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  b               4   54[BANK0 ] long 
  7045 ;;  a               4   58[BANK0 ] long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  grs             1   73[BANK0 ] unsigned char 
  7048 ;;  bexp            1   72[BANK0 ] unsigned char 
  7049 ;;  aexp            1   71[BANK0 ] unsigned char 
  7050 ;;  signs           1   70[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4   54[BANK0 ] unsigned char 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0, btemp+1
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7060 ;;      Params:         0       8       0       0       0
  7061 ;;      Locals:         0       4       0       0       0
  7062 ;;      Temps:          0       8       0       0       0
  7063 ;;      Totals:         0      20       0       0       0
  7064 ;;Total ram usage:       20 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 2
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_sprintf
  7071 ;;		___flsub
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075     1308                     ___fladd:	
  7076                           ;psect for function ___fladd
  7077                           
  7078     1308                     l2573:	
  7079                           ;incstack = 0
  7080                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7081                           
  7082     1308  1283               	bcf	3,5	;RP0=0, select bank0
  7083     1309  1303               	bcf	3,6	;RP1=0, select bank0
  7084     130A  0859               	movf	___fladd@b+3,w
  7085     130B  3980               	andlw	128
  7086     130C  00E6               	movwf	___fladd@signs
  7087     130D                     l2575:
  7088     130D  0859               	movf	___fladd@b+3,w
  7089     130E  00DE               	movwf	??___fladd
  7090     130F  075E               	addwf	??___fladd,w
  7091     1310  00E8               	movwf	___fladd@bexp
  7092     1311                     l2577:
  7093     1311  1FD8               	btfss	___fladd@b+2,7
  7094     1312  2B14               	goto	u3291
  7095     1313  2B15               	goto	u3290
  7096     1314                     u3291:
  7097     1314  2B16               	goto	l2581
  7098     1315                     u3290:
  7099     1315                     l2579:
  7100     1315  1468               	bsf	___fladd@bexp,0
  7101     1316                     l2581:
  7102     1316  0868               	movf	___fladd@bexp,w
  7103     1317  1903               	btfsc	3,2
  7104     1318  2B1A               	goto	u3301
  7105     1319  2B1B               	goto	u3300
  7106     131A                     u3301:
  7107     131A  2B2B               	goto	l2591
  7108     131B                     u3300:
  7109     131B                     l2583:
  7110     131B  0A68               	incf	___fladd@bexp,w
  7111     131C  1D03               	btfss	3,2
  7112     131D  2B1F               	goto	u3311
  7113     131E  2B20               	goto	u3310
  7114     131F                     u3311:
  7115     131F  2B28               	goto	l2587
  7116     1320                     u3310:
  7117     1320                     l2585:
  7118     1320  3000               	movlw	0
  7119     1321  00D9               	movwf	___fladd@b+3
  7120     1322  3000               	movlw	0
  7121     1323  00D8               	movwf	___fladd@b+2
  7122     1324  3000               	movlw	0
  7123     1325  00D7               	movwf	___fladd@b+1
  7124     1326  3000               	movlw	0
  7125     1327  00D6               	movwf	___fladd@b
  7126     1328                     l2587:
  7127     1328  17D8               	bsf	___fladd@b+2,7
  7128     1329                     l2589:
  7129     1329  01D9               	clrf	___fladd@b+3
  7130     132A  2B33               	goto	l2593
  7131     132B                     l2591:
  7132     132B  3000               	movlw	0
  7133     132C  00D9               	movwf	___fladd@b+3
  7134     132D  3000               	movlw	0
  7135     132E  00D8               	movwf	___fladd@b+2
  7136     132F  3000               	movlw	0
  7137     1330  00D7               	movwf	___fladd@b+1
  7138     1331  3000               	movlw	0
  7139     1332  00D6               	movwf	___fladd@b
  7140     1333                     l2593:
  7141     1333  085D               	movf	___fladd@a+3,w
  7142     1334  3980               	andlw	128
  7143     1335  00E7               	movwf	___fladd@aexp
  7144     1336                     l2595:
  7145     1336  0867               	movf	___fladd@aexp,w
  7146     1337  0666               	xorwf	___fladd@signs,w
  7147     1338  1903               	skipnz
  7148     1339  2B3B               	goto	u3321
  7149     133A  2B3C               	goto	u3320
  7150     133B                     u3321:
  7151     133B  2B3D               	goto	l2599
  7152     133C                     u3320:
  7153     133C                     l2597:
  7154     133C  1766               	bsf	___fladd@signs,6
  7155     133D                     l2599:
  7156     133D  085D               	movf	___fladd@a+3,w
  7157     133E  00DE               	movwf	??___fladd
  7158     133F  075E               	addwf	??___fladd,w
  7159     1340  00E7               	movwf	___fladd@aexp
  7160     1341                     l2601:
  7161     1341  1FDC               	btfss	___fladd@a+2,7
  7162     1342  2B44               	goto	u3331
  7163     1343  2B45               	goto	u3330
  7164     1344                     u3331:
  7165     1344  2B46               	goto	l2605
  7166     1345                     u3330:
  7167     1345                     l2603:
  7168     1345  1467               	bsf	___fladd@aexp,0
  7169     1346                     l2605:
  7170     1346  0867               	movf	___fladd@aexp,w
  7171     1347  1903               	btfsc	3,2
  7172     1348  2B4A               	goto	u3341
  7173     1349  2B4B               	goto	u3340
  7174     134A                     u3341:
  7175     134A  2B5B               	goto	l2615
  7176     134B                     u3340:
  7177     134B                     l2607:
  7178     134B  0A67               	incf	___fladd@aexp,w
  7179     134C  1D03               	btfss	3,2
  7180     134D  2B4F               	goto	u3351
  7181     134E  2B50               	goto	u3350
  7182     134F                     u3351:
  7183     134F  2B58               	goto	l2611
  7184     1350                     u3350:
  7185     1350                     l2609:
  7186     1350  3000               	movlw	0
  7187     1351  00DD               	movwf	___fladd@a+3
  7188     1352  3000               	movlw	0
  7189     1353  00DC               	movwf	___fladd@a+2
  7190     1354  3000               	movlw	0
  7191     1355  00DB               	movwf	___fladd@a+1
  7192     1356  3000               	movlw	0
  7193     1357  00DA               	movwf	___fladd@a
  7194     1358                     l2611:
  7195     1358  17DC               	bsf	___fladd@a+2,7
  7196     1359                     l2613:
  7197     1359  01DD               	clrf	___fladd@a+3
  7198     135A  2B63               	goto	l763
  7199     135B                     l2615:
  7200     135B  3000               	movlw	0
  7201     135C  00DD               	movwf	___fladd@a+3
  7202     135D  3000               	movlw	0
  7203     135E  00DC               	movwf	___fladd@a+2
  7204     135F  3000               	movlw	0
  7205     1360  00DB               	movwf	___fladd@a+1
  7206     1361  3000               	movlw	0
  7207     1362  00DA               	movwf	___fladd@a
  7208     1363                     l763:
  7209     1363  0868               	movf	___fladd@bexp,w
  7210     1364  0267               	subwf	___fladd@aexp,w
  7211     1365  1803               	skipnc
  7212     1366  2B68               	goto	u3361
  7213     1367  2B69               	goto	u3360
  7214     1368                     u3361:
  7215     1368  2B8F               	goto	l2651
  7216     1369                     u3360:
  7217     1369                     l2617:
  7218     1369  1F66               	btfss	___fladd@signs,6
  7219     136A  2B6C               	goto	u3371
  7220     136B  2B6D               	goto	u3370
  7221     136C                     u3371:
  7222     136C  2B71               	goto	l2621
  7223     136D                     u3370:
  7224     136D                     l2619:
  7225     136D  3080               	movlw	128
  7226     136E  00DE               	movwf	??___fladd
  7227     136F  085E               	movf	??___fladd,w
  7228     1370  06E6               	xorwf	___fladd@signs,f
  7229     1371                     l2621:
  7230     1371  0868               	movf	___fladd@bexp,w
  7231     1372  00E9               	movwf	___fladd@grs
  7232     1373                     l2623:
  7233     1373  0867               	movf	___fladd@aexp,w
  7234     1374  00E8               	movwf	___fladd@bexp
  7235     1375                     l2625:
  7236     1375  0869               	movf	___fladd@grs,w
  7237     1376  00E7               	movwf	___fladd@aexp
  7238     1377                     l2627:
  7239     1377  0856               	movf	___fladd@b,w
  7240     1378  00E9               	movwf	___fladd@grs
  7241     1379                     l2629:
  7242     1379  085A               	movf	___fladd@a,w
  7243     137A  00D6               	movwf	___fladd@b
  7244     137B                     l2631:
  7245     137B  0869               	movf	___fladd@grs,w
  7246     137C  00DA               	movwf	___fladd@a
  7247     137D                     l2633:
  7248     137D  0857               	movf	___fladd@b+1,w
  7249     137E  00E9               	movwf	___fladd@grs
  7250     137F                     l2635:
  7251     137F  085B               	movf	___fladd@a+1,w
  7252     1380  00D7               	movwf	___fladd@b+1
  7253     1381                     l2637:
  7254     1381  0869               	movf	___fladd@grs,w
  7255     1382  00DB               	movwf	___fladd@a+1
  7256     1383                     l2639:
  7257     1383  0858               	movf	___fladd@b+2,w
  7258     1384  00E9               	movwf	___fladd@grs
  7259     1385                     l2641:
  7260     1385  085C               	movf	___fladd@a+2,w
  7261     1386  00D8               	movwf	___fladd@b+2
  7262     1387                     l2643:
  7263     1387  0869               	movf	___fladd@grs,w
  7264     1388  00DC               	movwf	___fladd@a+2
  7265     1389                     l2645:
  7266     1389  0859               	movf	___fladd@b+3,w
  7267     138A  00E9               	movwf	___fladd@grs
  7268     138B                     l2647:
  7269     138B  085D               	movf	___fladd@a+3,w
  7270     138C  00D9               	movwf	___fladd@b+3
  7271     138D                     l2649:
  7272     138D  0869               	movf	___fladd@grs,w
  7273     138E  00DD               	movwf	___fladd@a+3
  7274     138F                     l2651:
  7275     138F  01E9               	clrf	___fladd@grs
  7276     1390                     l2653:
  7277     1390  0867               	movf	___fladd@aexp,w
  7278     1391  00DE               	movwf	??___fladd
  7279     1392  01DF               	clrf	??___fladd+1
  7280     1393  085F               	movf	??___fladd+1,w
  7281     1394  00E1               	movwf	??___fladd+3
  7282     1395  0868               	movf	___fladd@bexp,w
  7283     1396  025E               	subwf	??___fladd,w
  7284     1397  00E0               	movwf	??___fladd+2
  7285     1398  1C03               	skipc
  7286     1399  03E1               	decf	??___fladd+3,f
  7287     139A  0861               	movf	??___fladd+3,w
  7288     139B  3A80               	xorlw	128
  7289     139C  00FF               	movwf	btemp+1
  7290     139D  3080               	movlw	128
  7291     139E  027F               	subwf	btemp+1,w
  7292     139F  1D03               	skipz
  7293     13A0  2BA3               	goto	u3385
  7294     13A1  301A               	movlw	26
  7295     13A2  0260               	subwf	??___fladd+2,w
  7296     13A3                     u3385:
  7297     13A3  1C03               	skipc
  7298     13A4  2BA6               	goto	u3381
  7299     13A5  2BA7               	goto	u3380
  7300     13A6                     u3381:
  7301     13A6  2BDE               	goto	l2669
  7302     13A7                     u3380:
  7303     13A7                     l2655:
  7304     13A7  1283               	bcf	3,5	;RP0=0, select bank0
  7305     13A8  1303               	bcf	3,6	;RP1=0, select bank0
  7306     13A9  0859               	movf	___fladd@b+3,w
  7307     13AA  0458               	iorwf	___fladd@b+2,w
  7308     13AB  0457               	iorwf	___fladd@b+1,w
  7309     13AC  0456               	iorwf	___fladd@b,w
  7310     13AD  1D03               	skipz
  7311     13AE  2BB0               	goto	u3391
  7312     13AF  2BB2               	goto	u3390
  7313     13B0                     u3391:
  7314     13B0  3001               	movlw	1
  7315     13B1  2BB3               	goto	u3400
  7316     13B2                     u3390:
  7317     13B2  3000               	movlw	0
  7318     13B3                     u3400:
  7319     13B3  00E9               	movwf	___fladd@grs
  7320     13B4  3000               	movlw	0
  7321     13B5  00D9               	movwf	___fladd@b+3
  7322     13B6  3000               	movlw	0
  7323     13B7  00D8               	movwf	___fladd@b+2
  7324     13B8  3000               	movlw	0
  7325     13B9  00D7               	movwf	___fladd@b+1
  7326     13BA  3000               	movlw	0
  7327     13BB  00D6               	movwf	___fladd@b
  7328     13BC  0867               	movf	___fladd@aexp,w
  7329     13BD  00E8               	movwf	___fladd@bexp
  7330     13BE  2BE6               	goto	l767
  7331     13BF                     l769:
  7332     13BF  1C69               	btfss	___fladd@grs,0
  7333     13C0  2BC2               	goto	u3411
  7334     13C1  2BC3               	goto	u3410
  7335     13C2                     u3411:
  7336     13C2  2BCA               	goto	l2659
  7337     13C3                     u3410:
  7338     13C3                     l2657:
  7339     13C3  0869               	movf	___fladd@grs,w
  7340     13C4  00DE               	movwf	??___fladd
  7341     13C5  1003               	clrc
  7342     13C6  0C5E               	rrf	??___fladd,w
  7343     13C7  3801               	iorlw	1
  7344     13C8  00E9               	movwf	___fladd@grs
  7345     13C9  2BCC               	goto	l2661
  7346     13CA                     l2659:
  7347     13CA  1003               	clrc
  7348     13CB  0CE9               	rrf	___fladd@grs,f
  7349     13CC                     l2661:
  7350     13CC  1C56               	btfss	___fladd@b,0
  7351     13CD  2BCF               	goto	u3421
  7352     13CE  2BD0               	goto	u3420
  7353     13CF                     u3421:
  7354     13CF  2BD1               	goto	l2665
  7355     13D0                     u3420:
  7356     13D0                     l2663:
  7357     13D0  17E9               	bsf	___fladd@grs,7
  7358     13D1                     l2665:
  7359     13D1  3001               	movlw	1
  7360     13D2  00DE               	movwf	??___fladd
  7361     13D3                     u3435:
  7362     13D3  0D59               	rlf	___fladd@b+3,w
  7363     13D4  0CD9               	rrf	___fladd@b+3,f
  7364     13D5  0CD8               	rrf	___fladd@b+2,f
  7365     13D6  0CD7               	rrf	___fladd@b+1,f
  7366     13D7  0CD6               	rrf	___fladd@b,f
  7367     13D8  0BDE               	decfsz	??___fladd& (0+127),f
  7368     13D9  2BD3               	goto	u3435
  7369     13DA                     l2667:
  7370     13DA  3001               	movlw	1
  7371     13DB  00DE               	movwf	??___fladd
  7372     13DC  085E               	movf	??___fladd,w
  7373     13DD  07E8               	addwf	___fladd@bexp,f
  7374     13DE                     l2669:
  7375     13DE  1283               	bcf	3,5	;RP0=0, select bank0
  7376     13DF  1303               	bcf	3,6	;RP1=0, select bank0
  7377     13E0  0867               	movf	___fladd@aexp,w
  7378     13E1  0268               	subwf	___fladd@bexp,w
  7379     13E2  1C03               	skipc
  7380     13E3  2BE5               	goto	u3441
  7381     13E4  2BE6               	goto	u3440
  7382     13E5                     u3441:
  7383     13E5  2BBF               	goto	l769
  7384     13E6                     u3440:
  7385     13E6                     l767:
  7386     13E6  1B66               	btfsc	___fladd@signs,6
  7387     13E7  2BE9               	goto	u3451
  7388     13E8  2BEA               	goto	u3450
  7389     13E9                     u3451:
  7390     13E9  2C33               	goto	l2695
  7391     13EA                     u3450:
  7392     13EA                     l2671:
  7393     13EA  0868               	movf	___fladd@bexp,w
  7394     13EB  1D03               	btfss	3,2
  7395     13EC  2BEE               	goto	u3461
  7396     13ED  2BEF               	goto	u3460
  7397     13EE                     u3461:
  7398     13EE  2BF8               	goto	l2677
  7399     13EF                     u3460:
  7400     13EF                     l2673:
  7401     13EF  3000               	movlw	0
  7402     13F0  00D9               	movwf	?___fladd+3
  7403     13F1  3000               	movlw	0
  7404     13F2  00D8               	movwf	?___fladd+2
  7405     13F3  3000               	movlw	0
  7406     13F4  00D7               	movwf	?___fladd+1
  7407     13F5  3000               	movlw	0
  7408     13F6  00D6               	movwf	?___fladd
  7409     13F7  2D5F               	goto	l776
  7410     13F8                     l2677:
  7411     13F8  085A               	movf	___fladd@a,w
  7412     13F9  07D6               	addwf	___fladd@b,f
  7413     13FA  085B               	movf	___fladd@a+1,w
  7414     13FB  1103               	clrz
  7415     13FC  1803               	skipnc
  7416     13FD  3E01               	addlw	1
  7417     13FE  1903               	skipnz
  7418     13FF  2C01               	goto	u3471
  7419     1400  07D7               	addwf	___fladd@b+1,f
  7420     1401                     u3471:
  7421     1401  085C               	movf	___fladd@a+2,w
  7422     1402  1103               	clrz
  7423     1403  1803               	skipnc
  7424     1404  3E01               	addlw	1
  7425     1405  1903               	skipnz
  7426     1406  2C08               	goto	u3472
  7427     1407  07D8               	addwf	___fladd@b+2,f
  7428     1408                     u3472:
  7429     1408  085D               	movf	___fladd@a+3,w
  7430     1409  1103               	clrz
  7431     140A  1803               	skipnc
  7432     140B  3E01               	addlw	1
  7433     140C  1903               	skipnz
  7434     140D  2C0F               	goto	u3473
  7435     140E  07D9               	addwf	___fladd@b+3,f
  7436     140F                     u3473:
  7437     140F                     l2679:
  7438     140F  1C59               	btfss	___fladd@b+3,0
  7439     1410  2C12               	goto	u3481
  7440     1411  2C13               	goto	u3480
  7441     1412                     u3481:
  7442     1412  2CE7               	goto	l2729
  7443     1413                     u3480:
  7444     1413                     l2681:
  7445     1413  1C69               	btfss	___fladd@grs,0
  7446     1414  2C16               	goto	u3491
  7447     1415  2C17               	goto	u3490
  7448     1416                     u3491:
  7449     1416  2C1E               	goto	l2685
  7450     1417                     u3490:
  7451     1417                     l2683:
  7452     1417  0869               	movf	___fladd@grs,w
  7453     1418  00DE               	movwf	??___fladd
  7454     1419  1003               	clrc
  7455     141A  0C5E               	rrf	??___fladd,w
  7456     141B  3801               	iorlw	1
  7457     141C  00E9               	movwf	___fladd@grs
  7458     141D  2C20               	goto	l2687
  7459     141E                     l2685:
  7460     141E  1003               	clrc
  7461     141F  0CE9               	rrf	___fladd@grs,f
  7462     1420                     l2687:
  7463     1420  1C56               	btfss	___fladd@b,0
  7464     1421  2C23               	goto	u3501
  7465     1422  2C24               	goto	u3500
  7466     1423                     u3501:
  7467     1423  2C25               	goto	l2691
  7468     1424                     u3500:
  7469     1424                     l2689:
  7470     1424  17E9               	bsf	___fladd@grs,7
  7471     1425                     l2691:
  7472     1425  3001               	movlw	1
  7473     1426  00DE               	movwf	??___fladd
  7474     1427                     u3515:
  7475     1427  0D59               	rlf	___fladd@b+3,w
  7476     1428  0CD9               	rrf	___fladd@b+3,f
  7477     1429  0CD8               	rrf	___fladd@b+2,f
  7478     142A  0CD7               	rrf	___fladd@b+1,f
  7479     142B  0CD6               	rrf	___fladd@b,f
  7480     142C  0BDE               	decfsz	??___fladd& (0+127),f
  7481     142D  2C27               	goto	u3515
  7482     142E                     l2693:
  7483     142E  3001               	movlw	1
  7484     142F  00DE               	movwf	??___fladd
  7485     1430  085E               	movf	??___fladd,w
  7486     1431  07E8               	addwf	___fladd@bexp,f
  7487     1432  2CE7               	goto	l2729
  7488     1433                     l2695:
  7489     1433  0859               	movf	___fladd@b+3,w
  7490     1434  3A80               	xorlw	128
  7491     1435  00FF               	movwf	btemp+1
  7492     1436  085D               	movf	___fladd@a+3,w
  7493     1437  3A80               	xorlw	128
  7494     1438  027F               	subwf	btemp+1,w
  7495     1439  1D03               	skipz
  7496     143A  2C45               	goto	u3523
  7497     143B  085C               	movf	___fladd@a+2,w
  7498     143C  0258               	subwf	___fladd@b+2,w
  7499     143D  1D03               	skipz
  7500     143E  2C45               	goto	u3523
  7501     143F  085B               	movf	___fladd@a+1,w
  7502     1440  0257               	subwf	___fladd@b+1,w
  7503     1441  1D03               	skipz
  7504     1442  2C45               	goto	u3523
  7505     1443  085A               	movf	___fladd@a,w
  7506     1444  0256               	subwf	___fladd@b,w
  7507     1445                     u3523:
  7508     1445  1803               	skipnc
  7509     1446  2C48               	goto	u3521
  7510     1447  2C49               	goto	u3520
  7511     1448                     u3521:
  7512     1448  2CA1               	goto	l2705
  7513     1449                     u3520:
  7514     1449                     l2697:
  7515     1449  30FF               	movlw	255
  7516     144A  00DE               	movwf	??___fladd
  7517     144B  30FF               	movlw	255
  7518     144C  00DF               	movwf	??___fladd+1
  7519     144D  30FF               	movlw	255
  7520     144E  00E0               	movwf	??___fladd+2
  7521     144F  30FF               	movlw	255
  7522     1450  00E1               	movwf	??___fladd+3
  7523     1451  085A               	movf	___fladd@a,w
  7524     1452  00E2               	movwf	??___fladd+4
  7525     1453  085B               	movf	___fladd@a+1,w
  7526     1454  00E3               	movwf	??___fladd+5
  7527     1455  085C               	movf	___fladd@a+2,w
  7528     1456  00E4               	movwf	??___fladd+6
  7529     1457  085D               	movf	___fladd@a+3,w
  7530     1458  00E5               	movwf	??___fladd+7
  7531     1459  0856               	movf	___fladd@b,w
  7532     145A  02E2               	subwf	??___fladd+4,f
  7533     145B  0857               	movf	___fladd@b+1,w
  7534     145C  1C03               	skipc
  7535     145D  0F57               	incfsz	___fladd@b+1,w
  7536     145E  2C60               	goto	u3531
  7537     145F  2C61               	goto	u3532
  7538     1460                     u3531:
  7539     1460  02E3               	subwf	??___fladd+5,f
  7540     1461                     u3532:
  7541     1461  0858               	movf	___fladd@b+2,w
  7542     1462  1C03               	skipc
  7543     1463  0F58               	incfsz	___fladd@b+2,w
  7544     1464  2C66               	goto	u3533
  7545     1465  2C67               	goto	u3534
  7546     1466                     u3533:
  7547     1466  02E4               	subwf	??___fladd+6,f
  7548     1467                     u3534:
  7549     1467  0859               	movf	___fladd@b+3,w
  7550     1468  1C03               	skipc
  7551     1469  0F59               	incfsz	___fladd@b+3,w
  7552     146A  2C6C               	goto	u3535
  7553     146B  2C6D               	goto	u3536
  7554     146C                     u3535:
  7555     146C  02E5               	subwf	??___fladd+7,f
  7556     146D                     u3536:
  7557     146D  0862               	movf	??___fladd+4,w
  7558     146E  07DE               	addwf	??___fladd,f
  7559     146F  0863               	movf	??___fladd+5,w
  7560     1470  1803               	skipnc
  7561     1471  0F63               	incfsz	??___fladd+5,w
  7562     1472  2C74               	goto	u3540
  7563     1473  2C75               	goto	u3541
  7564     1474                     u3540:
  7565     1474  07DF               	addwf	??___fladd+1,f
  7566     1475                     u3541:
  7567     1475  0864               	movf	??___fladd+6,w
  7568     1476  1803               	skipnc
  7569     1477  0F64               	incfsz	??___fladd+6,w
  7570     1478  2C7A               	goto	u3542
  7571     1479  2C7B               	goto	u3543
  7572     147A                     u3542:
  7573     147A  07E0               	addwf	??___fladd+2,f
  7574     147B                     u3543:
  7575     147B  0865               	movf	??___fladd+7,w
  7576     147C  1803               	skipnc
  7577     147D  0A65               	incf	??___fladd+7,w
  7578     147E  07E1               	addwf	??___fladd+3,f
  7579     147F  0861               	movf	??___fladd+3,w
  7580     1480  00D9               	movwf	___fladd@b+3
  7581     1481  0860               	movf	??___fladd+2,w
  7582     1482  00D8               	movwf	___fladd@b+2
  7583     1483  085F               	movf	??___fladd+1,w
  7584     1484  00D7               	movwf	___fladd@b+1
  7585     1485  085E               	movf	??___fladd,w
  7586     1486  00D6               	movwf	___fladd@b
  7587     1487                     l2699:
  7588     1487  3080               	movlw	128
  7589     1488  00DE               	movwf	??___fladd
  7590     1489  085E               	movf	??___fladd,w
  7591     148A  06E6               	xorwf	___fladd@signs,f
  7592     148B  09E9               	comf	___fladd@grs,f
  7593     148C  0AE9               	incf	___fladd@grs,f
  7594     148D                     l2701:
  7595     148D  0869               	movf	___fladd@grs,w
  7596     148E  1D03               	btfss	3,2
  7597     148F  2C91               	goto	u3551
  7598     1490  2C92               	goto	u3550
  7599     1491                     u3551:
  7600     1491  2CAF               	goto	l784
  7601     1492                     u3550:
  7602     1492                     l2703:
  7603     1492  3001               	movlw	1
  7604     1493  07D6               	addwf	___fladd@b,f
  7605     1494  3000               	movlw	0
  7606     1495  1803               	skipnc
  7607     1496  3001               	movlw	1
  7608     1497  07D7               	addwf	___fladd@b+1,f
  7609     1498  3000               	movlw	0
  7610     1499  1803               	skipnc
  7611     149A  3001               	movlw	1
  7612     149B  07D8               	addwf	___fladd@b+2,f
  7613     149C  3000               	movlw	0
  7614     149D  1803               	skipnc
  7615     149E  3001               	movlw	1
  7616     149F  07D9               	addwf	___fladd@b+3,f
  7617     14A0  2CAF               	goto	l784
  7618     14A1                     l2705:
  7619     14A1  085A               	movf	___fladd@a,w
  7620     14A2  02D6               	subwf	___fladd@b,f
  7621     14A3  085B               	movf	___fladd@a+1,w
  7622     14A4  1C03               	skipc
  7623     14A5  0F5B               	incfsz	___fladd@a+1,w
  7624     14A6  02D7               	subwf	___fladd@b+1,f
  7625     14A7  085C               	movf	___fladd@a+2,w
  7626     14A8  1C03               	skipc
  7627     14A9  0F5C               	incfsz	___fladd@a+2,w
  7628     14AA  02D8               	subwf	___fladd@b+2,f
  7629     14AB  085D               	movf	___fladd@a+3,w
  7630     14AC  1C03               	skipc
  7631     14AD  0F5D               	incfsz	___fladd@a+3,w
  7632     14AE  02D9               	subwf	___fladd@b+3,f
  7633     14AF                     l784:
  7634     14AF  0859               	movf	___fladd@b+3,w
  7635     14B0  0458               	iorwf	___fladd@b+2,w
  7636     14B1  0457               	iorwf	___fladd@b+1,w
  7637     14B2  0456               	iorwf	___fladd@b,w
  7638     14B3  1D03               	skipz
  7639     14B4  2CB6               	goto	u3561
  7640     14B5  2CB7               	goto	u3560
  7641     14B6                     u3561:
  7642     14B6  2CE3               	goto	l2727
  7643     14B7                     u3560:
  7644     14B7                     l2707:
  7645     14B7  0869               	movf	___fladd@grs,w
  7646     14B8  1D03               	btfss	3,2
  7647     14B9  2CBB               	goto	u3571
  7648     14BA  2CBC               	goto	u3570
  7649     14BB                     u3571:
  7650     14BB  2CE3               	goto	l2727
  7651     14BC                     u3570:
  7652     14BC                     l2709:
  7653     14BC  3000               	movlw	0
  7654     14BD  00D9               	movwf	?___fladd+3
  7655     14BE  3000               	movlw	0
  7656     14BF  00D8               	movwf	?___fladd+2
  7657     14C0  3000               	movlw	0
  7658     14C1  00D7               	movwf	?___fladd+1
  7659     14C2  3000               	movlw	0
  7660     14C3  00D6               	movwf	?___fladd
  7661     14C4  2D5F               	goto	l776
  7662     14C5                     l2713:
  7663     14C5  3001               	movlw	1
  7664     14C6  00DE               	movwf	??___fladd
  7665     14C7                     u3585:
  7666     14C7  1003               	clrc
  7667     14C8  0DD6               	rlf	___fladd@b,f
  7668     14C9  0DD7               	rlf	___fladd@b+1,f
  7669     14CA  0DD8               	rlf	___fladd@b+2,f
  7670     14CB  0DD9               	rlf	___fladd@b+3,f
  7671     14CC  0BDE               	decfsz	??___fladd,f
  7672     14CD  2CC7               	goto	u3585
  7673     14CE                     l2715:
  7674     14CE  1FE9               	btfss	___fladd@grs,7
  7675     14CF  2CD1               	goto	u3591
  7676     14D0  2CD2               	goto	u3590
  7677     14D1                     u3591:
  7678     14D1  2CD3               	goto	l788
  7679     14D2                     u3590:
  7680     14D2                     l2717:
  7681     14D2  1456               	bsf	___fladd@b,0
  7682     14D3                     l788:
  7683     14D3  1C69               	btfss	___fladd@grs,0
  7684     14D4  2CD6               	goto	u3601
  7685     14D5  2CD7               	goto	u3600
  7686     14D6                     u3601:
  7687     14D6  2CDA               	goto	l2721
  7688     14D7                     u3600:
  7689     14D7                     l2719:
  7690     14D7  1403               	setc
  7691     14D8  0DE9               	rlf	___fladd@grs,f
  7692     14D9  2CDC               	goto	l2723
  7693     14DA                     l2721:
  7694     14DA  1003               	clrc
  7695     14DB  0DE9               	rlf	___fladd@grs,f
  7696     14DC                     l2723:
  7697     14DC  0868               	movf	___fladd@bexp,w
  7698     14DD  1903               	btfsc	3,2
  7699     14DE  2CE0               	goto	u3611
  7700     14DF  2CE1               	goto	u3610
  7701     14E0                     u3611:
  7702     14E0  2CE3               	goto	l2727
  7703     14E1                     u3610:
  7704     14E1                     l2725:
  7705     14E1  3001               	movlw	1
  7706     14E2  02E8               	subwf	___fladd@bexp,f
  7707     14E3                     l2727:
  7708     14E3  1FD8               	btfss	___fladd@b+2,7
  7709     14E4  2CE6               	goto	u3621
  7710     14E5  2CE7               	goto	u3620
  7711     14E6                     u3621:
  7712     14E6  2CC5               	goto	l2713
  7713     14E7                     u3620:
  7714     14E7                     l2729:
  7715     14E7  01E7               	clrf	___fladd@aexp
  7716     14E8                     l2731:
  7717     14E8  1FE9               	btfss	___fladd@grs,7
  7718     14E9  2CEB               	goto	u3631
  7719     14EA  2CEC               	goto	u3630
  7720     14EB                     u3631:
  7721     14EB  2CFA               	goto	l2739
  7722     14EC                     u3630:
  7723     14EC                     l2733:
  7724     14EC  0869               	movf	___fladd@grs,w
  7725     14ED  397F               	andlw	127
  7726     14EE  1903               	btfsc	3,2
  7727     14EF  2CF1               	goto	u3641
  7728     14F0  2CF2               	goto	u3640
  7729     14F1                     u3641:
  7730     14F1  2CF5               	goto	l794
  7731     14F2                     u3640:
  7732     14F2                     l2735:
  7733     14F2  01E7               	clrf	___fladd@aexp
  7734     14F3  0AE7               	incf	___fladd@aexp,f
  7735     14F4  2CFA               	goto	l2739
  7736     14F5                     l794:
  7737     14F5  1C56               	btfss	___fladd@b,0
  7738     14F6  2CF8               	goto	u3651
  7739     14F7  2CF9               	goto	u3650
  7740     14F8                     u3651:
  7741     14F8  2CFA               	goto	l2739
  7742     14F9                     u3650:
  7743     14F9  2CF2               	goto	l2735
  7744     14FA                     l2739:
  7745     14FA  0867               	movf	___fladd@aexp,w
  7746     14FB  1903               	btfsc	3,2
  7747     14FC  2CFE               	goto	u3661
  7748     14FD  2CFF               	goto	u3660
  7749     14FE                     u3661:
  7750     14FE  2D33               	goto	l797
  7751     14FF                     u3660:
  7752     14FF                     l2741:
  7753     14FF  3001               	movlw	1
  7754     1500  07D6               	addwf	___fladd@b,f
  7755     1501  3000               	movlw	0
  7756     1502  1803               	skipnc
  7757     1503  3001               	movlw	1
  7758     1504  07D7               	addwf	___fladd@b+1,f
  7759     1505  3000               	movlw	0
  7760     1506  1803               	skipnc
  7761     1507  3001               	movlw	1
  7762     1508  07D8               	addwf	___fladd@b+2,f
  7763     1509  3000               	movlw	0
  7764     150A  1803               	skipnc
  7765     150B  3001               	movlw	1
  7766     150C  07D9               	addwf	___fladd@b+3,f
  7767     150D                     l2743:
  7768     150D  1C59               	btfss	___fladd@b+3,0
  7769     150E  2D10               	goto	u3671
  7770     150F  2D11               	goto	u3670
  7771     1510                     u3671:
  7772     1510  2D33               	goto	l797
  7773     1511                     u3670:
  7774     1511                     l2745:
  7775     1511  0856               	movf	___fladd@b,w
  7776     1512  00DE               	movwf	??___fladd
  7777     1513  0857               	movf	___fladd@b+1,w
  7778     1514  00DF               	movwf	??___fladd+1
  7779     1515  0858               	movf	___fladd@b+2,w
  7780     1516  00E0               	movwf	??___fladd+2
  7781     1517  0859               	movf	___fladd@b+3,w
  7782     1518  00E1               	movwf	??___fladd+3
  7783     1519  3001               	movlw	1
  7784     151A  00E2               	movwf	??___fladd+4
  7785     151B                     u3685:
  7786     151B  0D61               	rlf	??___fladd+3,w
  7787     151C  0CE1               	rrf	??___fladd+3,f
  7788     151D  0CE0               	rrf	??___fladd+2,f
  7789     151E  0CDF               	rrf	??___fladd+1,f
  7790     151F  0CDE               	rrf	??___fladd,f
  7791     1520                     u3680:
  7792     1520  0BE2               	decfsz	??___fladd+4,f
  7793     1521  2D1B               	goto	u3685
  7794     1522  0861               	movf	??___fladd+3,w
  7795     1523  00D9               	movwf	___fladd@b+3
  7796     1524  0860               	movf	??___fladd+2,w
  7797     1525  00D8               	movwf	___fladd@b+2
  7798     1526  085F               	movf	??___fladd+1,w
  7799     1527  00D7               	movwf	___fladd@b+1
  7800     1528  085E               	movf	??___fladd,w
  7801     1529  00D6               	movwf	___fladd@b
  7802     152A  0A68               	incf	___fladd@bexp,w
  7803     152B  1903               	btfsc	3,2
  7804     152C  2D2E               	goto	u3691
  7805     152D  2D2F               	goto	u3690
  7806     152E                     u3691:
  7807     152E  2D33               	goto	l797
  7808     152F                     u3690:
  7809     152F                     l2747:
  7810     152F  3001               	movlw	1
  7811     1530  00DE               	movwf	??___fladd
  7812     1531  085E               	movf	??___fladd,w
  7813     1532  07E8               	addwf	___fladd@bexp,f
  7814     1533                     l797:
  7815     1533  0A68               	incf	___fladd@bexp,w
  7816     1534  1903               	btfsc	3,2
  7817     1535  2D37               	goto	u3701
  7818     1536  2D38               	goto	u3700
  7819     1537                     u3701:
  7820     1537  2D3D               	goto	l2751
  7821     1538                     u3700:
  7822     1538                     l2749:
  7823     1538  0868               	movf	___fladd@bexp,w
  7824     1539  1D03               	btfss	3,2
  7825     153A  2D3C               	goto	u3711
  7826     153B  2D3D               	goto	u3710
  7827     153C                     u3711:
  7828     153C  2D4B               	goto	l2757
  7829     153D                     u3710:
  7830     153D                     l2751:
  7831     153D  3000               	movlw	0
  7832     153E  00D9               	movwf	___fladd@b+3
  7833     153F  3000               	movlw	0
  7834     1540  00D8               	movwf	___fladd@b+2
  7835     1541  3000               	movlw	0
  7836     1542  00D7               	movwf	___fladd@b+1
  7837     1543  3000               	movlw	0
  7838     1544  00D6               	movwf	___fladd@b
  7839     1545                     l2753:
  7840     1545  0868               	movf	___fladd@bexp,w
  7841     1546  1D03               	btfss	3,2
  7842     1547  2D49               	goto	u3721
  7843     1548  2D4A               	goto	u3720
  7844     1549                     u3721:
  7845     1549  2D4B               	goto	l2757
  7846     154A                     u3720:
  7847     154A                     l2755:
  7848     154A  01E6               	clrf	___fladd@signs
  7849     154B                     l2757:
  7850     154B  1C68               	btfss	___fladd@bexp,0
  7851     154C  2D4E               	goto	u3731
  7852     154D  2D4F               	goto	u3730
  7853     154E                     u3731:
  7854     154E  2D51               	goto	l2761
  7855     154F                     u3730:
  7856     154F                     l2759:
  7857     154F  17D8               	bsf	___fladd@b+2,7
  7858     1550  2D55               	goto	l805
  7859     1551                     l2761:
  7860     1551  307F               	movlw	127
  7861     1552  00DE               	movwf	??___fladd
  7862     1553  085E               	movf	??___fladd,w
  7863     1554  05D8               	andwf	___fladd@b+2,f
  7864     1555                     l805:
  7865     1555  0868               	movf	___fladd@bexp,w
  7866     1556  00DE               	movwf	??___fladd
  7867     1557  1003               	clrc
  7868     1558  0C5E               	rrf	??___fladd,w
  7869     1559  00D9               	movwf	___fladd@b+3
  7870     155A                     l2763:
  7871     155A  1FE6               	btfss	___fladd@signs,7
  7872     155B  2D5D               	goto	u3741
  7873     155C  2D5E               	goto	u3740
  7874     155D                     u3741:
  7875     155D  2D5F               	goto	l806
  7876     155E                     u3740:
  7877     155E                     l2765:
  7878     155E  17D9               	bsf	___fladd@b+3,7
  7879     155F                     l806:
  7880     155F                     l776:
  7881     155F  0008               	return
  7882     1560                     __end_of___fladd:
  7883                           
  7884                           	psect	text20
  7885     19AF                     __ptext20:	
  7886 ;; *************** function ___flneg *****************
  7887 ;; Defined at:
  7888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  f1              4    2[COMMON] unsigned char 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  4    2[COMMON] unsigned char 
  7895 ;; Registers used:
  7896 ;;		wreg
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7902 ;;      Params:         4       0       0       0       0
  7903 ;;      Locals:         0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0
  7905 ;;      Totals:         4       0       0       0       0
  7906 ;;Total ram usage:        4 bytes
  7907 ;; Hardware stack levels used: 1
  7908 ;; Hardware stack levels required when called: 2
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_sprintf
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916     19AF                     ___flneg:	
  7917                           ;psect for function ___flneg
  7918                           
  7919     19AF                     l3183:	
  7920                           ;incstack = 0
  7921                           ; Regs used in ___flneg: [wreg]
  7922                           
  7923     19AF  0875               	movf	___flneg@f1+3,w
  7924     19B0  0474               	iorwf	___flneg@f1+2,w
  7925     19B1  0473               	iorwf	___flneg@f1+1,w
  7926     19B2  0472               	iorwf	___flneg@f1,w
  7927     19B3  1903               	skipnz
  7928     19B4  29B6               	goto	u4871
  7929     19B5  29B7               	goto	u4870
  7930     19B6                     u4871:
  7931     19B6  29B9               	goto	l3187
  7932     19B7                     u4870:
  7933     19B7                     l3185:
  7934     19B7  3080               	movlw	128
  7935     19B8  06F5               	xorwf	___flneg@f1+3,f
  7936     19B9                     l3187:
  7937     19B9                     l635:
  7938     19B9  0008               	return
  7939     19BA                     __end_of___flneg:
  7940                           
  7941                           	psect	text21
  7942     10C1                     __ptext21:	
  7943 ;; *************** function ___flge *****************
  7944 ;; Defined at:
  7945 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  ff1             4    2[COMMON] unsigned char 
  7948 ;;  ff2             4    6[COMMON] unsigned char 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;		None               void
  7953 ;; Registers used:
  7954 ;;		wreg, status,2, status,0
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7960 ;;      Params:         8       0       0       0       0
  7961 ;;      Locals:         0       0       0       0       0
  7962 ;;      Temps:          0       4       0       0       0
  7963 ;;      Totals:         8       4       0       0       0
  7964 ;;Total ram usage:       12 bytes
  7965 ;; Hardware stack levels used: 1
  7966 ;; Hardware stack levels required when called: 2
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		_sprintf
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974     10C1                     ___flge:	
  7975                           ;psect for function ___flge
  7976                           
  7977     10C1                     l3163:	
  7978                           ;incstack = 0
  7979                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7980                           
  7981     10C1  3000               	movlw	0
  7982     10C2  0572               	andwf	___flge@ff1,w
  7983     10C3  1283               	bcf	3,5	;RP0=0, select bank0
  7984     10C4  1303               	bcf	3,6	;RP1=0, select bank0
  7985     10C5  00A0               	movwf	??___flge
  7986     10C6  3000               	movlw	0
  7987     10C7  0573               	andwf	___flge@ff1+1,w
  7988     10C8  00A1               	movwf	??___flge+1
  7989     10C9  3080               	movlw	128
  7990     10CA  0574               	andwf	___flge@ff1+2,w
  7991     10CB  00A2               	movwf	??___flge+2
  7992     10CC  307F               	movlw	127
  7993     10CD  0575               	andwf	___flge@ff1+3,w
  7994     10CE  00A3               	movwf	??___flge+3
  7995     10CF  0823               	movf	??___flge+3,w
  7996     10D0  0422               	iorwf	??___flge+2,w
  7997     10D1  0421               	iorwf	??___flge+1,w
  7998     10D2  0420               	iorwf	??___flge,w
  7999     10D3  1D03               	skipz
  8000     10D4  28D6               	goto	u4801
  8001     10D5  28D7               	goto	u4800
  8002     10D6                     u4801:
  8003     10D6  28DF               	goto	l627
  8004     10D7                     u4800:
  8005     10D7                     l3165:
  8006     10D7  3000               	movlw	0
  8007     10D8  00F5               	movwf	___flge@ff1+3
  8008     10D9  3000               	movlw	0
  8009     10DA  00F4               	movwf	___flge@ff1+2
  8010     10DB  3000               	movlw	0
  8011     10DC  00F3               	movwf	___flge@ff1+1
  8012     10DD  3000               	movlw	0
  8013     10DE  00F2               	movwf	___flge@ff1
  8014     10DF                     l627:
  8015     10DF  3000               	movlw	0
  8016     10E0  0576               	andwf	___flge@ff2,w
  8017     10E1  00A0               	movwf	??___flge
  8018     10E2  3000               	movlw	0
  8019     10E3  0577               	andwf	___flge@ff2+1,w
  8020     10E4  00A1               	movwf	??___flge+1
  8021     10E5  3080               	movlw	128
  8022     10E6  0578               	andwf	___flge@ff2+2,w
  8023     10E7  00A2               	movwf	??___flge+2
  8024     10E8  307F               	movlw	127
  8025     10E9  0579               	andwf	___flge@ff2+3,w
  8026     10EA  00A3               	movwf	??___flge+3
  8027     10EB  0823               	movf	??___flge+3,w
  8028     10EC  0422               	iorwf	??___flge+2,w
  8029     10ED  0421               	iorwf	??___flge+1,w
  8030     10EE  0420               	iorwf	??___flge,w
  8031     10EF  1D03               	skipz
  8032     10F0  28F2               	goto	u4811
  8033     10F1  28F3               	goto	u4810
  8034     10F2                     u4811:
  8035     10F2  28FB               	goto	l3169
  8036     10F3                     u4810:
  8037     10F3                     l3167:
  8038     10F3  3000               	movlw	0
  8039     10F4  00F9               	movwf	___flge@ff2+3
  8040     10F5  3000               	movlw	0
  8041     10F6  00F8               	movwf	___flge@ff2+2
  8042     10F7  3000               	movlw	0
  8043     10F8  00F7               	movwf	___flge@ff2+1
  8044     10F9  3000               	movlw	0
  8045     10FA  00F6               	movwf	___flge@ff2
  8046     10FB                     l3169:
  8047     10FB  1FF5               	btfss	___flge@ff1+3,7
  8048     10FC  28FE               	goto	u4821
  8049     10FD  28FF               	goto	u4820
  8050     10FE                     u4821:
  8051     10FE  2923               	goto	l3173
  8052     10FF                     u4820:
  8053     10FF                     l3171:
  8054     10FF  3000               	movlw	0
  8055     1100  00A0               	movwf	??___flge
  8056     1101  3000               	movlw	0
  8057     1102  00A1               	movwf	??___flge+1
  8058     1103  3000               	movlw	0
  8059     1104  00A2               	movwf	??___flge+2
  8060     1105  3080               	movlw	128
  8061     1106  00A3               	movwf	??___flge+3
  8062     1107  0872               	movf	___flge@ff1,w
  8063     1108  02A0               	subwf	??___flge,f
  8064     1109  0873               	movf	___flge@ff1+1,w
  8065     110A  1C03               	skipc
  8066     110B  0F73               	incfsz	___flge@ff1+1,w
  8067     110C  290E               	goto	u4831
  8068     110D  290F               	goto	u4832
  8069     110E                     u4831:
  8070     110E  02A1               	subwf	??___flge+1,f
  8071     110F                     u4832:
  8072     110F  0874               	movf	___flge@ff1+2,w
  8073     1110  1C03               	skipc
  8074     1111  0F74               	incfsz	___flge@ff1+2,w
  8075     1112  2914               	goto	u4833
  8076     1113  2915               	goto	u4834
  8077     1114                     u4833:
  8078     1114  02A2               	subwf	??___flge+2,f
  8079     1115                     u4834:
  8080     1115  0875               	movf	___flge@ff1+3,w
  8081     1116  1C03               	skipc
  8082     1117  0F75               	incfsz	___flge@ff1+3,w
  8083     1118  291A               	goto	u4835
  8084     1119  291B               	goto	u4836
  8085     111A                     u4835:
  8086     111A  02A3               	subwf	??___flge+3,f
  8087     111B                     u4836:
  8088     111B  0823               	movf	??___flge+3,w
  8089     111C  00F5               	movwf	___flge@ff1+3
  8090     111D  0822               	movf	??___flge+2,w
  8091     111E  00F4               	movwf	___flge@ff1+2
  8092     111F  0821               	movf	??___flge+1,w
  8093     1120  00F3               	movwf	___flge@ff1+1
  8094     1121  0820               	movf	??___flge,w
  8095     1122  00F2               	movwf	___flge@ff1
  8096     1123                     l3173:
  8097     1123  1FF9               	btfss	___flge@ff2+3,7
  8098     1124  2926               	goto	u4841
  8099     1125  2927               	goto	u4840
  8100     1126                     u4841:
  8101     1126  294B               	goto	l630
  8102     1127                     u4840:
  8103     1127                     l3175:
  8104     1127  3000               	movlw	0
  8105     1128  00A0               	movwf	??___flge
  8106     1129  3000               	movlw	0
  8107     112A  00A1               	movwf	??___flge+1
  8108     112B  3000               	movlw	0
  8109     112C  00A2               	movwf	??___flge+2
  8110     112D  3080               	movlw	128
  8111     112E  00A3               	movwf	??___flge+3
  8112     112F  0876               	movf	___flge@ff2,w
  8113     1130  02A0               	subwf	??___flge,f
  8114     1131  0877               	movf	___flge@ff2+1,w
  8115     1132  1C03               	skipc
  8116     1133  0F77               	incfsz	___flge@ff2+1,w
  8117     1134  2936               	goto	u4851
  8118     1135  2937               	goto	u4852
  8119     1136                     u4851:
  8120     1136  02A1               	subwf	??___flge+1,f
  8121     1137                     u4852:
  8122     1137  0878               	movf	___flge@ff2+2,w
  8123     1138  1C03               	skipc
  8124     1139  0F78               	incfsz	___flge@ff2+2,w
  8125     113A  293C               	goto	u4853
  8126     113B  293D               	goto	u4854
  8127     113C                     u4853:
  8128     113C  02A2               	subwf	??___flge+2,f
  8129     113D                     u4854:
  8130     113D  0879               	movf	___flge@ff2+3,w
  8131     113E  1C03               	skipc
  8132     113F  0F79               	incfsz	___flge@ff2+3,w
  8133     1140  2942               	goto	u4855
  8134     1141  2943               	goto	u4856
  8135     1142                     u4855:
  8136     1142  02A3               	subwf	??___flge+3,f
  8137     1143                     u4856:
  8138     1143  0823               	movf	??___flge+3,w
  8139     1144  00F9               	movwf	___flge@ff2+3
  8140     1145  0822               	movf	??___flge+2,w
  8141     1146  00F8               	movwf	___flge@ff2+2
  8142     1147  0821               	movf	??___flge+1,w
  8143     1148  00F7               	movwf	___flge@ff2+1
  8144     1149  0820               	movf	??___flge,w
  8145     114A  00F6               	movwf	___flge@ff2
  8146     114B                     l630:
  8147     114B  3080               	movlw	128
  8148     114C  06F5               	xorwf	___flge@ff1+3,f
  8149     114D  3080               	movlw	128
  8150     114E  06F9               	xorwf	___flge@ff2+3,f
  8151     114F  0879               	movf	___flge@ff2+3,w
  8152     1150  0275               	subwf	___flge@ff1+3,w
  8153     1151  1D03               	skipz
  8154     1152  295D               	goto	u4865
  8155     1153  0878               	movf	___flge@ff2+2,w
  8156     1154  0274               	subwf	___flge@ff1+2,w
  8157     1155  1D03               	skipz
  8158     1156  295D               	goto	u4865
  8159     1157  0877               	movf	___flge@ff2+1,w
  8160     1158  0273               	subwf	___flge@ff1+1,w
  8161     1159  1D03               	skipz
  8162     115A  295D               	goto	u4865
  8163     115B  0876               	movf	___flge@ff2,w
  8164     115C  0272               	subwf	___flge@ff1,w
  8165     115D                     u4865:
  8166     115D  1803               	skipnc
  8167     115E  2960               	goto	u4861
  8168     115F  2961               	goto	u4860
  8169     1160                     u4861:
  8170     1160  2963               	goto	l3179
  8171     1161                     u4860:
  8172     1161                     l3177:
  8173     1161  1003               	clrc
  8174     1162  2964               	goto	l631
  8175     1163                     l3179:
  8176     1163  1403               	setc
  8177     1164                     l631:
  8178     1164  0008               	return
  8179     1165                     __end_of___flge:
  8180                           
  8181                           	psect	text22
  8182     1B93                     __ptext22:	
  8183 ;; *************** function ___fleq *****************
  8184 ;; Defined at:
  8185 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  ff1             4    2[COMMON] unsigned char 
  8188 ;;  ff2             4    6[COMMON] unsigned char 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;		None               void
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8200 ;;      Params:         8       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0
  8202 ;;      Temps:          0       4       0       0       0
  8203 ;;      Totals:         8       4       0       0       0
  8204 ;;Total ram usage:       12 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 2
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_sprintf
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214     1B93                     ___fleq:	
  8215                           ;psect for function ___fleq
  8216                           
  8217     1B93                     l3151:	
  8218                           ;incstack = 0
  8219                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8220                           
  8221     1B93  3000               	movlw	0
  8222     1B94  0572               	andwf	___fleq@ff1,w
  8223     1B95  1283               	bcf	3,5	;RP0=0, select bank0
  8224     1B96  1303               	bcf	3,6	;RP1=0, select bank0
  8225     1B97  00A0               	movwf	??___fleq
  8226     1B98  3000               	movlw	0
  8227     1B99  0573               	andwf	___fleq@ff1+1,w
  8228     1B9A  00A1               	movwf	??___fleq+1
  8229     1B9B  3080               	movlw	128
  8230     1B9C  0574               	andwf	___fleq@ff1+2,w
  8231     1B9D  00A2               	movwf	??___fleq+2
  8232     1B9E  307F               	movlw	127
  8233     1B9F  0575               	andwf	___fleq@ff1+3,w
  8234     1BA0  00A3               	movwf	??___fleq+3
  8235     1BA1  0823               	movf	??___fleq+3,w
  8236     1BA2  0422               	iorwf	??___fleq+2,w
  8237     1BA3  0421               	iorwf	??___fleq+1,w
  8238     1BA4  0420               	iorwf	??___fleq,w
  8239     1BA5  1D03               	skipz
  8240     1BA6  2BA8               	goto	u4771
  8241     1BA7  2BA9               	goto	u4770
  8242     1BA8                     u4771:
  8243     1BA8  2BB1               	goto	l622
  8244     1BA9                     u4770:
  8245     1BA9                     l3153:
  8246     1BA9  3000               	movlw	0
  8247     1BAA  00F5               	movwf	___fleq@ff1+3
  8248     1BAB  3000               	movlw	0
  8249     1BAC  00F4               	movwf	___fleq@ff1+2
  8250     1BAD  3000               	movlw	0
  8251     1BAE  00F3               	movwf	___fleq@ff1+1
  8252     1BAF  3000               	movlw	0
  8253     1BB0  00F2               	movwf	___fleq@ff1
  8254     1BB1                     l622:
  8255     1BB1  3000               	movlw	0
  8256     1BB2  0576               	andwf	___fleq@ff2,w
  8257     1BB3  00A0               	movwf	??___fleq
  8258     1BB4  3000               	movlw	0
  8259     1BB5  0577               	andwf	___fleq@ff2+1,w
  8260     1BB6  00A1               	movwf	??___fleq+1
  8261     1BB7  3080               	movlw	128
  8262     1BB8  0578               	andwf	___fleq@ff2+2,w
  8263     1BB9  00A2               	movwf	??___fleq+2
  8264     1BBA  307F               	movlw	127
  8265     1BBB  0579               	andwf	___fleq@ff2+3,w
  8266     1BBC  00A3               	movwf	??___fleq+3
  8267     1BBD  0823               	movf	??___fleq+3,w
  8268     1BBE  0422               	iorwf	??___fleq+2,w
  8269     1BBF  0421               	iorwf	??___fleq+1,w
  8270     1BC0  0420               	iorwf	??___fleq,w
  8271     1BC1  1D03               	skipz
  8272     1BC2  2BC4               	goto	u4781
  8273     1BC3  2BC5               	goto	u4780
  8274     1BC4                     u4781:
  8275     1BC4  2BCD               	goto	l623
  8276     1BC5                     u4780:
  8277     1BC5                     l3155:
  8278     1BC5  3000               	movlw	0
  8279     1BC6  00F9               	movwf	___fleq@ff2+3
  8280     1BC7  3000               	movlw	0
  8281     1BC8  00F8               	movwf	___fleq@ff2+2
  8282     1BC9  3000               	movlw	0
  8283     1BCA  00F7               	movwf	___fleq@ff2+1
  8284     1BCB  3000               	movlw	0
  8285     1BCC  00F6               	movwf	___fleq@ff2
  8286     1BCD                     l623:
  8287     1BCD  0879               	movf	___fleq@ff2+3,w
  8288     1BCE  0675               	xorwf	___fleq@ff1+3,w
  8289     1BCF  1D03               	skipz
  8290     1BD0  2BDB               	goto	u4795
  8291     1BD1  0878               	movf	___fleq@ff2+2,w
  8292     1BD2  0674               	xorwf	___fleq@ff1+2,w
  8293     1BD3  1D03               	skipz
  8294     1BD4  2BDB               	goto	u4795
  8295     1BD5  0877               	movf	___fleq@ff2+1,w
  8296     1BD6  0673               	xorwf	___fleq@ff1+1,w
  8297     1BD7  1D03               	skipz
  8298     1BD8  2BDB               	goto	u4795
  8299     1BD9  0876               	movf	___fleq@ff2,w
  8300     1BDA  0672               	xorwf	___fleq@ff1,w
  8301     1BDB                     u4795:
  8302     1BDB  1903               	skipnz
  8303     1BDC  2BDE               	goto	u4791
  8304     1BDD  2BDF               	goto	u4790
  8305     1BDE                     u4791:
  8306     1BDE  2BE1               	goto	l3159
  8307     1BDF                     u4790:
  8308     1BDF                     l3157:
  8309     1BDF  1003               	clrc
  8310     1BE0  2BE2               	goto	l624
  8311     1BE1                     l3159:
  8312     1BE1  1403               	setc
  8313     1BE2                     l624:
  8314     1BE2  0008               	return
  8315     1BE3                     __end_of___fleq:
  8316                           
  8317                           	psect	text23
  8318     19BA                     __ptext23:	
  8319 ;; *************** function _limpiar *****************
  8320 ;; Defined at:
  8321 ;;		line 60 in file "lcd.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0, pclath, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8335 ;;      Params:         0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 4
  8342 ;; This function calls:
  8343 ;;		_CMDs
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349     19BA                     _limpiar:	
  8350                           ;psect for function _limpiar
  8351                           
  8352     19BA                     l3933:	
  8353                           ;incstack = 0
  8354                           ; Regs used in _limpiar: [wreg+status,2+status,0+pclath+cstack]
  8355                           
  8356                           
  8357                           ;lcd.c: 61:     CMDs(0);
  8358     19BA  3000               	movlw	0
  8359     19BB  160A  158A  2241  160A  158A  	fcall	_CMDs
  8360                           
  8361                           ;lcd.c: 62:     CMDs(1);
  8362     19C0  3001               	movlw	1
  8363     19C1  160A  158A  2241  160A  158A  	fcall	_CMDs
  8364     19C6                     l187:
  8365     19C6  0008               	return
  8366     19C7                     __end_of_limpiar:
  8367                           
  8368                           	psect	text24
  8369     1A61                     __ptext24:	
  8370 ;; *************** function _cursor *****************
  8371 ;; Defined at:
  8372 ;;		line 65 in file "lcd.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  a               1    wreg     unsigned char 
  8375 ;;  b               1    6[COMMON] unsigned char 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  a               1    7[COMMON] unsigned char 
  8378 ;;  x               1    8[COMMON] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1    wreg      void 
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0, pclath, cstack
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8388 ;;      Params:         1       0       0       0       0
  8389 ;;      Locals:         2       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0
  8391 ;;      Totals:         3       0       0       0       0
  8392 ;;Total ram usage:        3 bytes
  8393 ;; Hardware stack levels used: 1
  8394 ;; Hardware stack levels required when called: 4
  8395 ;; This function calls:
  8396 ;;		_CMDs
  8397 ;; This function is called by:
  8398 ;;		_main
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402     1A61                     _cursor:	
  8403                           ;psect for function _cursor
  8404                           
  8405                           
  8406                           ;incstack = 0
  8407                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
  8408                           ;cursor@a stored from wreg
  8409     1A61  00F7               	movwf	cursor@a
  8410     1A62                     l3935:
  8411                           
  8412                           ;lcd.c: 66:     uint8_t x;;lcd.c: 67:     if (a == 1){
  8413     1A62  0377               	decf	cursor@a,w
  8414     1A63  1D03               	btfss	3,2
  8415     1A64  2A66               	goto	u5991
  8416     1A65  2A67               	goto	u5990
  8417     1A66                     u5991:
  8418     1A66  2A71               	goto	l3941
  8419     1A67                     u5990:
  8420     1A67                     l3937:
  8421                           
  8422                           ;lcd.c: 68:        x = 0x80 + b;
  8423     1A67  0876               	movf	cursor@b,w
  8424     1A68  3E80               	addlw	128
  8425     1A69  00F8               	movwf	cursor@x
  8426     1A6A                     l3939:
  8427                           
  8428                           ;lcd.c: 69:        CMDs(x);
  8429     1A6A  0878               	movf	cursor@x,w
  8430     1A6B  160A  158A  2241  160A  158A  	fcall	_CMDs
  8431                           
  8432                           ;lcd.c: 70:     }
  8433     1A70  2A80               	goto	l193
  8434     1A71                     l3941:
  8435     1A71  3002               	movlw	2
  8436     1A72  0677               	xorwf	cursor@a,w
  8437     1A73  1D03               	btfss	3,2
  8438     1A74  2A76               	goto	u6001
  8439     1A75  2A77               	goto	u6000
  8440     1A76                     u6001:
  8441     1A76  2A80               	goto	l193
  8442     1A77                     u6000:
  8443     1A77                     l3943:
  8444                           
  8445                           ;lcd.c: 72:         x = 0xC0 + b;
  8446     1A77  0876               	movf	cursor@b,w
  8447     1A78  3EC0               	addlw	192
  8448     1A79  00F8               	movwf	cursor@x
  8449     1A7A                     l3945:
  8450                           
  8451                           ;lcd.c: 73:         CMDs(x);
  8452     1A7A  0878               	movf	cursor@x,w
  8453     1A7B  160A  158A  2241  160A  158A  	fcall	_CMDs
  8454     1A80                     l193:
  8455     1A80  0008               	return
  8456     1A81                     __end_of_cursor:
  8457                           
  8458                           	psect	text25
  8459     19C7                     __ptext25:	
  8460 ;; *************** function _config_tx *****************
  8461 ;; Defined at:
  8462 ;;		line 16 in file "uart.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8476 ;;      Params:         0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 2
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_main
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490     19C7                     _config_tx:	
  8491                           ;psect for function _config_tx
  8492                           
  8493     19C7                     l3385:	
  8494                           ;incstack = 0
  8495                           ; Regs used in _config_tx: [status,2]
  8496                           
  8497                           
  8498                           ;uart.c: 17:     TXSTAbits.CSRC = 0;
  8499     19C7  1683               	bsf	3,5	;RP0=1, select bank1
  8500     19C8  1303               	bcf	3,6	;RP1=0, select bank1
  8501     19C9  1398               	bcf	24,7	;volatile
  8502                           
  8503                           ;uart.c: 18:     TXSTAbits.TX9 = 0;
  8504     19CA  1318               	bcf	24,6	;volatile
  8505                           
  8506                           ;uart.c: 19:     TXSTAbits.TXEN = 1;
  8507     19CB  1698               	bsf	24,5	;volatile
  8508                           
  8509                           ;uart.c: 20:     TXSTAbits.SYNC = 0;
  8510     19CC  1218               	bcf	24,4	;volatile
  8511                           
  8512                           ;uart.c: 21:     TXSTAbits.BRGH = 1;
  8513     19CD  1518               	bsf	24,2	;volatile
  8514                           
  8515                           ;uart.c: 22:     TXSTAbits.TRMT = 0;
  8516     19CE  1098               	bcf	24,1	;volatile
  8517                           
  8518                           ;uart.c: 23:     TXSTAbits.TX9D = 0;
  8519     19CF  1018               	bcf	24,0	;volatile
  8520                           
  8521                           ;uart.c: 24:     BAUDCTLbits.BRG16 = 0;
  8522     19D0  1683               	bsf	3,5	;RP0=1, select bank3
  8523     19D1  1703               	bsf	3,6	;RP1=1, select bank3
  8524     19D2  1187               	bcf	7,3	;volatile
  8525     19D3                     l3387:
  8526                           
  8527                           ;uart.c: 25:     TXREG=0;
  8528     19D3  1283               	bcf	3,5	;RP0=0, select bank0
  8529     19D4  1303               	bcf	3,6	;RP1=0, select bank0
  8530     19D5  0199               	clrf	25	;volatile
  8531     19D6                     l227:
  8532     19D6  0008               	return
  8533     19D7                     __end_of_config_tx:
  8534                           
  8535                           	psect	text26
  8536     1995                     __ptext26:	
  8537 ;; *************** function _config_rx *****************
  8538 ;; Defined at:
  8539 ;;		line 28 in file "uart.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;		None
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		status,2
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8553 ;;      Params:         0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0
  8556 ;;      Totals:         0       0       0       0       0
  8557 ;;Total ram usage:        0 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 2
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_main
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567     1995                     _config_rx:	
  8568                           ;psect for function _config_rx
  8569                           
  8570     1995                     l3389:	
  8571                           ;incstack = 0
  8572                           ; Regs used in _config_rx: [status,2]
  8573                           
  8574                           
  8575                           ;uart.c: 29:     RCSTAbits.SPEN = 1;
  8576     1995  1283               	bcf	3,5	;RP0=0, select bank0
  8577     1996  1303               	bcf	3,6	;RP1=0, select bank0
  8578     1997  1798               	bsf	24,7	;volatile
  8579                           
  8580                           ;uart.c: 30:     RCSTAbits.RX9 = 0;
  8581     1998  1318               	bcf	24,6	;volatile
  8582                           
  8583                           ;uart.c: 31:     RCSTAbits.SREN = 0;
  8584     1999  1298               	bcf	24,5	;volatile
  8585                           
  8586                           ;uart.c: 32:     RCSTAbits.CREN = 1;
  8587     199A  1618               	bsf	24,4	;volatile
  8588     199B                     l3391:
  8589                           
  8590                           ;uart.c: 33:     RCREG = 0;
  8591     199B  019A               	clrf	26	;volatile
  8592     199C                     l230:
  8593     199C  0008               	return
  8594     199D                     __end_of_config_rx:
  8595                           
  8596                           	psect	text27
  8597     1CE2                     __ptext27:	
  8598 ;; *************** function _configLCD *****************
  8599 ;; Defined at:
  8600 ;;		line 77 in file "lcd.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		wreg, status,2, status,0, pclath, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8614 ;;      Params:         0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0
  8616 ;;      Temps:          2       0       0       0       0
  8617 ;;      Totals:         2       0       0       0       0
  8618 ;;Total ram usage:        2 bytes
  8619 ;; Hardware stack levels used: 1
  8620 ;; Hardware stack levels required when called: 4
  8621 ;; This function calls:
  8622 ;;		_CMDs
  8623 ;; This function is called by:
  8624 ;;		_main
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628     1CE2                     _configLCD:	
  8629                           ;psect for function _configLCD
  8630                           
  8631     1CE2                     l3909:	
  8632                           ;incstack = 0
  8633                           ; Regs used in _configLCD: [wreg+status,2+status,0+pclath+cstack]
  8634                           
  8635                           
  8636                           ;lcd.c: 78:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8637     1CE2  301A               	movlw	26
  8638     1CE3  00F7               	movwf	??_configLCD+1
  8639     1CE4  30F8               	movlw	248
  8640     1CE5  00F6               	movwf	??_configLCD
  8641     1CE6                     u6467:
  8642     1CE6  0BF6               	decfsz	??_configLCD,f
  8643     1CE7  2CE6               	goto	u6467
  8644     1CE8  0BF7               	decfsz	??_configLCD+1,f
  8645     1CE9  2CE6               	goto	u6467
  8646     1CEA  0000               	nop
  8647     1CEB                     l3911:
  8648                           
  8649                           ;lcd.c: 79:     CMDs (0x30);
  8650     1CEB  3030               	movlw	48
  8651     1CEC  160A  158A  2241  160A  158A  	fcall	_CMDs
  8652     1CF1                     l3913:
  8653                           
  8654                           ;lcd.c: 80:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8655     1CF1  3007               	movlw	7
  8656     1CF2  00F7               	movwf	??_configLCD+1
  8657     1CF3  307D               	movlw	125
  8658     1CF4  00F6               	movwf	??_configLCD
  8659     1CF5                     u6477:
  8660     1CF5  0BF6               	decfsz	??_configLCD,f
  8661     1CF6  2CF5               	goto	u6477
  8662     1CF7  0BF7               	decfsz	??_configLCD+1,f
  8663     1CF8  2CF5               	goto	u6477
  8664                           
  8665                           ;lcd.c: 81:     CMDs (0x30);
  8666     1CF9  3030               	movlw	48
  8667     1CFA  160A  158A  2241  160A  158A  	fcall	_CMDs
  8668     1CFF                     l3915:
  8669                           
  8670                           ;lcd.c: 82:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8671     1CFF  3021               	movlw	33
  8672     1D00  00F6               	movwf	??_configLCD
  8673     1D01                     u6487:
  8674     1D01  0BF6               	decfsz	??_configLCD,f
  8675     1D02  2D01               	goto	u6487
  8676     1D03                     l3917:
  8677                           
  8678                           ;lcd.c: 83:     CMDs (0x30);
  8679     1D03  3030               	movlw	48
  8680     1D04  160A  158A  2241  160A  158A  	fcall	_CMDs
  8681                           
  8682                           ;lcd.c: 84:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8683     1D09  3021               	movlw	33
  8684     1D0A  00F6               	movwf	??_configLCD
  8685     1D0B                     u6497:
  8686     1D0B  0BF6               	decfsz	??_configLCD,f
  8687     1D0C  2D0B               	goto	u6497
  8688     1D0D                     l3919:
  8689                           
  8690                           ;lcd.c: 85:     CMDs (0x38);
  8691     1D0D  3038               	movlw	56
  8692     1D0E  160A  158A  2241  160A  158A  	fcall	_CMDs
  8693     1D13                     l3921:
  8694                           
  8695                           ;lcd.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8696     1D13  3013               	movlw	19
  8697     1D14  00F6               	movwf	??_configLCD
  8698     1D15                     u6507:
  8699     1D15  0BF6               	decfsz	??_configLCD,f
  8700     1D16  2D15               	goto	u6507
  8701     1D17  2D18               	nop2
  8702                           
  8703                           ;lcd.c: 87:     CMDs (0x08);
  8704     1D18  3008               	movlw	8
  8705     1D19  160A  158A  2241  160A  158A  	fcall	_CMDs
  8706     1D1E                     l3923:
  8707                           
  8708                           ;lcd.c: 88:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8709     1D1E  3013               	movlw	19
  8710     1D1F  00F6               	movwf	??_configLCD
  8711     1D20                     u6517:
  8712     1D20  0BF6               	decfsz	??_configLCD,f
  8713     1D21  2D20               	goto	u6517
  8714     1D22  2D23               	nop2
  8715     1D23                     l3925:
  8716                           
  8717                           ;lcd.c: 89:     CMDs (0x01);
  8718     1D23  3001               	movlw	1
  8719     1D24  160A  158A  2241  160A  158A  	fcall	_CMDs
  8720                           
  8721                           ;lcd.c: 90:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8722     1D29  3007               	movlw	7
  8723     1D2A  00F7               	movwf	??_configLCD+1
  8724     1D2B  307D               	movlw	125
  8725     1D2C  00F6               	movwf	??_configLCD
  8726     1D2D                     u6527:
  8727     1D2D  0BF6               	decfsz	??_configLCD,f
  8728     1D2E  2D2D               	goto	u6527
  8729     1D2F  0BF7               	decfsz	??_configLCD+1,f
  8730     1D30  2D2D               	goto	u6527
  8731     1D31                     l3927:
  8732                           
  8733                           ;lcd.c: 91:     CMDs (0x06);
  8734     1D31  3006               	movlw	6
  8735     1D32  160A  158A  2241  160A  158A  	fcall	_CMDs
  8736     1D37                     l3929:
  8737                           
  8738                           ;lcd.c: 92:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8739     1D37  3013               	movlw	19
  8740     1D38  00F6               	movwf	??_configLCD
  8741     1D39                     u6537:
  8742     1D39  0BF6               	decfsz	??_configLCD,f
  8743     1D3A  2D39               	goto	u6537
  8744     1D3B  2D3C               	nop2
  8745                           
  8746                           ;lcd.c: 93:     CMDs (0x0C);
  8747     1D3C  300C               	movlw	12
  8748     1D3D  160A  158A  2241  160A  158A  	fcall	_CMDs
  8749     1D42                     l3931:
  8750                           
  8751                           ;lcd.c: 94:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8752     1D42  3013               	movlw	19
  8753     1D43  00F6               	movwf	??_configLCD
  8754     1D44                     u6547:
  8755     1D44  0BF6               	decfsz	??_configLCD,f
  8756     1D45  2D44               	goto	u6547
  8757     1D46  2D47               	nop2
  8758     1D47                     l196:
  8759     1D47  0008               	return
  8760     1D48                     __end_of_configLCD:
  8761                           
  8762                           	psect	text28
  8763     1A41                     __ptext28:	
  8764 ;; *************** function _CMDs *****************
  8765 ;; Defined at:
  8766 ;;		line 50 in file "lcd.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  a               1    wreg     unsigned char 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  a               1    5[COMMON] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8780 ;;      Params:         0       0       0       0       0
  8781 ;;      Locals:         1       0       0       0       0
  8782 ;;      Temps:          2       0       0       0       0
  8783 ;;      Totals:         3       0       0       0       0
  8784 ;;Total ram usage:        3 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 3
  8787 ;; This function calls:
  8788 ;;		_pin
  8789 ;; This function is called by:
  8790 ;;		_limpiar
  8791 ;;		_cursor
  8792 ;;		_configLCD
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796     1A41                     _CMDs:	
  8797                           ;psect for function _CMDs
  8798                           
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  8802                           ;CMDs@a stored from wreg
  8803     1A41  00F5               	movwf	CMDs@a
  8804     1A42                     l3843:
  8805                           
  8806                           ;lcd.c: 51:     RE0 = 0;
  8807     1A42  1283               	bcf	3,5	;RP0=0, select bank0
  8808     1A43  1303               	bcf	3,6	;RP1=0, select bank0
  8809     1A44  1009               	bcf	9,0	;volatile
  8810     1A45                     l3845:
  8811                           
  8812                           ;lcd.c: 52:     pin(a);
  8813     1A45  0875               	movf	CMDs@a,w
  8814     1A46  120A  118A  27BE  160A  158A  	fcall	_pin
  8815     1A4B                     l3847:
  8816                           
  8817                           ;lcd.c: 53:     RE1 = 1;
  8818     1A4B  1283               	bcf	3,5	;RP0=0, select bank0
  8819     1A4C  1303               	bcf	3,6	;RP1=0, select bank0
  8820     1A4D  1489               	bsf	9,1	;volatile
  8821     1A4E                     l3849:
  8822                           
  8823                           ;lcd.c: 54:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8824     1A4E  2A4F               	nop2	;2 cycle nop
  8825     1A4F  2A50               	nop2	;2 cycle nop
  8826     1A50  0000               	nop
  8827     1A51                     l3851:
  8828                           
  8829                           ;lcd.c: 55:     RE1 = 0;
  8830     1A51  1283               	bcf	3,5	;RP0=0, select bank0
  8831     1A52  1303               	bcf	3,6	;RP1=0, select bank0
  8832     1A53  1089               	bcf	9,1	;volatile
  8833     1A54                     l3853:
  8834                           
  8835                           ;lcd.c: 56:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8836     1A54  2A55               	nop2	;2 cycle nop
  8837     1A55  2A56               	nop2	;2 cycle nop
  8838     1A56  0000               	nop
  8839     1A57                     l3855:
  8840                           
  8841                           ;lcd.c: 57:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8842     1A57  3003               	movlw	3
  8843     1A58  00F4               	movwf	??_CMDs+1
  8844     1A59  3097               	movlw	151
  8845     1A5A  00F3               	movwf	??_CMDs
  8846     1A5B                     u6557:
  8847     1A5B  0BF3               	decfsz	??_CMDs,f
  8848     1A5C  2A5B               	goto	u6557
  8849     1A5D  0BF4               	decfsz	??_CMDs+1,f
  8850     1A5E  2A5B               	goto	u6557
  8851     1A5F  2A60               	nop2
  8852     1A60                     l184:
  8853     1A60  0008               	return
  8854     1A61                     __end_of_CMDs:
  8855                           
  8856                           	psect	text29
  8857     121F                     __ptext29:	
  8858 ;; *************** function _configADC *****************
  8859 ;; Defined at:
  8860 ;;		line 14 in file "adc.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  ch              1    wreg     unsigned char 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;  ch              1    4[COMMON] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      unsigned char 
  8867 ;; Registers used:
  8868 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8874 ;;      Params:         0       0       0       0       0
  8875 ;;      Locals:         1       0       0       0       0
  8876 ;;      Temps:          2       0       0       0       0
  8877 ;;      Totals:         3       0       0       0       0
  8878 ;;Total ram usage:        3 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 2
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_main
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888     121F                     _configADC:	
  8889                           ;psect for function _configADC
  8890                           
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  8894                           ;configADC@ch stored from wreg
  8895     121F  00F4               	movwf	configADC@ch
  8896     1220                     l3297:
  8897                           
  8898                           ;adc.c: 15:     ADCON0bits.ADCS = 1;
  8899     1220  1283               	bcf	3,5	;RP0=0, select bank0
  8900     1221  1303               	bcf	3,6	;RP1=0, select bank0
  8901     1222  081F               	movf	31,w	;volatile
  8902     1223  393F               	andlw	-193
  8903     1224  3840               	iorlw	64
  8904     1225  009F               	movwf	31	;volatile
  8905     1226                     l3299:
  8906                           
  8907                           ;adc.c: 16:     ADCON1 = 0;
  8908     1226  1683               	bsf	3,5	;RP0=1, select bank1
  8909     1227  1303               	bcf	3,6	;RP1=0, select bank1
  8910     1228  019F               	clrf	31	;volatile
  8911                           
  8912                           ;adc.c: 18:     switch (ch) {
  8913     1229  2AC4               	goto	l3335
  8914     122A                     l22:	
  8915                           ;adc.c: 19:         case 0:
  8916                           
  8917                           
  8918                           ;adc.c: 20:             TRISAbits.TRISA0 = 1;
  8919     122A  1405               	bsf	5,0	;volatile
  8920                           
  8921                           ;adc.c: 21:             ANSELbits.ANS0 = 1;
  8922     122B  1683               	bsf	3,5	;RP0=1, select bank3
  8923     122C  1703               	bsf	3,6	;RP1=1, select bank3
  8924     122D  1408               	bsf	8,0	;volatile
  8925     122E                     l3301:
  8926                           
  8927                           ;adc.c: 22:             ADCON0bits.CHS = 0;
  8928     122E  30C3               	movlw	-61
  8929     122F  1283               	bcf	3,5	;RP0=0, select bank0
  8930     1230  1303               	bcf	3,6	;RP1=0, select bank0
  8931     1231  059F               	andwf	31,f	;volatile
  8932                           
  8933                           ;adc.c: 23:             break;
  8934     1232  2AF8               	goto	l23
  8935     1233                     l24:	
  8936                           ;adc.c: 24:         case 1:
  8937                           
  8938                           
  8939                           ;adc.c: 25:             TRISAbits.TRISA1=1;
  8940     1233  1485               	bsf	5,1	;volatile
  8941                           
  8942                           ;adc.c: 26:             ANSELbits.ANS1=1;
  8943     1234  1683               	bsf	3,5	;RP0=1, select bank3
  8944     1235  1703               	bsf	3,6	;RP1=1, select bank3
  8945     1236  1488               	bsf	8,1	;volatile
  8946     1237                     l3303:
  8947                           
  8948                           ;adc.c: 27:             ADCON0bits.CHS=1;
  8949     1237  1283               	bcf	3,5	;RP0=0, select bank0
  8950     1238  1303               	bcf	3,6	;RP1=0, select bank0
  8951     1239  081F               	movf	31,w	;volatile
  8952     123A  39C3               	andlw	-61
  8953     123B  3804               	iorlw	4
  8954     123C  009F               	movwf	31	;volatile
  8955                           
  8956                           ;adc.c: 28:             break;
  8957     123D  2AF8               	goto	l23
  8958     123E                     l25:	
  8959                           ;adc.c: 29:         case 2:
  8960                           
  8961                           
  8962                           ;adc.c: 30:             TRISAbits.TRISA2=1;
  8963     123E  1505               	bsf	5,2	;volatile
  8964                           
  8965                           ;adc.c: 31:             ANSELbits.ANS2=1;
  8966     123F  1683               	bsf	3,5	;RP0=1, select bank3
  8967     1240  1703               	bsf	3,6	;RP1=1, select bank3
  8968     1241  1508               	bsf	8,2	;volatile
  8969     1242                     l3305:
  8970                           
  8971                           ;adc.c: 32:             ADCON0bits.CHS=2;
  8972     1242  1283               	bcf	3,5	;RP0=0, select bank0
  8973     1243  1303               	bcf	3,6	;RP1=0, select bank0
  8974     1244  081F               	movf	31,w	;volatile
  8975     1245  39C3               	andlw	-61
  8976     1246  3808               	iorlw	8
  8977     1247  009F               	movwf	31	;volatile
  8978                           
  8979                           ;adc.c: 33:             break;
  8980     1248  2AF8               	goto	l23
  8981     1249                     l26:	
  8982                           ;adc.c: 34:         case 3:
  8983                           
  8984                           
  8985                           ;adc.c: 35:             TRISAbits.TRISA3=1;
  8986     1249  1585               	bsf	5,3	;volatile
  8987                           
  8988                           ;adc.c: 36:             ANSELbits.ANS3=1;
  8989     124A  1683               	bsf	3,5	;RP0=1, select bank3
  8990     124B  1703               	bsf	3,6	;RP1=1, select bank3
  8991     124C  1588               	bsf	8,3	;volatile
  8992     124D                     l3307:
  8993                           
  8994                           ;adc.c: 37:             ADCON0bits.CHS=3;
  8995     124D  1283               	bcf	3,5	;RP0=0, select bank0
  8996     124E  1303               	bcf	3,6	;RP1=0, select bank0
  8997     124F  081F               	movf	31,w	;volatile
  8998     1250  39C3               	andlw	-61
  8999     1251  380C               	iorlw	12
  9000     1252  009F               	movwf	31	;volatile
  9001                           
  9002                           ;adc.c: 38:             break;
  9003     1253  2AF8               	goto	l23
  9004     1254                     l27:	
  9005                           ;adc.c: 39:         case 4:
  9006                           
  9007                           
  9008                           ;adc.c: 40:             TRISAbits.TRISA5=1;
  9009     1254  1685               	bsf	5,5	;volatile
  9010                           
  9011                           ;adc.c: 41:             ANSELbits.ANS4=1;
  9012     1255  1683               	bsf	3,5	;RP0=1, select bank3
  9013     1256  1703               	bsf	3,6	;RP1=1, select bank3
  9014     1257  1608               	bsf	8,4	;volatile
  9015     1258                     l3309:
  9016                           
  9017                           ;adc.c: 42:             ADCON0bits.CHS=4;
  9018     1258  1283               	bcf	3,5	;RP0=0, select bank0
  9019     1259  1303               	bcf	3,6	;RP1=0, select bank0
  9020     125A  081F               	movf	31,w	;volatile
  9021     125B  39C3               	andlw	-61
  9022     125C  3810               	iorlw	16
  9023     125D  009F               	movwf	31	;volatile
  9024                           
  9025                           ;adc.c: 43:             break;
  9026     125E  2AF8               	goto	l23
  9027     125F                     l28:	
  9028                           ;adc.c: 44:         case 5:
  9029                           
  9030                           
  9031                           ;adc.c: 45:             TRISEbits.TRISE0=1;
  9032     125F  1409               	bsf	9,0	;volatile
  9033                           
  9034                           ;adc.c: 46:             ANSELbits.ANS5=1;
  9035     1260  1683               	bsf	3,5	;RP0=1, select bank3
  9036     1261  1703               	bsf	3,6	;RP1=1, select bank3
  9037     1262  1688               	bsf	8,5	;volatile
  9038     1263                     l3311:
  9039                           
  9040                           ;adc.c: 47:             ADCON0bits.CHS=5;
  9041     1263  1283               	bcf	3,5	;RP0=0, select bank0
  9042     1264  1303               	bcf	3,6	;RP1=0, select bank0
  9043     1265  081F               	movf	31,w	;volatile
  9044     1266  39C3               	andlw	-61
  9045     1267  3814               	iorlw	20
  9046     1268  009F               	movwf	31	;volatile
  9047                           
  9048                           ;adc.c: 48:             break;
  9049     1269  2AF8               	goto	l23
  9050     126A                     l29:	
  9051                           ;adc.c: 49:         case 6:
  9052                           
  9053                           
  9054                           ;adc.c: 50:             TRISEbits.TRISE1=1;
  9055     126A  1489               	bsf	9,1	;volatile
  9056                           
  9057                           ;adc.c: 51:             ANSELbits.ANS6=1;
  9058     126B  1683               	bsf	3,5	;RP0=1, select bank3
  9059     126C  1703               	bsf	3,6	;RP1=1, select bank3
  9060     126D  1708               	bsf	8,6	;volatile
  9061     126E                     l3313:
  9062                           
  9063                           ;adc.c: 52:             ADCON0bits.CHS=6;
  9064     126E  1283               	bcf	3,5	;RP0=0, select bank0
  9065     126F  1303               	bcf	3,6	;RP1=0, select bank0
  9066     1270  081F               	movf	31,w	;volatile
  9067     1271  39C3               	andlw	-61
  9068     1272  3818               	iorlw	24
  9069     1273  009F               	movwf	31	;volatile
  9070                           
  9071                           ;adc.c: 53:             break;
  9072     1274  2AF8               	goto	l23
  9073     1275                     l30:	
  9074                           ;adc.c: 54:         case 7:
  9075                           
  9076                           
  9077                           ;adc.c: 55:             TRISEbits.TRISE2=1;
  9078     1275  1509               	bsf	9,2	;volatile
  9079                           
  9080                           ;adc.c: 56:             ANSELbits.ANS7=1;
  9081     1276  1683               	bsf	3,5	;RP0=1, select bank3
  9082     1277  1703               	bsf	3,6	;RP1=1, select bank3
  9083     1278  1788               	bsf	8,7	;volatile
  9084     1279                     l3315:
  9085                           
  9086                           ;adc.c: 57:             ADCON0bits.CHS=7;
  9087     1279  1283               	bcf	3,5	;RP0=0, select bank0
  9088     127A  1303               	bcf	3,6	;RP1=0, select bank0
  9089     127B  081F               	movf	31,w	;volatile
  9090     127C  39C3               	andlw	-61
  9091     127D  381C               	iorlw	28
  9092     127E  009F               	movwf	31	;volatile
  9093                           
  9094                           ;adc.c: 58:             break;
  9095     127F  2AF8               	goto	l23
  9096     1280                     l31:	
  9097                           ;adc.c: 59:         case 8:
  9098                           
  9099                           
  9100                           ;adc.c: 60:             TRISBbits.TRISB2=1;
  9101     1280  1506               	bsf	6,2	;volatile
  9102                           
  9103                           ;adc.c: 61:             ANSELHbits.ANS8=1;
  9104     1281  1683               	bsf	3,5	;RP0=1, select bank3
  9105     1282  1703               	bsf	3,6	;RP1=1, select bank3
  9106     1283  1409               	bsf	9,0	;volatile
  9107     1284                     l3317:
  9108                           
  9109                           ;adc.c: 62:             ADCON0bits.CHS=8;
  9110     1284  1283               	bcf	3,5	;RP0=0, select bank0
  9111     1285  1303               	bcf	3,6	;RP1=0, select bank0
  9112     1286  081F               	movf	31,w	;volatile
  9113     1287  39C3               	andlw	-61
  9114     1288  3820               	iorlw	32
  9115     1289  009F               	movwf	31	;volatile
  9116                           
  9117                           ;adc.c: 63:             break;
  9118     128A  2AF8               	goto	l23
  9119     128B                     l32:	
  9120                           ;adc.c: 64:         case 9:
  9121                           
  9122                           
  9123                           ;adc.c: 65:             TRISBbits.TRISB3=1;
  9124     128B  1586               	bsf	6,3	;volatile
  9125                           
  9126                           ;adc.c: 66:             ANSELHbits.ANS9=1;
  9127     128C  1683               	bsf	3,5	;RP0=1, select bank3
  9128     128D  1703               	bsf	3,6	;RP1=1, select bank3
  9129     128E  1489               	bsf	9,1	;volatile
  9130     128F                     l3319:
  9131                           
  9132                           ;adc.c: 67:             ADCON0bits.CHS=9;
  9133     128F  1283               	bcf	3,5	;RP0=0, select bank0
  9134     1290  1303               	bcf	3,6	;RP1=0, select bank0
  9135     1291  081F               	movf	31,w	;volatile
  9136     1292  39C3               	andlw	-61
  9137     1293  3824               	iorlw	36
  9138     1294  009F               	movwf	31	;volatile
  9139                           
  9140                           ;adc.c: 68:             break;
  9141     1295  2AF8               	goto	l23
  9142     1296                     l33:	
  9143                           ;adc.c: 69:         case 10:
  9144                           
  9145                           
  9146                           ;adc.c: 70:             TRISBbits.TRISB1=1;
  9147     1296  1486               	bsf	6,1	;volatile
  9148                           
  9149                           ;adc.c: 71:             ANSELHbits.ANS10=1;
  9150     1297  1683               	bsf	3,5	;RP0=1, select bank3
  9151     1298  1703               	bsf	3,6	;RP1=1, select bank3
  9152     1299  1509               	bsf	9,2	;volatile
  9153     129A                     l3321:
  9154                           
  9155                           ;adc.c: 72:             ADCON0bits.CHS=10;
  9156     129A  1283               	bcf	3,5	;RP0=0, select bank0
  9157     129B  1303               	bcf	3,6	;RP1=0, select bank0
  9158     129C  081F               	movf	31,w	;volatile
  9159     129D  39C3               	andlw	-61
  9160     129E  3828               	iorlw	40
  9161     129F  009F               	movwf	31	;volatile
  9162                           
  9163                           ;adc.c: 73:             break;
  9164     12A0  2AF8               	goto	l23
  9165     12A1                     l34:	
  9166                           ;adc.c: 74:         case 11:
  9167                           
  9168                           
  9169                           ;adc.c: 75:             TRISBbits.TRISB4=1;
  9170     12A1  1606               	bsf	6,4	;volatile
  9171                           
  9172                           ;adc.c: 76:             ANSELHbits.ANS11=1;
  9173     12A2  1683               	bsf	3,5	;RP0=1, select bank3
  9174     12A3  1703               	bsf	3,6	;RP1=1, select bank3
  9175     12A4  1589               	bsf	9,3	;volatile
  9176     12A5                     l3323:
  9177                           
  9178                           ;adc.c: 77:             ADCON0bits.CHS=11;
  9179     12A5  1283               	bcf	3,5	;RP0=0, select bank0
  9180     12A6  1303               	bcf	3,6	;RP1=0, select bank0
  9181     12A7  081F               	movf	31,w	;volatile
  9182     12A8  39C3               	andlw	-61
  9183     12A9  382C               	iorlw	44
  9184     12AA  009F               	movwf	31	;volatile
  9185                           
  9186                           ;adc.c: 78:             break;
  9187     12AB  2AF8               	goto	l23
  9188     12AC                     l35:	
  9189                           ;adc.c: 79:         case 12:
  9190                           
  9191                           
  9192                           ;adc.c: 80:             TRISBbits.TRISB0=1;
  9193     12AC  1406               	bsf	6,0	;volatile
  9194                           
  9195                           ;adc.c: 81:             ANSELHbits.ANS12=1;
  9196     12AD  1683               	bsf	3,5	;RP0=1, select bank3
  9197     12AE  1703               	bsf	3,6	;RP1=1, select bank3
  9198     12AF  1609               	bsf	9,4	;volatile
  9199     12B0                     l3325:
  9200                           
  9201                           ;adc.c: 82:             ADCON0bits.CHS=12;
  9202     12B0  1283               	bcf	3,5	;RP0=0, select bank0
  9203     12B1  1303               	bcf	3,6	;RP1=0, select bank0
  9204     12B2  081F               	movf	31,w	;volatile
  9205     12B3  39C3               	andlw	-61
  9206     12B4  3830               	iorlw	48
  9207     12B5  009F               	movwf	31	;volatile
  9208                           
  9209                           ;adc.c: 83:             break;
  9210     12B6  2AF8               	goto	l23
  9211     12B7                     l36:	
  9212                           ;adc.c: 84:         case 13:
  9213                           
  9214                           
  9215                           ;adc.c: 85:             TRISBbits.TRISB5=1;
  9216     12B7  1686               	bsf	6,5	;volatile
  9217                           
  9218                           ;adc.c: 86:             ANSELHbits.ANS13=1;
  9219     12B8  1683               	bsf	3,5	;RP0=1, select bank3
  9220     12B9  1703               	bsf	3,6	;RP1=1, select bank3
  9221     12BA  1689               	bsf	9,5	;volatile
  9222     12BB                     l3327:
  9223                           
  9224                           ;adc.c: 87:             ADCON0bits.CHS=13;
  9225     12BB  1283               	bcf	3,5	;RP0=0, select bank0
  9226     12BC  1303               	bcf	3,6	;RP1=0, select bank0
  9227     12BD  081F               	movf	31,w	;volatile
  9228     12BE  39C3               	andlw	-61
  9229     12BF  3834               	iorlw	52
  9230     12C0  009F               	movwf	31	;volatile
  9231                           
  9232                           ;adc.c: 88:             break;
  9233     12C1  2AF8               	goto	l23
  9234     12C2                     l3329:
  9235                           
  9236                           ;adc.c: 90:             return 0;
  9237     12C2  3000               	movlw	0
  9238     12C3  2B07               	goto	l38
  9239     12C4                     l3335:
  9240     12C4  0874               	movf	configADC@ch,w
  9241     12C5  00F2               	movwf	??_configADC
  9242     12C6  01F3               	clrf	??_configADC+1
  9243                           
  9244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9245                           ; Switch size 1, requested type "simple"
  9246                           ; Number of cases is 1, Range of values is 0 to 0
  9247                           ; switch strategies available:
  9248                           ; Name         Instructions Cycles
  9249                           ; simple_byte            4     3 (average)
  9250                           ; direct_byte           11     8 (fixed)
  9251                           ; jumptable            260     6 (fixed)
  9252                           ;	Chosen strategy is simple_byte
  9253     12C7  0873               	movf	??_configADC+1,w
  9254     12C8  3A00               	xorlw	0	; case 0
  9255     12C9  1903               	skipnz
  9256     12CA  2ACC               	goto	l4295
  9257     12CB  2AC2               	goto	l3329
  9258     12CC                     l4295:
  9259                           
  9260                           ; Switch size 1, requested type "simple"
  9261                           ; Number of cases is 14, Range of values is 0 to 13
  9262                           ; switch strategies available:
  9263                           ; Name         Instructions Cycles
  9264                           ; simple_byte           43    22 (average)
  9265                           ; direct_byte           50     8 (fixed)
  9266                           ; jumptable            260     6 (fixed)
  9267                           ;	Chosen strategy is simple_byte
  9268     12CC  0872               	movf	??_configADC,w
  9269     12CD  3A00               	xorlw	0	; case 0
  9270     12CE  1903               	skipnz
  9271     12CF  2A2A               	goto	l22
  9272     12D0  3A01               	xorlw	1	; case 1
  9273     12D1  1903               	skipnz
  9274     12D2  2A33               	goto	l24
  9275     12D3  3A03               	xorlw	3	; case 2
  9276     12D4  1903               	skipnz
  9277     12D5  2A3E               	goto	l25
  9278     12D6  3A01               	xorlw	1	; case 3
  9279     12D7  1903               	skipnz
  9280     12D8  2A49               	goto	l26
  9281     12D9  3A07               	xorlw	7	; case 4
  9282     12DA  1903               	skipnz
  9283     12DB  2A54               	goto	l27
  9284     12DC  3A01               	xorlw	1	; case 5
  9285     12DD  1903               	skipnz
  9286     12DE  2A5F               	goto	l28
  9287     12DF  3A03               	xorlw	3	; case 6
  9288     12E0  1903               	skipnz
  9289     12E1  2A6A               	goto	l29
  9290     12E2  3A01               	xorlw	1	; case 7
  9291     12E3  1903               	skipnz
  9292     12E4  2A75               	goto	l30
  9293     12E5  3A0F               	xorlw	15	; case 8
  9294     12E6  1903               	skipnz
  9295     12E7  2A80               	goto	l31
  9296     12E8  3A01               	xorlw	1	; case 9
  9297     12E9  1903               	skipnz
  9298     12EA  2A8B               	goto	l32
  9299     12EB  3A03               	xorlw	3	; case 10
  9300     12EC  1903               	skipnz
  9301     12ED  2A96               	goto	l33
  9302     12EE  3A01               	xorlw	1	; case 11
  9303     12EF  1903               	skipnz
  9304     12F0  2AA1               	goto	l34
  9305     12F1  3A07               	xorlw	7	; case 12
  9306     12F2  1903               	skipnz
  9307     12F3  2AAC               	goto	l35
  9308     12F4  3A01               	xorlw	1	; case 13
  9309     12F5  1903               	skipnz
  9310     12F6  2AB7               	goto	l36
  9311     12F7  2AC2               	goto	l3329
  9312     12F8                     l23:
  9313                           
  9314                           ;adc.c: 93:     ADCON0bits.ADON = 1;
  9315     12F8  141F               	bsf	31,0	;volatile
  9316     12F9                     l3337:
  9317                           
  9318                           ;adc.c: 94:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  9319     12F9  3053               	movlw	83
  9320     12FA  00F2               	movwf	??_configADC
  9321     12FB                     u6567:
  9322     12FB  0BF2               	decfsz	??_configADC,f
  9323     12FC  2AFB               	goto	u6567
  9324     12FD                     l3339:
  9325                           
  9326                           ;adc.c: 95:     ADCON0bits.GO = 1;
  9327     12FD  1283               	bcf	3,5	;RP0=0, select bank0
  9328     12FE  1303               	bcf	3,6	;RP1=0, select bank0
  9329     12FF  149F               	bsf	31,1	;volatile
  9330     1300                     l3341:
  9331                           
  9332                           ;adc.c: 98:     if (ADCON0bits.GO_DONE == 1){
  9333     1300  1C9F               	btfss	31,1	;volatile
  9334     1301  2B03               	goto	u5181
  9335     1302  2B04               	goto	u5180
  9336     1303                     u5181:
  9337     1303  2B05               	goto	l40
  9338     1304                     u5180:
  9339     1304  2B00               	goto	l3341
  9340     1305                     l40:	
  9341                           ;adc.c: 101:     else{
  9342                           
  9343                           
  9344                           ;adc.c: 102:         ADCON0bits.ADON = 0;
  9345     1305  101F               	bcf	31,0	;volatile
  9346     1306                     l3347:
  9347                           
  9348                           ;adc.c: 103:         return ADRESH;
  9349     1306  081E               	movf	30,w	;volatile
  9350     1307                     l38:
  9351     1307  0008               	return
  9352     1308                     __end_of_configADC:
  9353                           
  9354                           	psect	text30
  9355     1A23                     __ptext30:	
  9356 ;; *************** function _config *****************
  9357 ;; Defined at:
  9358 ;;		line 90 in file "lab2.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		status,2
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         0       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0
  9375 ;;      Totals:         0       0       0       0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used: 1
  9378 ;; Hardware stack levels required when called: 2
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_main
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386     1A23                     _config:	
  9387                           ;psect for function _config
  9388                           
  9389     1A23                     l3363:	
  9390                           ;incstack = 0
  9391                           ; Regs used in _config: [status,2]
  9392                           
  9393                           
  9394                           ;lab2.c: 91:     ANSEL = 0;
  9395     1A23  1683               	bsf	3,5	;RP0=1, select bank3
  9396     1A24  1703               	bsf	3,6	;RP1=1, select bank3
  9397     1A25  0188               	clrf	8	;volatile
  9398                           
  9399                           ;lab2.c: 92:     ANSELH = 0;
  9400     1A26  0189               	clrf	9	;volatile
  9401                           
  9402                           ;lab2.c: 93:     PORTD = 0;
  9403     1A27  1283               	bcf	3,5	;RP0=0, select bank0
  9404     1A28  1303               	bcf	3,6	;RP1=0, select bank0
  9405     1A29  0188               	clrf	8	;volatile
  9406                           
  9407                           ;lab2.c: 94:     PORTE = 0;
  9408     1A2A  0189               	clrf	9	;volatile
  9409                           
  9410                           ;lab2.c: 95:     PORTC = 0;
  9411     1A2B  0187               	clrf	7	;volatile
  9412                           
  9413                           ;lab2.c: 96:     TRISA = 0;
  9414     1A2C  1683               	bsf	3,5	;RP0=1, select bank1
  9415     1A2D  1303               	bcf	3,6	;RP1=0, select bank1
  9416     1A2E  0185               	clrf	5	;volatile
  9417     1A2F                     l3365:
  9418                           
  9419                           ;lab2.c: 97:     TRISCbits.TRISC6 = 0;
  9420     1A2F  1307               	bcf	7,6	;volatile
  9421     1A30                     l3367:
  9422                           
  9423                           ;lab2.c: 98:     TRISCbits.TRISC7 = 1;
  9424     1A30  1787               	bsf	7,7	;volatile
  9425                           
  9426                           ;lab2.c: 99:     TRISD = 0;
  9427     1A31  0188               	clrf	8	;volatile
  9428                           
  9429                           ;lab2.c: 100:     TRISE = 0;
  9430     1A32  0189               	clrf	9	;volatile
  9431     1A33                     l3369:
  9432                           
  9433                           ;lab2.c: 102:     INTCONbits.PEIE = 1;
  9434     1A33  170B               	bsf	11,6	;volatile
  9435     1A34                     l3371:
  9436                           
  9437                           ;lab2.c: 103:     PIE1bits.RCIE = 1;
  9438     1A34  168C               	bsf	12,5	;volatile
  9439     1A35                     l3373:
  9440                           
  9441                           ;lab2.c: 104:     PIR1bits.RCIF = 0;
  9442     1A35  1283               	bcf	3,5	;RP0=0, select bank0
  9443     1A36  1303               	bcf	3,6	;RP1=0, select bank0
  9444     1A37  128C               	bcf	12,5	;volatile
  9445     1A38                     l3375:
  9446                           
  9447                           ;lab2.c: 105:     INTCONbits.GIE = 1;
  9448     1A38  178B               	bsf	11,7	;volatile
  9449     1A39                     l3377:
  9450                           
  9451                           ;lab2.c: 106:     PIE1bits.TXIE = 0;
  9452     1A39  1683               	bsf	3,5	;RP0=1, select bank1
  9453     1A3A  1303               	bcf	3,6	;RP1=0, select bank1
  9454     1A3B  120C               	bcf	12,4	;volatile
  9455     1A3C                     l3379:
  9456                           
  9457                           ;lab2.c: 107:     PIR1bits.RCIF = 1;
  9458     1A3C  1283               	bcf	3,5	;RP0=0, select bank0
  9459     1A3D  1303               	bcf	3,6	;RP1=0, select bank0
  9460     1A3E  168C               	bsf	12,5	;volatile
  9461     1A3F                     l3381:
  9462                           
  9463                           ;lab2.c: 108:     PIR1bits.TXIF = 1;
  9464     1A3F  160C               	bsf	12,4	;volatile
  9465     1A40                     l134:
  9466     1A40  0008               	return
  9467     1A41                     __end_of_config:
  9468                           
  9469                           	psect	text31
  9470     0801                     __ptext31:	
  9471 ;; *************** function _baud *****************
  9472 ;; Defined at:
  9473 ;;		line 12 in file "uart.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		wreg
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9487 ;;      Params:         0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; Hardware stack levels required when called: 2
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501     0801                     _baud:	
  9502                           ;psect for function _baud
  9503                           
  9504     0801                     l3383:	
  9505                           ;incstack = 0
  9506                           ; Regs used in _baud: [wreg]
  9507                           
  9508                           
  9509                           ;uart.c: 13:     SPBRG = 25;
  9510     0801  3019               	movlw	25
  9511     0802  1683               	bsf	3,5	;RP0=1, select bank1
  9512     0803  1303               	bcf	3,6	;RP1=0, select bank1
  9513     0804  0099               	movwf	25	;volatile
  9514     0805                     l224:
  9515     0805  0008               	return
  9516     0806                     __end_of_baud:
  9517                           
  9518                           	psect	text32
  9519     1A05                     __ptext32:	
  9520 ;; *************** function _ESCString *****************
  9521 ;; Defined at:
  9522 ;;		line 39 in file "uart.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  a               1    wreg     PTR unsigned char 
  9525 ;;		 -> BUFFER(20), 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  a               1    4[COMMON] PTR unsigned char 
  9528 ;;		 -> BUFFER(20), 
  9529 ;;  i               1    5[COMMON] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9539 ;;      Params:         0       0       0       0       0
  9540 ;;      Locals:         2       0       0       0       0
  9541 ;;      Temps:          1       0       0       0       0
  9542 ;;      Totals:         3       0       0       0       0
  9543 ;;Total ram usage:        3 bytes
  9544 ;; Hardware stack levels used: 1
  9545 ;; Hardware stack levels required when called: 3
  9546 ;; This function calls:
  9547 ;;		_ESC
  9548 ;; This function is called by:
  9549 ;;		_main
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553     1A05                     _ESCString:	
  9554                           ;psect for function _ESCString
  9555                           
  9556                           
  9557                           ;incstack = 0
  9558                           ; Regs used in _ESCString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9559                           ;ESCString@a stored from wreg
  9560     1A05  00F4               	movwf	ESCString@a
  9561     1A06                     l3677:
  9562                           
  9563                           ;uart.c: 40:     uint8_t i;;uart.c: 41:     for(i=0;a[i]!='\0';i++){
  9564     1A06  01F5               	clrf	ESCString@i
  9565     1A07  2A17               	goto	l3683
  9566     1A08                     l3679:
  9567                           
  9568                           ;uart.c: 42:         ESC(a[i]);
  9569     1A08  0875               	movf	ESCString@i,w
  9570     1A09  0774               	addwf	ESCString@a,w
  9571     1A0A  00F3               	movwf	??_ESCString
  9572     1A0B  0873               	movf	??_ESCString,w
  9573     1A0C  0084               	movwf	4
  9574     1A0D  0800               	movf	0,w
  9575     1A0E  160A  158A  21A5  160A  158A  	fcall	_ESC
  9576     1A13                     l3681:
  9577                           
  9578                           ;uart.c: 43:     }
  9579     1A13  3001               	movlw	1
  9580     1A14  00F3               	movwf	??_ESCString
  9581     1A15  0873               	movf	??_ESCString,w
  9582     1A16  07F5               	addwf	ESCString@i,f
  9583     1A17                     l3683:
  9584     1A17  0875               	movf	ESCString@i,w
  9585     1A18  0774               	addwf	ESCString@a,w
  9586     1A19  00F3               	movwf	??_ESCString
  9587     1A1A  0873               	movf	??_ESCString,w
  9588     1A1B  0084               	movwf	4
  9589     1A1C  1383               	bcf	3,7	;select IRP bank0
  9590     1A1D  0800               	movf	0,w
  9591     1A1E  1D03               	btfss	3,2
  9592     1A1F  2A21               	goto	u5661
  9593     1A20  2A22               	goto	u5660
  9594     1A21                     u5661:
  9595     1A21  2A08               	goto	l3679
  9596     1A22                     u5660:
  9597     1A22                     l242:
  9598     1A22  0008               	return
  9599     1A23                     __end_of_ESCString:
  9600                           
  9601                           	psect	text33
  9602     19A5                     __ptext33:	
  9603 ;; *************** function _ESC *****************
  9604 ;; Defined at:
  9605 ;;		line 35 in file "uart.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  a               1    wreg     unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  a               1    2[COMMON] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9619 ;;      Params:         0       0       0       0       0
  9620 ;;      Locals:         1       0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0
  9622 ;;      Totals:         1       0       0       0       0
  9623 ;;Total ram usage:        1 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 2
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;;		_ESCString
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634     19A5                     _ESC:	
  9635                           ;psect for function _ESC
  9636                           
  9637                           
  9638                           ;incstack = 0
  9639                           ; Regs used in _ESC: [wreg]
  9640                           ;ESC@a stored from wreg
  9641     19A5  00F2               	movwf	ESC@a
  9642     19A6                     l2907:
  9643     19A6                     l233:	
  9644                           ;uart.c: 36:     while(!TXIF);
  9645                           
  9646     19A6  1283               	bcf	3,5	;RP0=0, select bank0
  9647     19A7  1303               	bcf	3,6	;RP1=0, select bank0
  9648     19A8  1E0C               	btfss	12,4	;volatile
  9649     19A9  29AB               	goto	u4121
  9650     19AA  29AC               	goto	u4120
  9651     19AB                     u4121:
  9652     19AB  29A6               	goto	l233
  9653     19AC                     u4120:
  9654     19AC                     l2909:
  9655                           
  9656                           ;uart.c: 37:     TXREG=a;
  9657     19AC  0872               	movf	ESC@a,w
  9658     19AD  0099               	movwf	25	;volatile
  9659     19AE                     l236:
  9660     19AE  0008               	return
  9661     19AF                     __end_of_ESC:
  9662                           
  9663                           	psect	text34
  9664     1B07                     __ptext34:	
  9665 ;; *************** function _ESCLCD *****************
  9666 ;; Defined at:
  9667 ;;		line 107 in file "lcd.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  a               2    5[COMMON] PTR unsigned char 
  9670 ;;		 -> BUFFER(20), STR_1(15), 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  i               2    0[BANK0 ] int 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9682 ;;      Params:         2       0       0       0       0
  9683 ;;      Locals:         0       2       0       0       0
  9684 ;;      Temps:          3       0       0       0       0
  9685 ;;      Totals:         5       2       0       0       0
  9686 ;;Total ram usage:        7 bytes
  9687 ;; Hardware stack levels used: 1
  9688 ;; Hardware stack levels required when called: 4
  9689 ;; This function calls:
  9690 ;;		_ESCchar
  9691 ;; This function is called by:
  9692 ;;		_main
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696     1B07                     _ESCLCD:	
  9697                           ;psect for function _ESCLCD
  9698                           
  9699     1B07                     l3947:	
  9700                           ;incstack = 0
  9701                           ; Regs used in _ESCLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9702                           
  9703                           
  9704                           ;lcd.c: 108:     int i;;lcd.c: 109:  for(i=0;a[i]!='\0';i++)
  9705     1B07  1283               	bcf	3,5	;RP0=0, select bank0
  9706     1B08  1303               	bcf	3,6	;RP1=0, select bank0
  9707     1B09  01A0               	clrf	ESCLCD@i
  9708     1B0A  01A1               	clrf	ESCLCD@i+1
  9709     1B0B  2B30               	goto	l3953
  9710     1B0C                     l3949:
  9711                           
  9712                           ;lcd.c: 110:  ESCchar(a[i]);
  9713     1B0C  0820               	movf	ESCLCD@i,w
  9714     1B0D  0775               	addwf	ESCLCD@a,w
  9715     1B0E  00F8               	movwf	??_ESCLCD+1
  9716     1B0F  0876               	movf	ESCLCD@a+1,w
  9717     1B10  00F7               	movwf	??_ESCLCD
  9718     1B11  1803               	skipnc
  9719     1B12  0AF7               	incf	??_ESCLCD,f
  9720     1B13  1FA0               	btfss	ESCLCD@i,7
  9721     1B14  2B16               	goto	u6010
  9722     1B15  03F7               	decf	??_ESCLCD,f
  9723     1B16                     u6010:
  9724     1B16  0877               	movf	??_ESCLCD,w
  9725     1B17  00F9               	movwf	??_ESCLCD+2
  9726     1B18  0879               	movf	??_ESCLCD+2,w
  9727     1B19  1283               	bcf	3,5	;RP0=0, select bank0
  9728     1B1A  1303               	bcf	3,6	;RP1=0, select bank0
  9729     1B1B  00FF               	movwf	btemp+1
  9730     1B1C  0878               	movf	??_ESCLCD+1,w
  9731     1B1D  0084               	movwf	4
  9732     1B1E  160A  118A  2000  160A  158A  	fcall	stringtab
  9733     1B23  160A  158A  21E9  160A  158A  	fcall	_ESCchar
  9734     1B28                     l3951:
  9735     1B28  3001               	movlw	1
  9736     1B29  1283               	bcf	3,5	;RP0=0, select bank0
  9737     1B2A  1303               	bcf	3,6	;RP1=0, select bank0
  9738     1B2B  07A0               	addwf	ESCLCD@i,f
  9739     1B2C  1803               	skipnc
  9740     1B2D  0AA1               	incf	ESCLCD@i+1,f
  9741     1B2E  3000               	movlw	0
  9742     1B2F  07A1               	addwf	ESCLCD@i+1,f
  9743     1B30                     l3953:
  9744     1B30  0820               	movf	ESCLCD@i,w
  9745     1B31  0775               	addwf	ESCLCD@a,w
  9746     1B32  00F8               	movwf	??_ESCLCD+1
  9747     1B33  0876               	movf	ESCLCD@a+1,w
  9748     1B34  00F7               	movwf	??_ESCLCD
  9749     1B35  1803               	skipnc
  9750     1B36  0AF7               	incf	??_ESCLCD,f
  9751     1B37  1FA0               	btfss	ESCLCD@i,7
  9752     1B38  2B3A               	goto	u6020
  9753     1B39  03F7               	decf	??_ESCLCD,f
  9754     1B3A                     u6020:
  9755     1B3A  0877               	movf	??_ESCLCD,w
  9756     1B3B  00F9               	movwf	??_ESCLCD+2
  9757     1B3C  0879               	movf	??_ESCLCD+2,w
  9758     1B3D  1283               	bcf	3,5	;RP0=0, select bank0
  9759     1B3E  1303               	bcf	3,6	;RP1=0, select bank0
  9760     1B3F  00FF               	movwf	btemp+1
  9761     1B40  0878               	movf	??_ESCLCD+1,w
  9762     1B41  0084               	movwf	4
  9763     1B42  160A  118A  2000  160A  158A  	fcall	stringtab
  9764     1B47  3A00               	xorlw	0
  9765     1B48  1D03               	skipz
  9766     1B49  2B4B               	goto	u6031
  9767     1B4A  2B4C               	goto	u6030
  9768     1B4B                     u6031:
  9769     1B4B  2B0C               	goto	l3949
  9770     1B4C                     u6030:
  9771     1B4C                     l205:
  9772     1B4C  0008               	return
  9773     1B4D                     __end_of_ESCLCD:
  9774                           
  9775                           	psect	text35
  9776     19E9                     __ptext35:	
  9777 ;; *************** function _ESCchar *****************
  9778 ;; Defined at:
  9779 ;;		line 97 in file "lcd.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  a               1    wreg     unsigned char 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  a               1    4[COMMON] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, status,2, status,0, pclath, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9793 ;;      Params:         0       0       0       0       0
  9794 ;;      Locals:         1       0       0       0       0
  9795 ;;      Temps:          1       0       0       0       0
  9796 ;;      Totals:         2       0       0       0       0
  9797 ;;Total ram usage:        2 bytes
  9798 ;; Hardware stack levels used: 1
  9799 ;; Hardware stack levels required when called: 3
  9800 ;; This function calls:
  9801 ;;		_pin
  9802 ;; This function is called by:
  9803 ;;		_ESCLCD
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807     19E9                     _ESCchar:	
  9808                           ;psect for function _ESCchar
  9809                           
  9810                           
  9811                           ;incstack = 0
  9812                           ; Regs used in _ESCchar: [wreg+status,2+status,0+pclath+cstack]
  9813                           ;ESCchar@a stored from wreg
  9814     19E9  00F4               	movwf	ESCchar@a
  9815     19EA                     l3857:
  9816                           
  9817                           ;lcd.c: 98:     RE0 = 1;
  9818     19EA  1283               	bcf	3,5	;RP0=0, select bank0
  9819     19EB  1303               	bcf	3,6	;RP1=0, select bank0
  9820     19EC  1409               	bsf	9,0	;volatile
  9821     19ED                     l3859:
  9822                           
  9823                           ;lcd.c: 99:     pin(a);
  9824     19ED  0874               	movf	ESCchar@a,w
  9825     19EE  120A  118A  27BE  160A  158A  	fcall	_pin
  9826     19F3                     l3861:
  9827                           
  9828                           ;lcd.c: 100:     RE1 = 1;
  9829     19F3  1283               	bcf	3,5	;RP0=0, select bank0
  9830     19F4  1303               	bcf	3,6	;RP1=0, select bank0
  9831     19F5  1489               	bsf	9,1	;volatile
  9832     19F6                     l3863:
  9833                           
  9834                           ;lcd.c: 101:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9835     19F6  29F7               	nop2	;2 cycle nop
  9836     19F7  29F8               	nop2	;2 cycle nop
  9837     19F8  0000               	nop
  9838     19F9                     l3865:
  9839                           
  9840                           ;lcd.c: 102:     RE1 = 0;
  9841     19F9  1283               	bcf	3,5	;RP0=0, select bank0
  9842     19FA  1303               	bcf	3,6	;RP1=0, select bank0
  9843     19FB  1089               	bcf	9,1	;volatile
  9844     19FC                     l3867:
  9845                           
  9846                           ;lcd.c: 103:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9847     19FC  29FD               	nop2	;2 cycle nop
  9848     19FD  29FE               	nop2	;2 cycle nop
  9849     19FE  0000               	nop
  9850     19FF                     l3869:
  9851                           
  9852                           ;lcd.c: 104:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9853     19FF  3010               	movlw	16
  9854     1A00  00F3               	movwf	??_ESCchar
  9855     1A01                     u6577:
  9856     1A01  0BF3               	decfsz	??_ESCchar,f
  9857     1A02  2A01               	goto	u6577
  9858     1A03  0000               	nop
  9859     1A04                     l199:
  9860     1A04  0008               	return
  9861     1A05                     __end_of_ESCchar:
  9862                           
  9863                           	psect	text36
  9864     07BE                     __ptext36:	
  9865 ;; *************** function _pin *****************
  9866 ;; Defined at:
  9867 ;;		line 15 in file "lcd.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  a               1    wreg     unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  a               1    2[COMMON] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         0       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0
  9884 ;;      Totals:         1       0       0       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used: 1
  9887 ;; Hardware stack levels required when called: 2
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_CMDs
  9892 ;;		_ESCchar
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896     07BE                     _pin:	
  9897                           ;psect for function _pin
  9898                           
  9899                           
  9900                           ;incstack = 0
  9901                           ; Regs used in _pin: [wreg]
  9902                           ;pin@a stored from wreg
  9903     07BE  00F2               	movwf	pin@a
  9904     07BF                     l3799:
  9905                           
  9906                           ;lcd.c: 16:     if(a & 1){
  9907     07BF  1C72               	btfss	pin@a,0
  9908     07C0  2FC2               	goto	u5701
  9909     07C1  2FC3               	goto	u5700
  9910     07C2                     u5701:
  9911     07C2  2FC7               	goto	l165
  9912     07C3                     u5700:
  9913     07C3                     l3801:
  9914                           
  9915                           ;lcd.c: 17:         RD0=1;}
  9916     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  9917     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  9918     07C5  1408               	bsf	8,0	;volatile
  9919     07C6  2FCA               	goto	l166
  9920     07C7                     l165:	
  9921                           ;lcd.c: 18:     else{
  9922                           
  9923                           
  9924                           ;lcd.c: 19:         RD0=0;}
  9925     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  9926     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  9927     07C9  1008               	bcf	8,0	;volatile
  9928     07CA                     l166:
  9929                           
  9930                           ;lcd.c: 20:     if(a & 2){
  9931     07CA  1CF2               	btfss	pin@a,1
  9932     07CB  2FCD               	goto	u5711
  9933     07CC  2FCE               	goto	u5710
  9934     07CD                     u5711:
  9935     07CD  2FD0               	goto	l167
  9936     07CE                     u5710:
  9937     07CE                     l3803:
  9938                           
  9939                           ;lcd.c: 21:         RD1=1;}
  9940     07CE  1488               	bsf	8,1	;volatile
  9941     07CF  2FD1               	goto	l168
  9942     07D0                     l167:	
  9943                           ;lcd.c: 22:     else{
  9944                           
  9945                           
  9946                           ;lcd.c: 23:         RD1=0;}
  9947     07D0  1088               	bcf	8,1	;volatile
  9948     07D1                     l168:
  9949                           
  9950                           ;lcd.c: 24:     if(a & 4){
  9951     07D1  1D72               	btfss	pin@a,2
  9952     07D2  2FD4               	goto	u5721
  9953     07D3  2FD5               	goto	u5720
  9954     07D4                     u5721:
  9955     07D4  2FD7               	goto	l169
  9956     07D5                     u5720:
  9957     07D5                     l3805:
  9958                           
  9959                           ;lcd.c: 25:         RD2=1;}
  9960     07D5  1508               	bsf	8,2	;volatile
  9961     07D6  2FD8               	goto	l170
  9962     07D7                     l169:	
  9963                           ;lcd.c: 26:     else{
  9964                           
  9965                           
  9966                           ;lcd.c: 27:         RD2=0;}
  9967     07D7  1108               	bcf	8,2	;volatile
  9968     07D8                     l170:
  9969                           
  9970                           ;lcd.c: 28:     if(a & 8){
  9971     07D8  1DF2               	btfss	pin@a,3
  9972     07D9  2FDB               	goto	u5731
  9973     07DA  2FDC               	goto	u5730
  9974     07DB                     u5731:
  9975     07DB  2FDE               	goto	l171
  9976     07DC                     u5730:
  9977     07DC                     l3807:
  9978                           
  9979                           ;lcd.c: 29:         RD3=1;}
  9980     07DC  1588               	bsf	8,3	;volatile
  9981     07DD  2FDF               	goto	l172
  9982     07DE                     l171:	
  9983                           ;lcd.c: 30:     else{
  9984                           
  9985                           
  9986                           ;lcd.c: 31:         RD3=0;}
  9987     07DE  1188               	bcf	8,3	;volatile
  9988     07DF                     l172:
  9989                           
  9990                           ;lcd.c: 32:     if(a & 16){
  9991     07DF  1E72               	btfss	pin@a,4
  9992     07E0  2FE2               	goto	u5741
  9993     07E1  2FE3               	goto	u5740
  9994     07E2                     u5741:
  9995     07E2  2FE5               	goto	l173
  9996     07E3                     u5740:
  9997     07E3                     l3809:
  9998                           
  9999                           ;lcd.c: 33:         RD4=1;}
 10000     07E3  1608               	bsf	8,4	;volatile
 10001     07E4  2FE6               	goto	l174
 10002     07E5                     l173:	
 10003                           ;lcd.c: 34:     else{
 10004                           
 10005                           
 10006                           ;lcd.c: 35:         RD4=0;}
 10007     07E5  1208               	bcf	8,4	;volatile
 10008     07E6                     l174:
 10009                           
 10010                           ;lcd.c: 36:     if(a & 32){
 10011     07E6  1EF2               	btfss	pin@a,5
 10012     07E7  2FE9               	goto	u5751
 10013     07E8  2FEA               	goto	u5750
 10014     07E9                     u5751:
 10015     07E9  2FEC               	goto	l175
 10016     07EA                     u5750:
 10017     07EA                     l3811:
 10018                           
 10019                           ;lcd.c: 37:         RD5=1;}
 10020     07EA  1688               	bsf	8,5	;volatile
 10021     07EB  2FED               	goto	l176
 10022     07EC                     l175:	
 10023                           ;lcd.c: 38:     else{
 10024                           
 10025                           
 10026                           ;lcd.c: 39:         RD5=0;}
 10027     07EC  1288               	bcf	8,5	;volatile
 10028     07ED                     l176:
 10029                           
 10030                           ;lcd.c: 40:     if(a & 64){
 10031     07ED  1F72               	btfss	pin@a,6
 10032     07EE  2FF0               	goto	u5761
 10033     07EF  2FF1               	goto	u5760
 10034     07F0                     u5761:
 10035     07F0  2FF3               	goto	l177
 10036     07F1                     u5760:
 10037     07F1                     l3813:
 10038                           
 10039                           ;lcd.c: 41:         RD6=1;}
 10040     07F1  1708               	bsf	8,6	;volatile
 10041     07F2  2FF4               	goto	l178
 10042     07F3                     l177:	
 10043                           ;lcd.c: 42:     else{
 10044                           
 10045                           
 10046                           ;lcd.c: 43:         RD6=0;}
 10047     07F3  1308               	bcf	8,6	;volatile
 10048     07F4                     l178:
 10049                           
 10050                           ;lcd.c: 44:     if(a & 128){
 10051     07F4  1FF2               	btfss	pin@a,7
 10052     07F5  2FF7               	goto	u5771
 10053     07F6  2FF8               	goto	u5770
 10054     07F7                     u5771:
 10055     07F7  2FFA               	goto	l179
 10056     07F8                     u5770:
 10057     07F8                     l3815:
 10058                           
 10059                           ;lcd.c: 45:         RD7=1;}
 10060     07F8  1788               	bsf	8,7	;volatile
 10061     07F9  2FFB               	goto	l181
 10062     07FA                     l179:	
 10063                           ;lcd.c: 46:     else{
 10064                           
 10065                           
 10066                           ;lcd.c: 47:         RD7=0;}
 10067     07FA  1388               	bcf	8,7	;volatile
 10068     07FB                     l181:
 10069     07FB  0008               	return
 10070     07FC                     __end_of_pin:
 10071                           
 10072                           	psect	text37
 10073     0806                     __ptext37:	
 10074 ;; *************** function _isr *****************
 10075 ;; Defined at:
 10076 ;;		line 46 in file "lab2.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2, status,0, pclath, cstack
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10090 ;;      Params:         0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0
 10092 ;;      Temps:          2       0       0       0       0
 10093 ;;      Totals:         2       0       0       0       0
 10094 ;;Total ram usage:        2 bytes
 10095 ;; Hardware stack levels used: 1
 10096 ;; Hardware stack levels required when called: 1
 10097 ;; This function calls:
 10098 ;;		_LEER
 10099 ;; This function is called by:
 10100 ;;		Interrupt level 1
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104     0806                     _isr:	
 10105                           ;psect for function _isr
 10106                           
 10107     0806                     i1l3685:
 10108                           
 10109                           ;lab2.c: 47:     if (RCIF == 1) {
 10110     0806  1283               	bcf	3,5	;RP0=0, select bank0
 10111     0807  1303               	bcf	3,6	;RP1=0, select bank0
 10112     0808  1E8C               	btfss	12,5	;volatile
 10113     0809  280B               	goto	u567_21
 10114     080A  280C               	goto	u567_20
 10115     080B                     u567_21:
 10116     080B  282B               	goto	i1l123
 10117     080C                     u567_20:
 10118     080C                     i1l3687:
 10119                           
 10120                           ;lab2.c: 48:         RCIF = 0;
 10121     080C  128C               	bcf	12,5	;volatile
 10122     080D                     i1l3689:
 10123                           
 10124                           ;lab2.c: 49:         lectura = LEER();
 10125     080D  160A  158A  218D  120A  158A  	fcall	_LEER
 10126     0812  00FB               	movwf	_lectura
 10127     0813                     i1l3691:
 10128                           
 10129                           ;lab2.c: 50:         if (lectura == '+'){
 10130     0813  302B               	movlw	43
 10131     0814  067B               	xorwf	_lectura,w
 10132     0815  1D03               	btfss	3,2
 10133     0816  2818               	goto	u568_21
 10134     0817  2819               	goto	u568_20
 10135     0818                     u568_21:
 10136     0818  281F               	goto	i1l3695
 10137     0819                     u568_20:
 10138     0819                     i1l3693:
 10139                           
 10140                           ;lab2.c: 51:             num = num + 1;}
 10141     0819  1683               	bsf	3,5	;RP0=1, select bank1
 10142     081A  1303               	bcf	3,6	;RP1=0, select bank1
 10143     081B  0858               	movf	_num^(0+128),w
 10144     081C  3E01               	addlw	1
 10145     081D  00D8               	movwf	_num^(0+128)
 10146     081E  282B               	goto	i1l123
 10147     081F                     i1l3695:
 10148     081F  302D               	movlw	45
 10149     0820  067B               	xorwf	_lectura,w
 10150     0821  1D03               	btfss	3,2
 10151     0822  2824               	goto	u569_21
 10152     0823  2825               	goto	u569_20
 10153     0824                     u569_21:
 10154     0824  282B               	goto	i1l120
 10155     0825                     u569_20:
 10156     0825                     i1l3697:
 10157                           
 10158                           ;lab2.c: 53:             num = num - 1;}
 10159     0825  1683               	bsf	3,5	;RP0=1, select bank1
 10160     0826  1303               	bcf	3,6	;RP1=0, select bank1
 10161     0827  0858               	movf	_num^(0+128),w
 10162     0828  3EFF               	addlw	255
 10163     0829  00D8               	movwf	_num^(0+128)
 10164     082A  282B               	goto	i1l123
 10165     082B                     i1l120:
 10166     082B                     i1l123:
 10167     082B  0871               	movf	??_isr+1,w
 10168     082C  008A               	movwf	10
 10169     082D  0E70               	swapf	??_isr,w
 10170     082E  0083               	movwf	3
 10171     082F  0EFE               	swapf	btemp,f
 10172     0830  0E7E               	swapf	btemp,w
 10173     0831  0009               	retfie
 10174     0832                     __end_of_isr:
 10175                           
 10176                           	psect	intentry
 10177     0004                     __pintentry:	
 10178                           ;incstack = 0
 10179                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10180                           
 10181     0004                     interrupt_function:
 10182     007E                     saved_w	set	btemp
 10183     0004  00FE               	movwf	btemp
 10184     0005  0E03               	swapf	3,w
 10185     0006  00F0               	movwf	??_isr
 10186     0007  080A               	movf	10,w
 10187     0008  00F1               	movwf	??_isr+1
 10188     0009  120A  158A  2806   	ljmp	_isr
 10189                           
 10190                           	psect	text38
 10191     198D                     __ptext38:	
 10192 ;; *************** function _LEER *****************
 10193 ;; Defined at:
 10194 ;;		line 45 in file "uart.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      unsigned char 
 10201 ;; Registers used:
 10202 ;;		wreg
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10208 ;;      Params:         0       0       0       0       0
 10209 ;;      Locals:         0       0       0       0       0
 10210 ;;      Temps:          0       0       0       0       0
 10211 ;;      Totals:         0       0       0       0       0
 10212 ;;Total ram usage:        0 bytes
 10213 ;; Hardware stack levels used: 1
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_isr
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221     198D                     _LEER:	
 10222                           ;psect for function _LEER
 10223                           
 10224     198D                     i1l3357:	
 10225                           ;incstack = 0
 10226                           ; Regs used in _LEER: [wreg]
 10227                           
 10228     198D                     i1l245:	
 10229                           ;uart.c: 46:   while(!RCIF);
 10230                           
 10231     198D  1283               	bcf	3,5	;RP0=0, select bank0
 10232     198E  1303               	bcf	3,6	;RP1=0, select bank0
 10233     198F  1E8C               	btfss	12,5	;volatile
 10234     1990  2992               	goto	u519_21
 10235     1991  2993               	goto	u519_20
 10236     1992                     u519_21:
 10237     1992  298D               	goto	i1l245
 10238     1993                     u519_20:
 10239     1993                     i1l3359:
 10240                           
 10241                           ;uart.c: 47:   return RCREG;
 10242     1993  081A               	movf	26,w	;volatile
 10243     1994                     i1l248:
 10244     1994  0008               	return
 10245     1995                     __end_of_LEER:
 10246     007E                     btemp	set	126	;btemp
 10247     007E                     wtemp0	set	126
 10248                           
 10249                           	psect	idloc
 10250                           
 10251                           ;Config register IDLOC0 @ 0x2000
 10252                           ;	unspecified, using default values
 10253     2000                     	org	8192
 10254     2000  3FFF               	dw	16383
 10255                           
 10256                           ;Config register IDLOC1 @ 0x2001
 10257                           ;	unspecified, using default values
 10258     2001                     	org	8193
 10259     2001  3FFF               	dw	16383
 10260                           
 10261                           ;Config register IDLOC2 @ 0x2002
 10262                           ;	unspecified, using default values
 10263     2002                     	org	8194
 10264     2002  3FFF               	dw	16383
 10265                           
 10266                           ;Config register IDLOC3 @ 0x2003
 10267                           ;	unspecified, using default values
 10268     2003                     	org	8195
 10269     2003  3FFF               	dw	16383
 10270                           
 10271                           	psect	config
 10272                           
 10273                           ;Config register CONFIG1 @ 0x2007
 10274                           ;	Oscillator Selection bits
 10275                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10276                           ;	Watchdog Timer Enable bit
 10277                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10278                           ;	Power-up Timer Enable bit
 10279                           ;	PWRTE = OFF, PWRT disabled
 10280                           ;	RE3/MCLR pin function select bit
 10281                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10282                           ;	Code Protection bit
 10283                           ;	CP = OFF, Program memory code protection is disabled
 10284                           ;	Data Code Protection bit
 10285                           ;	CPD = OFF, Data memory code protection is disabled
 10286                           ;	Brown Out Reset Selection bits
 10287                           ;	BOREN = OFF, BOR disabled
 10288                           ;	Internal External Switchover bit
 10289                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10290                           ;	Fail-Safe Clock Monitor Enabled bit
 10291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10292                           ;	Low Voltage Programming Enable bit
 10293                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10294                           ;	In-Circuit Debugger Mode bit
 10295                           ;	DEBUG = 0x1, unprogramme 10296     2007                     	org	8199
 10297     2007  20D4               	dw	8404
 10298                           
 10299                           ;Config register CONFIG2 @ 0x2008
 10300                           ;	Brown-out Reset Selection bit
 10301                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10302                           ;	Flash Program Memory Self Write Enable bits
 10303                           ;	WRT = OFF, Write protection off
 10304     2008                     	org	8200
 10305     2008  3FFF               	dw	16383
 10306                           
 10307                           	psect	text1_split_1
 10308     001D                     u6150:
 10309     001D                     l4039:
 10310     001D  1683               	bsf	3,5	;RP0=1, select bank1
 10311     001E  1303               	bcf	3,6	;RP1=0, select bank1
 10312     001F  0848               	movf	(sprintf@fval+3)^(0+128),w
 10313     0020  00F5               	movwf	___fleq@ff1+3
 10314     0021  0847               	movf	(sprintf@fval+2)^(0+128),w
 10315     0022  00F4               	movwf	___fleq@ff1+2
 10316     0023  0846               	movf	(sprintf@fval+1)^(0+128),w
 10317     0024  00F3               	movwf	___fleq@ff1+1
 10318     0025  0845               	movf	sprintf@fval^(0+128),w
 10319     0026  00F2               	movwf	___fleq@ff1
 10320     0027  3000               	movlw	0
 10321     0028  00F9               	movwf	___fleq@ff2+3
 10322     0029  3000               	movlw	0
 10323     002A  00F8               	movwf	___fleq@ff2+2
 10324     002B  3000               	movlw	0
 10325     002C  00F7               	movwf	___fleq@ff2+1
 10326     002D  3000               	movlw	0
 10327     002E  00F6               	movwf	___fleq@ff2
 10328     002F  160A  158A  2393  120A  118A  	fcall	___fleq
 10329     0034  1803               	btfsc	3,0
 10330     0035  2837               	goto	u6161
 10331     0036  2838               	goto	u6160
 10332     0037                     u6161:
 10333     0037  28E0               	goto	l4059
 10334     0038                     u6160:
 10335     0038                     l4041:
 10336     0038  1683               	bsf	3,5	;RP0=1, select bank1
 10337     0039  1303               	bcf	3,6	;RP1=0, select bank1
 10338     003A  0848               	movf	(sprintf@fval+3)^(0+128),w
 10339     003B  1283               	bcf	3,5	;RP0=0, select bank0
 10340     003C  1303               	bcf	3,6	;RP1=0, select bank0
 10341     003D  00D8               	movwf	___fltol@f1+3
 10342     003E  1683               	bsf	3,5	;RP0=1, select bank1
 10343     003F  1303               	bcf	3,6	;RP1=0, select bank1
 10344     0040  0847               	movf	(sprintf@fval+2)^(0+128),w
 10345     0041  1283               	bcf	3,5	;RP0=0, select bank0
 10346     0042  1303               	bcf	3,6	;RP1=0, select bank0
 10347     0043  00D7               	movwf	___fltol@f1+2
 10348     0044  1683               	bsf	3,5	;RP0=1, select bank1
 10349     0045  1303               	bcf	3,6	;RP1=0, select bank1
 10350     0046  0846               	movf	(sprintf@fval+1)^(0+128),w
 10351     0047  1283               	bcf	3,5	;RP0=0, select bank0
 10352     0048  1303               	bcf	3,6	;RP1=0, select bank0
 10353     0049  00D6               	movwf	___fltol@f1+1
 10354     004A  1683               	bsf	3,5	;RP0=1, select bank1
 10355     004B  1303               	bcf	3,6	;RP1=0, select bank1
 10356     004C  0845               	movf	sprintf@fval^(0+128),w
 10357     004D  1283               	bcf	3,5	;RP0=0, select bank0
 10358     004E  1303               	bcf	3,6	;RP1=0, select bank0
 10359     004F  00D5               	movwf	___fltol@f1
 10360     0050  160A  158A  2619  120A  118A  	fcall	___fltol
 10361     0055  1283               	bcf	3,5	;RP0=0, select bank0
 10362     0056  1303               	bcf	3,6	;RP1=0, select bank0
 10363     0057  0858               	movf	?___fltol+3,w
 10364     0058  0457               	iorwf	?___fltol+2,w
 10365     0059  0456               	iorwf	?___fltol+1,w
 10366     005A  0455               	iorwf	?___fltol,w
 10367     005B  1D03               	skipz
 10368     005C  285E               	goto	u6171
 10369     005D  285F               	goto	u6170
 10370     005E                     u6171:
 10371     005E  28E0               	goto	l4059
 10372     005F                     u6170:
 10373     005F                     l4043:
 10374     005F  1683               	bsf	3,5	;RP0=1, select bank1
 10375     0060  1303               	bcf	3,6	;RP1=0, select bank1
 10376     0061  083B               	movf	(sprintf@eexp+1)^(0+128),w
 10377     0062  3A80               	xorlw	128
 10378     0063  00FF               	movwf	btemp+1
 10379     0064  3080               	movlw	128
 10380     0065  027F               	subwf	btemp+1,w
 10381     0066  1D03               	skipz
 10382     0067  286A               	goto	u6185
 10383     0068  3002               	movlw	2
 10384     0069  023A               	subwf	sprintf@eexp^(0+128),w
 10385     006A                     u6185:
 10386     006A  1C03               	skipc
 10387     006B  286D               	goto	u6181
 10388     006C  286E               	goto	u6180
 10389     006D                     u6181:
 10390     006D  28E0               	goto	l4059
 10391     006E                     u6180:
 10392     006E                     l4045:
 10393                           
 10394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10395     006E  1683               	bsf	3,5	;RP0=1, select bank1
 10396     006F  1303               	bcf	3,6	;RP1=0, select bank1
 10397     0070  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10398     0071  00F5               	movwf	___flge@ff1+3
 10399     0072  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10400     0073  00F4               	movwf	___flge@ff1+2
 10401     0074  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10402     0075  00F3               	movwf	___flge@ff1+1
 10403     0076  083C               	movf	sprintf@tmpval^(0+128),w
 10404     0077  00F2               	movwf	___flge@ff1
 10405     0078  3040               	movlw	64
 10406     0079  00F9               	movwf	___flge@ff2+3
 10407     007A  3089               	movlw	137
 10408     007B  00F8               	movwf	___flge@ff2+2
 10409     007C  3070               	movlw	112
 10410     007D  00F7               	movwf	___flge@ff2+1
 10411     007E  305F               	movlw	95
 10412     007F  00F6               	movwf	___flge@ff2
 10413     0080  160A  118A  20C1  120A  118A  	fcall	___flge
 10414     0085  1803               	btfsc	3,0
 10415     0086  2888               	goto	u6191
 10416     0087  2889               	goto	u6190
 10417     0088                     u6191:
 10418     0088  2892               	goto	l4049
 10419     0089                     u6190:
 10420     0089                     l4047:
 10421                           
 10422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10423     0089  30F7               	movlw	247
 10424     008A  1683               	bsf	3,5	;RP0=1, select bank1
 10425     008B  1303               	bcf	3,6	;RP1=0, select bank1
 10426     008C  07BA               	addwf	sprintf@eexp^(0+128),f
 10427     008D  1803               	skipnc
 10428     008E  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
 10429     008F  30FF               	movlw	255
 10430     0090  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
 10431                           
 10432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10433     0091  289A               	goto	l4051
 10434     0092                     l4049:
 10435                           
 10436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10437     0092  30F8               	movlw	248
 10438     0093  1683               	bsf	3,5	;RP0=1, select bank1
 10439     0094  1303               	bcf	3,6	;RP1=0, select bank1
 10440     0095  07BA               	addwf	sprintf@eexp^(0+128),f
 10441     0096  1803               	skipnc
 10442     0097  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
 10443     0098  30FF               	movlw	255
 10444     0099  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
 10445     009A                     l4051:
 10446                           
 10447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10448     009A  083A               	movf	sprintf@eexp^(0+128),w
 10449     009B  120A  158A  249D  120A  118A  	fcall	_scale
 10450     00A0  1283               	bcf	3,5	;RP0=0, select bank0
 10451     00A1  1303               	bcf	3,6	;RP1=0, select bank0
 10452     00A2  0845               	movf	?_scale+3,w
 10453     00A3  1683               	bsf	3,5	;RP0=1, select bank1
 10454     00A4  1303               	bcf	3,6	;RP1=0, select bank1
 10455     00A5  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10456     00A6  1283               	bcf	3,5	;RP0=0, select bank0
 10457     00A7  1303               	bcf	3,6	;RP1=0, select bank0
 10458     00A8  0844               	movf	?_scale+2,w
 10459     00A9  1683               	bsf	3,5	;RP0=1, select bank1
 10460     00AA  1303               	bcf	3,6	;RP1=0, select bank1
 10461     00AB  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10462     00AC  1283               	bcf	3,5	;RP0=0, select bank0
 10463     00AD  1303               	bcf	3,6	;RP1=0, select bank0
 10464     00AE  0843               	movf	?_scale+1,w
 10465     00AF  1683               	bsf	3,5	;RP0=1, select bank1
 10466     00B0  1303               	bcf	3,6	;RP1=0, select bank1
 10467     00B1  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10468     00B2  1283               	bcf	3,5	;RP0=0, select bank0
 10469     00B3  1303               	bcf	3,6	;RP1=0, select bank0
 10470     00B4  0842               	movf	?_scale,w
 10471     00B5  1683               	bsf	3,5	;RP0=1, select bank1
 10472     00B6  1303               	bcf	3,6	;RP1=0, select bank1
 10473     00B7  00BC               	movwf	sprintf@tmpval^(0+128)
 10474     00B8                     l4053:
 10475     00B8  0848               	movf	(sprintf@fval+3)^(0+128),w
 10476     00B9  00F5               	movwf	__div_to_l_@f1+3
 10477     00BA  0847               	movf	(sprintf@fval+2)^(0+128),w
 10478     00BB  00F4               	movwf	__div_to_l_@f1+2
 10479     00BC  0846               	movf	(sprintf@fval+1)^(0+128),w
 10480     00BD  00F3               	movwf	__div_to_l_@f1+1
 10481     00BE  0845               	movf	sprintf@fval^(0+128),w
 10482     00BF  00F2               	movwf	__div_to_l_@f1
 10483     00C0  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10484     00C1  00F9               	movwf	__div_to_l_@f2+3
 10485     00C2  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10486     00C3  00F8               	movwf	__div_to_l_@f2+2
 10487     00C4  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10488     00C5  00F7               	movwf	__div_to_l_@f2+1
 10489     00C6  083C               	movf	sprintf@tmpval^(0+128),w
 10490     00C7  00F6               	movwf	__div_to_l_@f2
 10491     00C8  160A  158A  2748  120A  118A  	fcall	__div_to_l_
 10492     00CD  0875               	movf	?__div_to_l_+3,w
 10493     00CE  1683               	bsf	3,5	;RP0=1, select bank1
 10494     00CF  1303               	bcf	3,6	;RP1=0, select bank1
 10495     00D0  00C3               	movwf	(sprintf@val+3)^(0+128)
 10496     00D1  0874               	movf	?__div_to_l_+2,w
 10497     00D2  00C2               	movwf	(sprintf@val+2)^(0+128)
 10498     00D3  0873               	movf	?__div_to_l_+1,w
 10499     00D4  00C1               	movwf	(sprintf@val+1)^(0+128)
 10500     00D5  0872               	movf	?__div_to_l_,w
 10501     00D6  00C0               	movwf	sprintf@val^(0+128)
 10502     00D7                     l4057:
 10503                           
 10504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10505     00D7  3000               	movlw	0
 10506     00D8  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10507     00D9  3000               	movlw	0
 10508     00DA  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10509     00DB  3000               	movlw	0
 10510     00DC  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10511     00DD  3000               	movlw	0
 10512     00DE  00C5               	movwf	sprintf@fval^(0+128)
 10513                           
 10514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10515     00DF  2946               	goto	l4065
 10516     00E0                     l4059:
 10517                           
 10518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10519     00E0  1683               	bsf	3,5	;RP0=1, select bank1
 10520     00E1  1303               	bcf	3,6	;RP1=0, select bank1
 10521     00E2  0848               	movf	(sprintf@fval+3)^(0+128),w
 10522     00E3  1283               	bcf	3,5	;RP0=0, select bank0
 10523     00E4  1303               	bcf	3,6	;RP1=0, select bank0
 10524     00E5  00D8               	movwf	___fltol@f1+3
 10525     00E6  1683               	bsf	3,5	;RP0=1, select bank1
 10526     00E7  1303               	bcf	3,6	;RP1=0, select bank1
 10527     00E8  0847               	movf	(sprintf@fval+2)^(0+128),w
 10528     00E9  1283               	bcf	3,5	;RP0=0, select bank0
 10529     00EA  1303               	bcf	3,6	;RP1=0, select bank0
 10530     00EB  00D7               	movwf	___fltol@f1+2
 10531     00EC  1683               	bsf	3,5	;RP0=1, select bank1
 10532     00ED  1303               	bcf	3,6	;RP1=0, select bank1
 10533     00EE  0846               	movf	(sprintf@fval+1)^(0+128),w
 10534     00EF  1283               	bcf	3,5	;RP0=0, select bank0
 10535     00F0  1303               	bcf	3,6	;RP1=0, select bank0
 10536     00F1  00D6               	movwf	___fltol@f1+1
 10537     00F2  1683               	bsf	3,5	;RP0=1, select bank1
 10538     00F3  1303               	bcf	3,6	;RP1=0, select bank1
 10539     00F4  0845               	movf	sprintf@fval^(0+128),w
 10540     00F5  1283               	bcf	3,5	;RP0=0, select bank0
 10541     00F6  1303               	bcf	3,6	;RP1=0, select bank0
 10542     00F7  00D5               	movwf	___fltol@f1
 10543     00F8  160A  158A  2619  120A  118A  	fcall	___fltol
 10544     00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10545     00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10546     00FF  0858               	movf	?___fltol+3,w
 10547     0100  1683               	bsf	3,5	;RP0=1, select bank1
 10548     0101  1303               	bcf	3,6	;RP1=0, select bank1
 10549     0102  00C3               	movwf	(sprintf@val+3)^(0+128)
 10550     0103  1283               	bcf	3,5	;RP0=0, select bank0
 10551     0104  1303               	bcf	3,6	;RP1=0, select bank0
 10552     0105  0857               	movf	?___fltol+2,w
 10553     0106  1683               	bsf	3,5	;RP0=1, select bank1
 10554     0107  1303               	bcf	3,6	;RP1=0, select bank1
 10555     0108  00C2               	movwf	(sprintf@val+2)^(0+128)
 10556     0109  1283               	bcf	3,5	;RP0=0, select bank0
 10557     010A  1303               	bcf	3,6	;RP1=0, select bank0
 10558     010B  0856               	movf	?___fltol+1,w
 10559     010C  1683               	bsf	3,5	;RP0=1, select bank1
 10560     010D  1303               	bcf	3,6	;RP1=0, select bank1
 10561     010E  00C1               	movwf	(sprintf@val+1)^(0+128)
 10562     010F  1283               	bcf	3,5	;RP0=0, select bank0
 10563     0110  1303               	bcf	3,6	;RP1=0, select bank0
 10564     0111  0855               	movf	?___fltol,w
 10565     0112  1683               	bsf	3,5	;RP0=1, select bank1
 10566     0113  1303               	bcf	3,6	;RP1=0, select bank1
 10567     0114  00C0               	movwf	sprintf@val^(0+128)
 10568     0115                     l4061:
 10569                           
 10570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10571     0115  0843               	movf	(sprintf@val+3)^(0+128),w
 10572     0116  00F5               	movwf	___xxtofl@val+3
 10573     0117  0842               	movf	(sprintf@val+2)^(0+128),w
 10574     0118  00F4               	movwf	___xxtofl@val+2
 10575     0119  0841               	movf	(sprintf@val+1)^(0+128),w
 10576     011A  00F3               	movwf	___xxtofl@val+1
 10577     011B  0840               	movf	sprintf@val^(0+128),w
 10578     011C  00F2               	movwf	___xxtofl@val
 10579     011D  3000               	movlw	0
 10580     011E  160A  118A  2165  120A  118A  	fcall	___xxtofl
 10581     0123  0875               	movf	?___xxtofl+3,w
 10582     0124  1683               	bsf	3,5	;RP0=1, select bank1
 10583     0125  1303               	bcf	3,6	;RP1=0, select bank1
 10584     0126  00A3               	movwf	(___flsub@a+3)^(0+128)
 10585     0127  0874               	movf	?___xxtofl+2,w
 10586     0128  00A2               	movwf	(___flsub@a+2)^(0+128)
 10587     0129  0873               	movf	?___xxtofl+1,w
 10588     012A  00A1               	movwf	(___flsub@a+1)^(0+128)
 10589     012B  0872               	movf	?___xxtofl,w
 10590     012C  00A0               	movwf	___flsub@a^(0+128)
 10591     012D  0848               	movf	(sprintf@fval+3)^(0+128),w
 10592     012E  00A7               	movwf	(___flsub@b+3)^(0+128)
 10593     012F  0847               	movf	(sprintf@fval+2)^(0+128),w
 10594     0130  00A6               	movwf	(___flsub@b+2)^(0+128)
 10595     0131  0846               	movf	(sprintf@fval+1)^(0+128),w
 10596     0132  00A5               	movwf	(___flsub@b+1)^(0+128)
 10597     0133  0845               	movf	sprintf@fval^(0+128),w
 10598     0134  00A4               	movwf	___flsub@b^(0+128)
 10599     0135  160A  158A  23E3  120A  118A  	fcall	___flsub
 10600     013A  1683               	bsf	3,5	;RP0=1, select bank1
 10601     013B  1303               	bcf	3,6	;RP1=0, select bank1
 10602     013C  0823               	movf	(?___flsub+3)^(0+128),w
 10603     013D  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10604     013E  0822               	movf	(?___flsub+2)^(0+128),w
 10605     013F  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10606     0140  0821               	movf	(?___flsub+1)^(0+128),w
 10607     0141  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10608     0142  0820               	movf	?___flsub^(0+128),w
 10609     0143  00C5               	movwf	sprintf@fval^(0+128)
 10610     0144                     l4063:
 10611                           
 10612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10613     0144  01BA               	clrf	sprintf@eexp^(0+128)
 10614     0145  01BB               	clrf	(sprintf@eexp+1)^(0+128)
 10615     0146                     l4065:
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10618     0146  01CB               	clrf	sprintf@c^(0+128)
 10619     0147  0ACB               	incf	sprintf@c^(0+128),f
 10620     0148                     l4071:
 10621                           
 10622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10623     0148  084B               	movf	sprintf@c^(0+128),w
 10624     0149  1283               	bcf	3,5	;RP0=0, select bank0
 10625     014A  1303               	bcf	3,6	;RP1=0, select bank0
 10626     014B  00EA               	movwf	??_sprintf
 10627     014C  3001               	movlw	1
 10628     014D                     u6205:
 10629     014D  1003               	clrc
 10630     014E  0DEA               	rlf	??_sprintf,f
 10631     014F  3EFF               	addlw	-1
 10632     0150  1D03               	skipz
 10633     0151  294D               	goto	u6205
 10634     0152  1003               	clrc
 10635     0153  0D6A               	rlf	??_sprintf,w
 10636     0154  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10637     0155  0084               	movwf	4
 10638     0156  160A  118A  200A  120A  118A  	fcall	stringdir
 10639     015B  00EB               	movwf	??_sprintf+1
 10640     015C  160A  118A  200A  120A  118A  	fcall	stringdir
 10641     0161  00EC               	movwf	??_sprintf+2
 10642     0162  160A  118A  200A  120A  118A  	fcall	stringdir
 10643     0167  00ED               	movwf	??_sprintf+3
 10644     0168  160A  118A  200A  120A  118A  	fcall	stringdir
 10645     016D  00EE               	movwf	??_sprintf+4
 10646     016E  086E               	movf	??_sprintf+4,w
 10647     016F  1683               	bsf	3,5	;RP0=1, select bank1
 10648     0170  1303               	bcf	3,6	;RP1=0, select bank1
 10649     0171  0243               	subwf	(sprintf@val+3)^(0+128),w
 10650     0172  1D03               	skipz
 10651     0173  298A               	goto	u6215
 10652     0174  1283               	bcf	3,5	;RP0=0, select bank0
 10653     0175  1303               	bcf	3,6	;RP1=0, select bank0
 10654     0176  086D               	movf	??_sprintf+3,w
 10655     0177  1683               	bsf	3,5	;RP0=1, select bank1
 10656     0178  1303               	bcf	3,6	;RP1=0, select bank1
 10657     0179  0242               	subwf	(sprintf@val+2)^(0+128),w
 10658     017A  1D03               	skipz
 10659     017B  298A               	goto	u6215
 10660     017C  1283               	bcf	3,5	;RP0=0, select bank0
 10661     017D  1303               	bcf	3,6	;RP1=0, select bank0
 10662     017E  086C               	movf	??_sprintf+2,w
 10663     017F  1683               	bsf	3,5	;RP0=1, select bank1
 10664     0180  1303               	bcf	3,6	;RP1=0, select bank1
 10665     0181  0241               	subwf	(sprintf@val+1)^(0+128),w
 10666     0182  1D03               	skipz
 10667     0183  298A               	goto	u6215
 10668     0184  1283               	bcf	3,5	;RP0=0, select bank0
 10669     0185  1303               	bcf	3,6	;RP1=0, select bank0
 10670     0186  086B               	movf	??_sprintf+1,w
 10671     0187  1683               	bsf	3,5	;RP0=1, select bank1
 10672     0188  1303               	bcf	3,6	;RP1=0, select bank1
 10673     0189  0240               	subwf	sprintf@val^(0+128),w
 10674     018A                     u6215:
 10675     018A  1803               	skipnc
 10676     018B  298D               	goto	u6211
 10677     018C  298E               	goto	u6210
 10678     018D                     u6211:
 10679     018D  298F               	goto	l4075
 10680     018E                     u6210:
 10681     018E  299D               	goto	l4077
 10682     018F                     l4075:
 10683     018F  3001               	movlw	1
 10684     0190  1283               	bcf	3,5	;RP0=0, select bank0
 10685     0191  1303               	bcf	3,6	;RP1=0, select bank0
 10686     0192  00EA               	movwf	??_sprintf
 10687     0193  086A               	movf	??_sprintf,w
 10688     0194  1683               	bsf	3,5	;RP0=1, select bank1
 10689     0195  1303               	bcf	3,6	;RP1=0, select bank1
 10690     0196  07CB               	addwf	sprintf@c^(0+128),f
 10691     0197  300A               	movlw	10
 10692     0198  064B               	xorwf	sprintf@c^(0+128),w
 10693     0199  1D03               	btfss	3,2
 10694     019A  299C               	goto	u6221
 10695     019B  299D               	goto	u6220
 10696     019C                     u6221:
 10697     019C  2948               	goto	l4071
 10698     019D                     u6220:
 10699     019D                     l4077:
 10700                           
 10701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
 10702     019D  3003               	movlw	3
 10703     019E  0538               	andwf	sprintf@flag^(0+128),w
 10704     019F  1283               	bcf	3,5	;RP0=0, select bank0
 10705     01A0  1303               	bcf	3,6	;RP1=0, select bank0
 10706     01A1  00EA               	movwf	??_sprintf
 10707     01A2  3000               	movlw	0
 10708     01A3  1683               	bsf	3,5	;RP0=1, select bank1
 10709     01A4  1303               	bcf	3,6	;RP1=0, select bank1
 10710     01A5  0539               	andwf	(sprintf@flag+1)^(0+128),w
 10711     01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10712     01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10713     01A8  00EB               	movwf	??_sprintf+1
 10714     01A9  086A               	movf	??_sprintf,w
 10715     01AA  046B               	iorwf	??_sprintf+1,w
 10716     01AB  1903               	btfsc	3,2
 10717     01AC  29AE               	goto	u6231
 10718     01AD  29AF               	goto	u6230
 10719     01AE                     u6231:
 10720     01AE  2A4B               	goto	l404
 10721     01AF                     u6230:
 10722     01AF                     l4079:
 10723                           
 10724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10725     01AF  1683               	bsf	3,5	;RP0=1, select bank1
 10726     01B0  1303               	bcf	3,6	;RP1=0, select bank1
 10727     01B1  0844               	movf	sprintf@sp^(0+128),w
 10728     01B2  0084               	movwf	4
 10729     01B3  302D               	movlw	45
 10730     01B4  1383               	bcf	3,7	;select IRP bank0
 10731     01B5  0080               	movwf	0
 10732     01B6                     l4081:
 10733     01B6  3001               	movlw	1
 10734     01B7  1283               	bcf	3,5	;RP0=0, select bank0
 10735     01B8  1303               	bcf	3,6	;RP1=0, select bank0
 10736     01B9  00EA               	movwf	??_sprintf
 10737     01BA  086A               	movf	??_sprintf,w
 10738     01BB  1683               	bsf	3,5	;RP0=1, select bank1
 10739     01BC  1303               	bcf	3,6	;RP1=0, select bank1
 10740     01BD  07C4               	addwf	sprintf@sp^(0+128),f
 10741     01BE  2A4B               	goto	l404
 10742     01BF                     l4083:
 10743                           
 10744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10745     01BF  084B               	movf	sprintf@c^(0+128),w
 10746     01C0  1283               	bcf	3,5	;RP0=0, select bank0
 10747     01C1  1303               	bcf	3,6	;RP1=0, select bank0
 10748     01C2  00EA               	movwf	??_sprintf
 10749     01C3  3001               	movlw	1
 10750     01C4                     u6245:
 10751     01C4  1003               	clrc
 10752     01C5  0DEA               	rlf	??_sprintf,f
 10753     01C6  3EFF               	addlw	-1
 10754     01C7  1D03               	skipz
 10755     01C8  29C4               	goto	u6245
 10756     01C9  1003               	clrc
 10757     01CA  0D6A               	rlf	??_sprintf,w
 10758     01CB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10759     01CC  0084               	movwf	4
 10760     01CD  160A  118A  200A  120A  118A  	fcall	stringdir
 10761     01D2  00F2               	movwf	___lldiv@divisor
 10762     01D3  160A  118A  200A  120A  118A  	fcall	stringdir
 10763     01D8  00F3               	movwf	___lldiv@divisor+1
 10764     01D9  160A  118A  200A  120A  118A  	fcall	stringdir
 10765     01DE  00F4               	movwf	___lldiv@divisor+2
 10766     01DF  160A  118A  200A  120A  118A  	fcall	stringdir
 10767     01E4  00F5               	movwf	___lldiv@divisor+3
 10768     01E5  1683               	bsf	3,5	;RP0=1, select bank1
 10769     01E6  1303               	bcf	3,6	;RP1=0, select bank1
 10770     01E7  0843               	movf	(sprintf@val+3)^(0+128),w
 10771     01E8  00F9               	movwf	___lldiv@dividend+3
 10772     01E9  0842               	movf	(sprintf@val+2)^(0+128),w
 10773     01EA  00F8               	movwf	___lldiv@dividend+2
 10774     01EB  0841               	movf	(sprintf@val+1)^(0+128),w
 10775     01EC  00F7               	movwf	___lldiv@dividend+1
 10776     01ED  0840               	movf	sprintf@val^(0+128),w
 10777     01EE  00F6               	movwf	___lldiv@dividend
 10778     01EF  160A  158A  2548  120A  118A  	fcall	___lldiv
 10779     01F4  0875               	movf	?___lldiv+3,w
 10780     01F5  1683               	bsf	3,5	;RP0=1, select bank1
 10781     01F6  1303               	bcf	3,6	;RP1=0, select bank1
 10782     01F7  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10783     01F8  0874               	movf	?___lldiv+2,w
 10784     01F9  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10785     01FA  0873               	movf	?___lldiv+1,w
 10786     01FB  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10787     01FC  0872               	movf	?___lldiv,w
 10788     01FD  00BC               	movwf	sprintf@tmpval^(0+128)
 10789     01FE                     l4085:
 10790                           
 10791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10792     01FE  3000               	movlw	0
 10793     01FF  1283               	bcf	3,5	;RP0=0, select bank0
 10794     0200  1303               	bcf	3,6	;RP1=0, select bank0
 10795     0201  00A8               	movwf	___llmod@divisor+3
 10796     0202  3000               	movlw	0
 10797     0203  00A7               	movwf	___llmod@divisor+2
 10798     0204  3000               	movlw	0
 10799     0205  00A6               	movwf	___llmod@divisor+1
 10800     0206  300A               	movlw	10
 10801     0207  00A5               	movwf	___llmod@divisor
 10802     0208  1683               	bsf	3,5	;RP0=1, select bank1
 10803     0209  1303               	bcf	3,6	;RP1=0, select bank1
 10804     020A  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 10805     020B  1283               	bcf	3,5	;RP0=0, select bank0
 10806     020C  1303               	bcf	3,6	;RP1=0, select bank0
 10807     020D  00AC               	movwf	___llmod@dividend+3
 10808     020E  1683               	bsf	3,5	;RP0=1, select bank1
 10809     020F  1303               	bcf	3,6	;RP1=0, select bank1
 10810     0210  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 10811     0211  1283               	bcf	3,5	;RP0=0, select bank0
 10812     0212  1303               	bcf	3,6	;RP1=0, select bank0
 10813     0213  00AB               	movwf	___llmod@dividend+2
 10814     0214  1683               	bsf	3,5	;RP0=1, select bank1
 10815     0215  1303               	bcf	3,6	;RP1=0, select bank1
 10816     0216  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 10817     0217  1283               	bcf	3,5	;RP0=0, select bank0
 10818     0218  1303               	bcf	3,6	;RP1=0, select bank0
 10819     0219  00AA               	movwf	___llmod@dividend+1
 10820     021A  1683               	bsf	3,5	;RP0=1, select bank1
 10821     021B  1303               	bcf	3,6	;RP1=0, select bank1
 10822     021C  083C               	movf	sprintf@tmpval^(0+128),w
 10823     021D  1283               	bcf	3,5	;RP0=0, select bank0
 10824     021E  1303               	bcf	3,6	;RP1=0, select bank0
 10825     021F  00A9               	movwf	___llmod@dividend
 10826     0220  160A  158A  2433  120A  118A  	fcall	___llmod
 10827     0225  1283               	bcf	3,5	;RP0=0, select bank0
 10828     0226  1303               	bcf	3,6	;RP1=0, select bank0
 10829     0227  0828               	movf	?___llmod+3,w
 10830     0228  1683               	bsf	3,5	;RP0=1, select bank1
 10831     0229  1303               	bcf	3,6	;RP1=0, select bank1
 10832     022A  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 10833     022B  1283               	bcf	3,5	;RP0=0, select bank0
 10834     022C  1303               	bcf	3,6	;RP1=0, select bank0
 10835     022D  0827               	movf	?___llmod+2,w
 10836     022E  1683               	bsf	3,5	;RP0=1, select bank1
 10837     022F  1303               	bcf	3,6	;RP1=0, select bank1
 10838     0230  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 10839     0231  1283               	bcf	3,5	;RP0=0, select bank0
 10840     0232  1303               	bcf	3,6	;RP1=0, select bank0
 10841     0233  0826               	movf	?___llmod+1,w
 10842     0234  1683               	bsf	3,5	;RP0=1, select bank1
 10843     0235  1303               	bcf	3,6	;RP1=0, select bank1
 10844     0236  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 10845     0237  1283               	bcf	3,5	;RP0=0, select bank0
 10846     0238  1303               	bcf	3,6	;RP1=0, select bank0
 10847     0239  0825               	movf	?___llmod,w
 10848     023A  1683               	bsf	3,5	;RP0=1, select bank1
 10849     023B  1303               	bcf	3,6	;RP1=0, select bank1
 10850     023C  00BC               	movwf	sprintf@tmpval^(0+128)
 10851     023D                     l4087:
 10852                           
 10853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10854     023D  0844               	movf	sprintf@sp^(0+128),w
 10855     023E  0084               	movwf	4
 10856     023F  083C               	movf	sprintf@tmpval^(0+128),w
 10857     0240  3E30               	addlw	48
 10858     0241  1383               	bcf	3,7	;select IRP bank0
 10859     0242  0080               	movwf	0
 10860     0243  3001               	movlw	1
 10861     0244  1283               	bcf	3,5	;RP0=0, select bank0
 10862     0245  1303               	bcf	3,6	;RP1=0, select bank0
 10863     0246  00EA               	movwf	??_sprintf
 10864     0247  086A               	movf	??_sprintf,w
 10865     0248  1683               	bsf	3,5	;RP0=1, select bank1
 10866     0249  1303               	bcf	3,6	;RP1=0, select bank1
 10867     024A  07C4               	addwf	sprintf@sp^(0+128),f
 10868     024B                     l404:	
 10869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
 10870                           
 10871                           
 10872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10873     024B  3001               	movlw	1
 10874     024C  1683               	bsf	3,5	;RP0=1, select bank1
 10875     024D  1303               	bcf	3,6	;RP1=0, select bank1
 10876     024E  02CB               	subwf	sprintf@c^(0+128),f
 10877     024F  0A4B               	incf	sprintf@c^(0+128),w
 10878     0250  1D03               	btfss	3,2
 10879     0251  2A53               	goto	u6251
 10880     0252  2A54               	goto	u6250
 10881     0253                     u6251:
 10882     0253  29BF               	goto	l4083
 10883     0254                     u6250:
 10884     0254  2A6A               	goto	l4095
 10885     0255                     l4089:
 10886                           
 10887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10888     0255  1683               	bsf	3,5	;RP0=1, select bank1
 10889     0256  1303               	bcf	3,6	;RP1=0, select bank1
 10890     0257  0844               	movf	sprintf@sp^(0+128),w
 10891     0258  0084               	movwf	4
 10892     0259  3030               	movlw	48
 10893     025A  1383               	bcf	3,7	;select IRP bank0
 10894     025B  0080               	movwf	0
 10895     025C                     l4091:
 10896     025C  3001               	movlw	1
 10897     025D  1283               	bcf	3,5	;RP0=0, select bank0
 10898     025E  1303               	bcf	3,6	;RP1=0, select bank0
 10899     025F  00EA               	movwf	??_sprintf
 10900     0260  086A               	movf	??_sprintf,w
 10901     0261  1683               	bsf	3,5	;RP0=1, select bank1
 10902     0262  1303               	bcf	3,6	;RP1=0, select bank1
 10903     0263  07C4               	addwf	sprintf@sp^(0+128),f
 10904     0264                     l4093:
 10905                           
 10906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10907     0264  30FF               	movlw	255
 10908     0265  07BA               	addwf	sprintf@eexp^(0+128),f
 10909     0266  1803               	skipnc
 10910     0267  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
 10911     0268  30FF               	movlw	255
 10912     0269  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
 10913     026A                     l4095:
 10914                           
 10915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10916     026A  083B               	movf	(sprintf@eexp+1)^(0+128),w
 10917     026B  3A80               	xorlw	128
 10918     026C  00FF               	movwf	btemp+1
 10919     026D  3080               	movlw	128
 10920     026E  027F               	subwf	btemp+1,w
 10921     026F  1D03               	skipz
 10922     0270  2A73               	goto	u6265
 10923     0271  3001               	movlw	1
 10924     0272  023A               	subwf	sprintf@eexp^(0+128),w
 10925     0273                     u6265:
 10926     0273  1803               	skipnc
 10927     0274  2A76               	goto	u6261
 10928     0275  2A77               	goto	u6260
 10929     0276                     u6261:
 10930     0276  2A55               	goto	l4089
 10931     0277                     u6260:
 10932     0277                     l4097:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10935     0277  1683               	bsf	3,5	;RP0=1, select bank1
 10936     0278  1303               	bcf	3,6	;RP1=0, select bank1
 10937     0279  084A               	movf	(sprintf@prec+1)^(0+128),w
 10938     027A  3A80               	xorlw	128
 10939     027B  00FF               	movwf	btemp+1
 10940     027C  3080               	movlw	128
 10941     027D  027F               	subwf	btemp+1,w
 10942     027E  1D03               	skipz
 10943     027F  2A82               	goto	u6275
 10944     0280  3009               	movlw	9
 10945     0281  0249               	subwf	sprintf@prec^(0+128),w
 10946     0282                     u6275:
 10947     0282  1C03               	skipc
 10948     0283  2A85               	goto	u6271
 10949     0284  2A86               	goto	u6270
 10950     0285                     u6271:
 10951     0285  2A8B               	goto	l4101
 10952     0286                     u6270:
 10953     0286                     l4099:
 10954                           
 10955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10956     0286  3008               	movlw	8
 10957     0287  1683               	bsf	3,5	;RP0=1, select bank1
 10958     0288  1303               	bcf	3,6	;RP1=0, select bank1
 10959     0289  00CB               	movwf	sprintf@c^(0+128)
 10960     028A  2A8F               	goto	l411
 10961     028B                     l4101:
 10962                           
 10963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10964     028B  1683               	bsf	3,5	;RP0=1, select bank1
 10965     028C  1303               	bcf	3,6	;RP1=0, select bank1
 10966     028D  0849               	movf	sprintf@prec^(0+128),w
 10967     028E  00CB               	movwf	sprintf@c^(0+128)
 10968     028F                     l411:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10971     028F  084B               	movf	sprintf@c^(0+128),w
 10972     0290  1283               	bcf	3,5	;RP0=0, select bank0
 10973     0291  1303               	bcf	3,6	;RP1=0, select bank0
 10974     0292  00EA               	movwf	??_sprintf
 10975     0293  01EB               	clrf	??_sprintf+1
 10976     0294  086A               	movf	??_sprintf,w
 10977     0295  1683               	bsf	3,5	;RP0=1, select bank1
 10978     0296  1303               	bcf	3,6	;RP1=0, select bank1
 10979     0297  02C9               	subwf	sprintf@prec^(0+128),f
 10980     0298  1283               	bcf	3,5	;RP0=0, select bank0
 10981     0299  1303               	bcf	3,6	;RP1=0, select bank0
 10982     029A  086B               	movf	??_sprintf+1,w
 10983     029B  1683               	bsf	3,5	;RP0=1, select bank1
 10984     029C  1303               	bcf	3,6	;RP1=0, select bank1
 10985     029D  1C03               	skipc
 10986     029E  03CA               	decf	(sprintf@prec+1)^(0+128),f
 10987     029F  02CA               	subwf	(sprintf@prec+1)^(0+128),f
 10988     02A0                     l4103:
 10989                           
 10990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10991     02A0  084B               	movf	sprintf@c^(0+128),w
 10992     02A1  1903               	btfsc	3,2
 10993     02A2  2AA4               	goto	u6281
 10994     02A3  2AA5               	goto	u6280
 10995     02A4                     u6281:
 10996     02A4  2AB2               	goto	l4109
 10997     02A5                     u6280:
 10998     02A5                     l4105:
 10999                           
 11000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11001     02A5  0844               	movf	sprintf@sp^(0+128),w
 11002     02A6  0084               	movwf	4
 11003     02A7  302E               	movlw	46
 11004     02A8  1383               	bcf	3,7	;select IRP bank0
 11005     02A9  0080               	movwf	0
 11006     02AA                     l4107:
 11007     02AA  3001               	movlw	1
 11008     02AB  1283               	bcf	3,5	;RP0=0, select bank0
 11009     02AC  1303               	bcf	3,6	;RP1=0, select bank0
 11010     02AD  00EA               	movwf	??_sprintf
 11011     02AE  086A               	movf	??_sprintf,w
 11012     02AF  1683               	bsf	3,5	;RP0=1, select bank1
 11013     02B0  1303               	bcf	3,6	;RP1=0, select bank1
 11014     02B1  07C4               	addwf	sprintf@sp^(0+128),f
 11015     02B2                     l4109:
 11016                           
 11017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11018     02B2  084B               	movf	sprintf@c^(0+128),w
 11019     02B3  120A  158A  249D  120A  118A  	fcall	_scale
 11020     02B8  1283               	bcf	3,5	;RP0=0, select bank0
 11021     02B9  1303               	bcf	3,6	;RP1=0, select bank0
 11022     02BA  0845               	movf	?_scale+3,w
 11023     02BB  1683               	bsf	3,5	;RP0=1, select bank1
 11024     02BC  1303               	bcf	3,6	;RP1=0, select bank1
 11025     02BD  00B6               	movwf	(_sprintf$1273+3)^(0+128)
 11026     02BE  1283               	bcf	3,5	;RP0=0, select bank0
 11027     02BF  1303               	bcf	3,6	;RP1=0, select bank0
 11028     02C0  0844               	movf	?_scale+2,w
 11029     02C1  1683               	bsf	3,5	;RP0=1, select bank1
 11030     02C2  1303               	bcf	3,6	;RP1=0, select bank1
 11031     02C3  00B5               	movwf	(_sprintf$1273+2)^(0+128)
 11032     02C4  1283               	bcf	3,5	;RP0=0, select bank0
 11033     02C5  1303               	bcf	3,6	;RP1=0, select bank0
 11034     02C6  0843               	movf	?_scale+1,w
 11035     02C7  1683               	bsf	3,5	;RP0=1, select bank1
 11036     02C8  1303               	bcf	3,6	;RP1=0, select bank1
 11037     02C9  00B4               	movwf	(_sprintf$1273+1)^(0+128)
 11038     02CA  1283               	bcf	3,5	;RP0=0, select bank0
 11039     02CB  1303               	bcf	3,6	;RP1=0, select bank0
 11040     02CC  0842               	movf	?_scale,w
 11041     02CD  1683               	bsf	3,5	;RP0=1, select bank1
 11042     02CE  1303               	bcf	3,6	;RP1=0, select bank1
 11043     02CF  00B3               	movwf	_sprintf$1273^(0+128)
 11044     02D0                     l4111:
 11045                           
 11046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11047     02D0  0836               	movf	(_sprintf$1273+3)^(0+128),w
 11048     02D1  1283               	bcf	3,5	;RP0=0, select bank0
 11049     02D2  1303               	bcf	3,6	;RP1=0, select bank0
 11050     02D3  00AF               	movwf	___flmul@a+3
 11051     02D4  1683               	bsf	3,5	;RP0=1, select bank1
 11052     02D5  1303               	bcf	3,6	;RP1=0, select bank1
 11053     02D6  0835               	movf	(_sprintf$1273+2)^(0+128),w
 11054     02D7  1283               	bcf	3,5	;RP0=0, select bank0
 11055     02D8  1303               	bcf	3,6	;RP1=0, select bank0
 11056     02D9  00AE               	movwf	___flmul@a+2
 11057     02DA  1683               	bsf	3,5	;RP0=1, select bank1
 11058     02DB  1303               	bcf	3,6	;RP1=0, select bank1
 11059     02DC  0834               	movf	(_sprintf$1273+1)^(0+128),w
 11060     02DD  1283               	bcf	3,5	;RP0=0, select bank0
 11061     02DE  1303               	bcf	3,6	;RP1=0, select bank0
 11062     02DF  00AD               	movwf	___flmul@a+1
 11063     02E0  1683               	bsf	3,5	;RP0=1, select bank1
 11064     02E1  1303               	bcf	3,6	;RP1=0, select bank1
 11065     02E2  0833               	movf	_sprintf$1273^(0+128),w
 11066     02E3  1283               	bcf	3,5	;RP0=0, select bank0
 11067     02E4  1303               	bcf	3,6	;RP1=0, select bank0
 11068     02E5  00AC               	movwf	___flmul@a
 11069     02E6  1683               	bsf	3,5	;RP0=1, select bank1
 11070     02E7  1303               	bcf	3,6	;RP1=0, select bank1
 11071     02E8  0848               	movf	(sprintf@fval+3)^(0+128),w
 11072     02E9  1283               	bcf	3,5	;RP0=0, select bank0
 11073     02EA  1303               	bcf	3,6	;RP1=0, select bank0
 11074     02EB  00AB               	movwf	___flmul@b+3
 11075     02EC  1683               	bsf	3,5	;RP0=1, select bank1
 11076     02ED  1303               	bcf	3,6	;RP1=0, select bank1
 11077     02EE  0847               	movf	(sprintf@fval+2)^(0+128),w
 11078     02EF  1283               	bcf	3,5	;RP0=0, select bank0
 11079     02F0  1303               	bcf	3,6	;RP1=0, select bank0
 11080     02F1  00AA               	movwf	___flmul@b+2
 11081     02F2  1683               	bsf	3,5	;RP0=1, select bank1
 11082     02F3  1303               	bcf	3,6	;RP1=0, select bank1
 11083     02F4  0846               	movf	(sprintf@fval+1)^(0+128),w
 11084     02F5  1283               	bcf	3,5	;RP0=0, select bank0
 11085     02F6  1303               	bcf	3,6	;RP1=0, select bank0
 11086     02F7  00A9               	movwf	___flmul@b+1
 11087     02F8  1683               	bsf	3,5	;RP0=1, select bank1
 11088     02F9  1303               	bcf	3,6	;RP1=0, select bank1
 11089     02FA  0845               	movf	sprintf@fval^(0+128),w
 11090     02FB  1283               	bcf	3,5	;RP0=0, select bank0
 11091     02FC  1303               	bcf	3,6	;RP1=0, select bank0
 11092     02FD  00A8               	movwf	___flmul@b
 11093     02FE  120A  158A  2158  120A  118A  	fcall	___flmul
 11094     0303  1283               	bcf	3,5	;RP0=0, select bank0
 11095     0304  1303               	bcf	3,6	;RP1=0, select bank0
 11096     0305  082B               	movf	?___flmul+3,w
 11097     0306  00D8               	movwf	___fltol@f1+3
 11098     0307  082A               	movf	?___flmul+2,w
 11099     0308  00D7               	movwf	___fltol@f1+2
 11100     0309  0829               	movf	?___flmul+1,w
 11101     030A  00D6               	movwf	___fltol@f1+1
 11102     030B  0828               	movf	?___flmul,w
 11103     030C  00D5               	movwf	___fltol@f1
 11104     030D  160A  158A  2619  120A  118A  	fcall	___fltol
 11105     0312  1283               	bcf	3,5	;RP0=0, select bank0
 11106     0313  1303               	bcf	3,6	;RP1=0, select bank0
 11107     0314  0858               	movf	?___fltol+3,w
 11108     0315  1683               	bsf	3,5	;RP0=1, select bank1
 11109     0316  1303               	bcf	3,6	;RP1=0, select bank1
 11110     0317  00C3               	movwf	(sprintf@val+3)^(0+128)
 11111     0318  1283               	bcf	3,5	;RP0=0, select bank0
 11112     0319  1303               	bcf	3,6	;RP1=0, select bank0
 11113     031A  0857               	movf	?___fltol+2,w
 11114     031B  1683               	bsf	3,5	;RP0=1, select bank1
 11115     031C  1303               	bcf	3,6	;RP1=0, select bank1
 11116     031D  00C2               	movwf	(sprintf@val+2)^(0+128)
 11117     031E  1283               	bcf	3,5	;RP0=0, select bank0
 11118     031F  1303               	bcf	3,6	;RP1=0, select bank0
 11119     0320  0856               	movf	?___fltol+1,w
 11120     0321  1683               	bsf	3,5	;RP0=1, select bank1
 11121     0322  1303               	bcf	3,6	;RP1=0, select bank1
 11122     0323  00C1               	movwf	(sprintf@val+1)^(0+128)
 11123     0324  1283               	bcf	3,5	;RP0=0, select bank0
 11124     0325  1303               	bcf	3,6	;RP1=0, select bank0
 11125     0326  0855               	movf	?___fltol,w
 11126     0327  1683               	bsf	3,5	;RP0=1, select bank1
 11127     0328  1303               	bcf	3,6	;RP1=0, select bank1
 11128     0329  00C0               	movwf	sprintf@val^(0+128)
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11131     032A  2C12               	goto	l4121
 11132     032B                     l4113:
 11133                           
 11134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11135     032B  084B               	movf	sprintf@c^(0+128),w
 11136     032C  1283               	bcf	3,5	;RP0=0, select bank0
 11137     032D  1303               	bcf	3,6	;RP1=0, select bank0
 11138     032E  00EA               	movwf	??_sprintf
 11139     032F  3001               	movlw	1
 11140     0330                     u6295:
 11141     0330  1003               	clrc
 11142     0331  0DEA               	rlf	??_sprintf,f
 11143     0332  3EFF               	addlw	-1
 11144     0333  1D03               	skipz
 11145     0334  2B30               	goto	u6295
 11146     0335  1003               	clrc
 11147     0336  0D6A               	rlf	??_sprintf,w
 11148     0337  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11149     0338  0084               	movwf	4
 11150     0339  160A  118A  200A  120A  118A  	fcall	stringdir
 11151     033E  00F2               	movwf	___lldiv@divisor
 11152     033F  160A  118A  200A  120A  118A  	fcall	stringdir
 11153     0344  00F3               	movwf	___lldiv@divisor+1
 11154     0345  160A  118A  200A  120A  118A  	fcall	stringdir
 11155     034A  00F4               	movwf	___lldiv@divisor+2
 11156     034B  160A  118A  200A  120A  118A  	fcall	stringdir
 11157     0350  00F5               	movwf	___lldiv@divisor+3
 11158     0351  1683               	bsf	3,5	;RP0=1, select bank1
 11159     0352  1303               	bcf	3,6	;RP1=0, select bank1
 11160     0353  0843               	movf	(sprintf@val+3)^(0+128),w
 11161     0354  00F9               	movwf	___lldiv@dividend+3
 11162     0355  0842               	movf	(sprintf@val+2)^(0+128),w
 11163     0356  00F8               	movwf	___lldiv@dividend+2
 11164     0357  0841               	movf	(sprintf@val+1)^(0+128),w
 11165     0358  00F7               	movwf	___lldiv@dividend+1
 11166     0359  0840               	movf	sprintf@val^(0+128),w
 11167     035A  00F6               	movwf	___lldiv@dividend
 11168     035B  160A  158A  2548  120A  118A  	fcall	___lldiv
 11169     0360  0875               	movf	?___lldiv+3,w
 11170     0361  1683               	bsf	3,5	;RP0=1, select bank1
 11171     0362  1303               	bcf	3,6	;RP1=0, select bank1
 11172     0363  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 11173     0364  0874               	movf	?___lldiv+2,w
 11174     0365  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 11175     0366  0873               	movf	?___lldiv+1,w
 11176     0367  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 11177     0368  0872               	movf	?___lldiv,w
 11178     0369  00BC               	movwf	sprintf@tmpval^(0+128)
 11179     036A                     l4115:
 11180                           
 11181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11182     036A  3000               	movlw	0
 11183     036B  1283               	bcf	3,5	;RP0=0, select bank0
 11184     036C  1303               	bcf	3,6	;RP1=0, select bank0
 11185     036D  00A8               	movwf	___llmod@divisor+3
 11186     036E  3000               	movlw	0
 11187     036F  00A7               	movwf	___llmod@divisor+2
 11188     0370  3000               	movlw	0
 11189     0371  00A6               	movwf	___llmod@divisor+1
 11190     0372  300A               	movlw	10
 11191     0373  00A5               	movwf	___llmod@divisor
 11192     0374  1683               	bsf	3,5	;RP0=1, select bank1
 11193     0375  1303               	bcf	3,6	;RP1=0, select bank1
 11194     0376  083F               	movf	(sprintf@tmpval+3)^(0+128),w
 11195     0377  1283               	bcf	3,5	;RP0=0, select bank0
 11196     0378  1303               	bcf	3,6	;RP1=0, select bank0
 11197     0379  00AC               	movwf	___llmod@dividend+3
 11198     037A  1683               	bsf	3,5	;RP0=1, select bank1
 11199     037B  1303               	bcf	3,6	;RP1=0, select bank1
 11200     037C  083E               	movf	(sprintf@tmpval+2)^(0+128),w
 11201     037D  1283               	bcf	3,5	;RP0=0, select bank0
 11202     037E  1303               	bcf	3,6	;RP1=0, select bank0
 11203     037F  00AB               	movwf	___llmod@dividend+2
 11204     0380  1683               	bsf	3,5	;RP0=1, select bank1
 11205     0381  1303               	bcf	3,6	;RP1=0, select bank1
 11206     0382  083D               	movf	(sprintf@tmpval+1)^(0+128),w
 11207     0383  1283               	bcf	3,5	;RP0=0, select bank0
 11208     0384  1303               	bcf	3,6	;RP1=0, select bank0
 11209     0385  00AA               	movwf	___llmod@dividend+1
 11210     0386  1683               	bsf	3,5	;RP0=1, select bank1
 11211     0387  1303               	bcf	3,6	;RP1=0, select bank1
 11212     0388  083C               	movf	sprintf@tmpval^(0+128),w
 11213     0389  1283               	bcf	3,5	;RP0=0, select bank0
 11214     038A  1303               	bcf	3,6	;RP1=0, select bank0
 11215     038B  00A9               	movwf	___llmod@dividend
 11216     038C  160A  158A  2433  120A  118A  	fcall	___llmod
 11217     0391  1283               	bcf	3,5	;RP0=0, select bank0
 11218     0392  1303               	bcf	3,6	;RP1=0, select bank0
 11219     0393  0828               	movf	?___llmod+3,w
 11220     0394  1683               	bsf	3,5	;RP0=1, select bank1
 11221     0395  1303               	bcf	3,6	;RP1=0, select bank1
 11222     0396  00BF               	movwf	(sprintf@tmpval+3)^(0+128)
 11223     0397  1283               	bcf	3,5	;RP0=0, select bank0
 11224     0398  1303               	bcf	3,6	;RP1=0, select bank0
 11225     0399  0827               	movf	?___llmod+2,w
 11226     039A  1683               	bsf	3,5	;RP0=1, select bank1
 11227     039B  1303               	bcf	3,6	;RP1=0, select bank1
 11228     039C  00BE               	movwf	(sprintf@tmpval+2)^(0+128)
 11229     039D  1283               	bcf	3,5	;RP0=0, select bank0
 11230     039E  1303               	bcf	3,6	;RP1=0, select bank0
 11231     039F  0826               	movf	?___llmod+1,w
 11232     03A0  1683               	bsf	3,5	;RP0=1, select bank1
 11233     03A1  1303               	bcf	3,6	;RP1=0, select bank1
 11234     03A2  00BD               	movwf	(sprintf@tmpval+1)^(0+128)
 11235     03A3  1283               	bcf	3,5	;RP0=0, select bank0
 11236     03A4  1303               	bcf	3,6	;RP1=0, select bank0
 11237     03A5  0825               	movf	?___llmod,w
 11238     03A6  1683               	bsf	3,5	;RP0=1, select bank1
 11239     03A7  1303               	bcf	3,6	;RP1=0, select bank1
 11240     03A8  00BC               	movwf	sprintf@tmpval^(0+128)
 11241     03A9                     l4117:
 11242                           
 11243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11244     03A9  0844               	movf	sprintf@sp^(0+128),w
 11245     03AA  0084               	movwf	4
 11246     03AB  083C               	movf	sprintf@tmpval^(0+128),w
 11247     03AC  3E30               	addlw	48
 11248     03AD  1383               	bcf	3,7	;select IRP bank0
 11249     03AE  0080               	movwf	0
 11250     03AF  3001               	movlw	1
 11251     03B0  1283               	bcf	3,5	;RP0=0, select bank0
 11252     03B1  1303               	bcf	3,6	;RP1=0, select bank0
 11253     03B2  00EA               	movwf	??_sprintf
 11254     03B3  086A               	movf	??_sprintf,w
 11255     03B4  1683               	bsf	3,5	;RP0=1, select bank1
 11256     03B5  1303               	bcf	3,6	;RP1=0, select bank1
 11257     03B6  07C4               	addwf	sprintf@sp^(0+128),f
 11258     03B7                     l4119:
 11259                           
 11260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11261     03B7  084B               	movf	sprintf@c^(0+128),w
 11262     03B8  1283               	bcf	3,5	;RP0=0, select bank0
 11263     03B9  1303               	bcf	3,6	;RP1=0, select bank0
 11264     03BA  00EA               	movwf	??_sprintf
 11265     03BB  3001               	movlw	1
 11266     03BC                     u6305:
 11267     03BC  1003               	clrc
 11268     03BD  0DEA               	rlf	??_sprintf,f
 11269     03BE  3EFF               	addlw	-1
 11270     03BF  1D03               	skipz
 11271     03C0  2BBC               	goto	u6305
 11272     03C1  1003               	clrc
 11273     03C2  0D6A               	rlf	??_sprintf,w
 11274     03C3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11275     03C4  0084               	movwf	4
 11276     03C5  160A  118A  200A  120A  118A  	fcall	stringdir
 11277     03CA  00A5               	movwf	___llmod@divisor
 11278     03CB  160A  118A  200A  120A  118A  	fcall	stringdir
 11279     03D0  00A6               	movwf	___llmod@divisor+1
 11280     03D1  160A  118A  200A  120A  118A  	fcall	stringdir
 11281     03D6  00A7               	movwf	___llmod@divisor+2
 11282     03D7  160A  118A  200A  120A  118A  	fcall	stringdir
 11283     03DC  00A8               	movwf	___llmod@divisor+3
 11284     03DD  1683               	bsf	3,5	;RP0=1, select bank1
 11285     03DE  1303               	bcf	3,6	;RP1=0, select bank1
 11286     03DF  0843               	movf	(sprintf@val+3)^(0+128),w
 11287     03E0  1283               	bcf	3,5	;RP0=0, select bank0
 11288     03E1  1303               	bcf	3,6	;RP1=0, select bank0
 11289     03E2  00AC               	movwf	___llmod@dividend+3
 11290     03E3  1683               	bsf	3,5	;RP0=1, select bank1
 11291     03E4  1303               	bcf	3,6	;RP1=0, select bank1
 11292     03E5  0842               	movf	(sprintf@val+2)^(0+128),w
 11293     03E6  1283               	bcf	3,5	;RP0=0, select bank0
 11294     03E7  1303               	bcf	3,6	;RP1=0, select bank0
 11295     03E8  00AB               	movwf	___llmod@dividend+2
 11296     03E9  1683               	bsf	3,5	;RP0=1, select bank1
 11297     03EA  1303               	bcf	3,6	;RP1=0, select bank1
 11298     03EB  0841               	movf	(sprintf@val+1)^(0+128),w
 11299     03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11300     03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11301     03EE  00AA               	movwf	___llmod@dividend+1
 11302     03EF  1683               	bsf	3,5	;RP0=1, select bank1
 11303     03F0  1303               	bcf	3,6	;RP1=0, select bank1
 11304     03F1  0840               	movf	sprintf@val^(0+128),w
 11305     03F2  1283               	bcf	3,5	;RP0=0, select bank0
 11306     03F3  1303               	bcf	3,6	;RP1=0, select bank0
 11307     03F4  00A9               	movwf	___llmod@dividend
 11308     03F5  160A  158A  2433  120A  118A  	fcall	___llmod
 11309     03FA  1283               	bcf	3,5	;RP0=0, select bank0
 11310     03FB  1303               	bcf	3,6	;RP1=0, select bank0
 11311     03FC  0828               	movf	?___llmod+3,w
 11312     03FD  1683               	bsf	3,5	;RP0=1, select bank1
 11313     03FE  1303               	bcf	3,6	;RP1=0, select bank1
 11314     03FF  00C3               	movwf	(sprintf@val+3)^(0+128)
 11315     0400  1283               	bcf	3,5	;RP0=0, select bank0
 11316     0401  1303               	bcf	3,6	;RP1=0, select bank0
 11317     0402  0827               	movf	?___llmod+2,w
 11318     0403  1683               	bsf	3,5	;RP0=1, select bank1
 11319     0404  1303               	bcf	3,6	;RP1=0, select bank1
 11320     0405  00C2               	movwf	(sprintf@val+2)^(0+128)
 11321     0406  1283               	bcf	3,5	;RP0=0, select bank0
 11322     0407  1303               	bcf	3,6	;RP1=0, select bank0
 11323     0408  0826               	movf	?___llmod+1,w
 11324     0409  1683               	bsf	3,5	;RP0=1, select bank1
 11325     040A  1303               	bcf	3,6	;RP1=0, select bank1
 11326     040B  00C1               	movwf	(sprintf@val+1)^(0+128)
 11327     040C  1283               	bcf	3,5	;RP0=0, select bank0
 11328     040D  1303               	bcf	3,6	;RP1=0, select bank0
 11329     040E  0825               	movf	?___llmod,w
 11330     040F  1683               	bsf	3,5	;RP0=1, select bank1
 11331     0410  1303               	bcf	3,6	;RP1=0, select bank1
 11332     0411  00C0               	movwf	sprintf@val^(0+128)
 11333     0412                     l4121:
 11334                           
 11335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11336     0412  3001               	movlw	1
 11337     0413  02CB               	subwf	sprintf@c^(0+128),f
 11338     0414  0A4B               	incf	sprintf@c^(0+128),w
 11339     0415  1D03               	btfss	3,2
 11340     0416  2C18               	goto	u6311
 11341     0417  2C19               	goto	u6310
 11342     0418                     u6311:
 11343     0418  2B2B               	goto	l4113
 11344     0419                     u6310:
 11345     0419  2C2D               	goto	l4129
 11346     041A                     l4123:
 11347                           
 11348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11349     041A  0844               	movf	sprintf@sp^(0+128),w
 11350     041B  0084               	movwf	4
 11351     041C  3030               	movlw	48
 11352     041D  1383               	bcf	3,7	;select IRP bank0
 11353     041E  0080               	movwf	0
 11354     041F                     l4125:
 11355     041F  3001               	movlw	1
 11356     0420  1283               	bcf	3,5	;RP0=0, select bank0
 11357     0421  1303               	bcf	3,6	;RP1=0, select bank0
 11358     0422  00EA               	movwf	??_sprintf
 11359     0423  086A               	movf	??_sprintf,w
 11360     0424  1683               	bsf	3,5	;RP0=1, select bank1
 11361     0425  1303               	bcf	3,6	;RP1=0, select bank1
 11362     0426  07C4               	addwf	sprintf@sp^(0+128),f
 11363     0427                     l4127:
 11364                           
 11365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11366     0427  30FF               	movlw	255
 11367     0428  07C9               	addwf	sprintf@prec^(0+128),f
 11368     0429  1803               	skipnc
 11369     042A  0ACA               	incf	(sprintf@prec+1)^(0+128),f
 11370     042B  30FF               	movlw	255
 11371     042C  07CA               	addwf	(sprintf@prec+1)^(0+128),f
 11372     042D                     l4129:
 11373                           
 11374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11375     042D  0849               	movf	sprintf@prec^(0+128),w
 11376     042E  044A               	iorwf	(sprintf@prec+1)^(0+128),w
 11377     042F  1D03               	btfss	3,2
 11378     0430  2C32               	goto	u6321
 11379     0431  2C33               	goto	u6320
 11380     0432                     u6321:
 11381     0432  2C1A               	goto	l4123
 11382     0433                     u6320:
 11383     0433  2D96               	goto	l4181
 11384     0434                     l4131:
 11385                           
 11386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11387     0434  1683               	bsf	3,5	;RP0=1, select bank1
 11388     0435  1303               	bcf	3,6	;RP1=0, select bank1
 11389     0436  0837               	movf	sprintf@ap^(0+128),w
 11390     0437  0084               	movwf	4
 11391     0438  1383               	bcf	3,7	;select IRP bank0
 11392     0439  0800               	movf	0,w
 11393     043A  1283               	bcf	3,5	;RP0=0, select bank0
 11394     043B  1303               	bcf	3,6	;RP1=0, select bank0
 11395     043C  00EA               	movwf	??_sprintf
 11396     043D  0A84               	incf	4,f
 11397     043E  0800               	movf	0,w
 11398     043F  00EB               	movwf	??_sprintf+1
 11399     0440  086A               	movf	??_sprintf,w
 11400     0441  1683               	bsf	3,5	;RP0=1, select bank1
 11401     0442  1303               	bcf	3,6	;RP1=0, select bank1
 11402     0443  00C0               	movwf	sprintf@val^(0+128)
 11403     0444  1283               	bcf	3,5	;RP0=0, select bank0
 11404     0445  1303               	bcf	3,6	;RP1=0, select bank0
 11405     0446  086B               	movf	??_sprintf+1,w
 11406     0447  1683               	bsf	3,5	;RP0=1, select bank1
 11407     0448  1303               	bcf	3,6	;RP1=0, select bank1
 11408     0449  00C1               	movwf	(sprintf@val+1)^(0+128)
 11409     044A  3000               	movlw	0
 11410     044B  1BC1               	btfsc	(sprintf@val+1)^(0+128),7
 11411     044C  30FF               	movlw	255
 11412     044D  00C2               	movwf	(sprintf@val+2)^(0+128)
 11413     044E  00C3               	movwf	(sprintf@val+3)^(0+128)
 11414     044F                     l4133:
 11415     044F  3002               	movlw	2
 11416     0450  1283               	bcf	3,5	;RP0=0, select bank0
 11417     0451  1303               	bcf	3,6	;RP1=0, select bank0
 11418     0452  00EA               	movwf	??_sprintf
 11419     0453  086A               	movf	??_sprintf,w
 11420     0454  1683               	bsf	3,5	;RP0=1, select bank1
 11421     0455  1303               	bcf	3,6	;RP1=0, select bank1
 11422     0456  07B7               	addwf	sprintf@ap^(0+128),f
 11423     0457                     l4135:
 11424                           
 11425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11426     0457  1FC3               	btfss	(sprintf@val+3)^(0+128),7
 11427     0458  2C5A               	goto	u6331
 11428     0459  2C5B               	goto	u6330
 11429     045A                     u6331:
 11430     045A  2C6A               	goto	l4141
 11431     045B                     u6330:
 11432     045B                     l4137:
 11433                           
 11434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11435     045B  3003               	movlw	3
 11436     045C  04B8               	iorwf	sprintf@flag^(0+128),f
 11437     045D  3000               	movlw	0
 11438     045E  04B9               	iorwf	(sprintf@flag+1)^(0+128),f
 11439     045F                     l4139:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11442     045F  09C0               	comf	sprintf@val^(0+128),f
 11443     0460  09C1               	comf	(sprintf@val+1)^(0+128),f
 11444     0461  09C2               	comf	(sprintf@val+2)^(0+128),f
 11445     0462  09C3               	comf	(sprintf@val+3)^(0+128),f
 11446     0463  0AC0               	incf	sprintf@val^(0+128),f
 11447     0464  1903               	skipnz
 11448     0465  0AC1               	incf	(sprintf@val+1)^(0+128),f
 11449     0466  1903               	skipnz
 11450     0467  0AC2               	incf	(sprintf@val+2)^(0+128),f
 11451     0468  1903               	skipnz
 11452     0469  0AC3               	incf	(sprintf@val+3)^(0+128),f
 11453     046A                     l4141:
 11454                           
 11455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11456     046A  0849               	movf	sprintf@prec^(0+128),w
 11457     046B  044A               	iorwf	(sprintf@prec+1)^(0+128),w
 11458     046C  1D03               	btfss	3,2
 11459     046D  2C6F               	goto	u6341
 11460     046E  2C70               	goto	u6340
 11461     046F                     u6341:
 11462     046F  2C7E               	goto	l4147
 11463     0470                     u6340:
 11464     0470                     l4143:
 11465     0470  0843               	movf	(sprintf@val+3)^(0+128),w
 11466     0471  0442               	iorwf	(sprintf@val+2)^(0+128),w
 11467     0472  0441               	iorwf	(sprintf@val+1)^(0+128),w
 11468     0473  0440               	iorwf	sprintf@val^(0+128),w
 11469     0474  1D03               	skipz
 11470     0475  2C77               	goto	u6351
 11471     0476  2C78               	goto	u6350
 11472     0477                     u6351:
 11473     0477  2C7E               	goto	l4147
 11474     0478                     u6350:
 11475     0478                     l4145:
 11476                           
 11477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11478     0478  3001               	movlw	1
 11479     0479  07C9               	addwf	sprintf@prec^(0+128),f
 11480     047A  1803               	skipnc
 11481     047B  0ACA               	incf	(sprintf@prec+1)^(0+128),f
 11482     047C  3000               	movlw	0
 11483     047D  07CA               	addwf	(sprintf@prec+1)^(0+128),f
 11484     047E                     l4147:
 11485                           
 11486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11487     047E  01CB               	clrf	sprintf@c^(0+128)
 11488     047F  0ACB               	incf	sprintf@c^(0+128),f
 11489     0480                     l4153:
 11490                           
 11491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11492     0480  084B               	movf	sprintf@c^(0+128),w
 11493     0481  1283               	bcf	3,5	;RP0=0, select bank0
 11494     0482  1303               	bcf	3,6	;RP1=0, select bank0
 11495     0483  00EA               	movwf	??_sprintf
 11496     0484  3001               	movlw	1
 11497     0485                     u6365:
 11498     0485  1003               	clrc
 11499     0486  0DEA               	rlf	??_sprintf,f
 11500     0487  3EFF               	addlw	-1
 11501     0488  1D03               	skipz
 11502     0489  2C85               	goto	u6365
 11503     048A  1003               	clrc
 11504     048B  0D6A               	rlf	??_sprintf,w
 11505     048C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11506     048D  0084               	movwf	4
 11507     048E  160A  118A  200A  120A  118A  	fcall	stringdir
 11508     0493  00EB               	movwf	??_sprintf+1
 11509     0494  160A  118A  200A  120A  118A  	fcall	stringdir
 11510     0499  00EC               	movwf	??_sprintf+2
 11511     049A  160A  118A  200A  120A  118A  	fcall	stringdir
 11512     049F  00ED               	movwf	??_sprintf+3
 11513     04A0  160A  118A  200A  120A  118A  	fcall	stringdir
 11514     04A5  00EE               	movwf	??_sprintf+4
 11515     04A6  086E               	movf	??_sprintf+4,w
 11516     04A7  1683               	bsf	3,5	;RP0=1, select bank1
 11517     04A8  1303               	bcf	3,6	;RP1=0, select bank1
 11518     04A9  0243               	subwf	(sprintf@val+3)^(0+128),w
 11519     04AA  1D03               	skipz
 11520     04AB  2CC2               	goto	u6375
 11521     04AC  1283               	bcf	3,5	;RP0=0, select bank0
 11522     04AD  1303               	bcf	3,6	;RP1=0, select bank0
 11523     04AE  086D               	movf	??_sprintf+3,w
 11524     04AF  1683               	bsf	3,5	;RP0=1, select bank1
 11525     04B0  1303               	bcf	3,6	;RP1=0, select bank1
 11526     04B1  0242               	subwf	(sprintf@val+2)^(0+128),w
 11527     04B2  1D03               	skipz
 11528     04B3  2CC2               	goto	u6375
 11529     04B4  1283               	bcf	3,5	;RP0=0, select bank0
 11530     04B5  1303               	bcf	3,6	;RP1=0, select bank0
 11531     04B6  086C               	movf	??_sprintf+2,w
 11532     04B7  1683               	bsf	3,5	;RP0=1, select bank1
 11533     04B8  1303               	bcf	3,6	;RP1=0, select bank1
 11534     04B9  0241               	subwf	(sprintf@val+1)^(0+128),w
 11535     04BA  1D03               	skipz
 11536     04BB  2CC2               	goto	u6375
 11537     04BC  1283               	bcf	3,5	;RP0=0, select bank0
 11538     04BD  1303               	bcf	3,6	;RP1=0, select bank0
 11539     04BE  086B               	movf	??_sprintf+1,w
 11540     04BF  1683               	bsf	3,5	;RP0=1, select bank1
 11541     04C0  1303               	bcf	3,6	;RP1=0, select bank1
 11542     04C1  0240               	subwf	sprintf@val^(0+128),w
 11543     04C2                     u6375:
 11544     04C2  1803               	skipnc
 11545     04C3  2CC5               	goto	u6371
 11546     04C4  2CC6               	goto	u6370
 11547     04C5                     u6371:
 11548     04C5  2CC7               	goto	l4157
 11549     04C6                     u6370:
 11550     04C6  2CD5               	goto	l4159
 11551     04C7                     l4157:
 11552     04C7  3001               	movlw	1
 11553     04C8  1283               	bcf	3,5	;RP0=0, select bank0
 11554     04C9  1303               	bcf	3,6	;RP1=0, select bank0
 11555     04CA  00EA               	movwf	??_sprintf
 11556     04CB  086A               	movf	??_sprintf,w
 11557     04CC  1683               	bsf	3,5	;RP0=1, select bank1
 11558     04CD  1303               	bcf	3,6	;RP1=0, select bank1
 11559     04CE  07CB               	addwf	sprintf@c^(0+128),f
 11560     04CF  300A               	movlw	10
 11561     04D0  064B               	xorwf	sprintf@c^(0+128),w
 11562     04D1  1D03               	btfss	3,2
 11563     04D2  2CD4               	goto	u6381
 11564     04D3  2CD5               	goto	u6380
 11565     04D4                     u6381:
 11566     04D4  2C80               	goto	l4153
 11567     04D5                     u6380:
 11568     04D5                     l4159:
 11569                           
 11570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11571     04D5  084A               	movf	(sprintf@prec+1)^(0+128),w
 11572     04D6  3A80               	xorlw	128
 11573     04D7  3C80               	sublw	128
 11574     04D8  1D03               	skipz
 11575     04D9  2CDC               	goto	u6395
 11576     04DA  0849               	movf	sprintf@prec^(0+128),w
 11577     04DB  024B               	subwf	sprintf@c^(0+128),w
 11578     04DC                     u6395:
 11579     04DC  1803               	skipnc
 11580     04DD  2CDF               	goto	u6391
 11581     04DE  2CE0               	goto	u6390
 11582     04DF                     u6391:
 11583     04DF  2CE1               	goto	l4163
 11584     04E0                     u6390:
 11585     04E0                     l4161:
 11586     04E0  2D05               	goto	l4167
 11587     04E1                     l4163:
 11588     04E1  1683               	bsf	3,5	;RP0=1, select bank1
 11589     04E2  1303               	bcf	3,6	;RP1=0, select bank1
 11590     04E3  084A               	movf	(sprintf@prec+1)^(0+128),w
 11591     04E4  3A80               	xorlw	128
 11592     04E5  1283               	bcf	3,5	;RP0=0, select bank0
 11593     04E6  1303               	bcf	3,6	;RP1=0, select bank0
 11594     04E7  00EA               	movwf	??_sprintf
 11595     04E8  3080               	movlw	128
 11596     04E9  026A               	subwf	??_sprintf,w
 11597     04EA  1D03               	skipz
 11598     04EB  2CF0               	goto	u6405
 11599     04EC  1683               	bsf	3,5	;RP0=1, select bank1
 11600     04ED  1303               	bcf	3,6	;RP1=0, select bank1
 11601     04EE  084B               	movf	sprintf@c^(0+128),w
 11602     04EF  0249               	subwf	sprintf@prec^(0+128),w
 11603     04F0                     u6405:
 11604     04F0  1803               	skipnc
 11605     04F1  2CF3               	goto	u6401
 11606     04F2  2CF4               	goto	u6400
 11607     04F3                     u6401:
 11608     04F3  2D05               	goto	l4167
 11609     04F4                     u6400:
 11610     04F4                     l4165:
 11611                           
 11612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11613     04F4  1683               	bsf	3,5	;RP0=1, select bank1
 11614     04F5  1303               	bcf	3,6	;RP1=0, select bank1
 11615     04F6  084B               	movf	sprintf@c^(0+128),w
 11616     04F7  1283               	bcf	3,5	;RP0=0, select bank0
 11617     04F8  1303               	bcf	3,6	;RP1=0, select bank0
 11618     04F9  00EA               	movwf	??_sprintf
 11619     04FA  01EB               	clrf	??_sprintf+1
 11620     04FB  086A               	movf	??_sprintf,w
 11621     04FC  1683               	bsf	3,5	;RP0=1, select bank1
 11622     04FD  1303               	bcf	3,6	;RP1=0, select bank1
 11623     04FE  00C9               	movwf	sprintf@prec^(0+128)
 11624     04FF  1283               	bcf	3,5	;RP0=0, select bank0
 11625     0500  1303               	bcf	3,6	;RP1=0, select bank0
 11626     0501  086B               	movf	??_sprintf+1,w
 11627     0502  1683               	bsf	3,5	;RP0=1, select bank1
 11628     0503  1303               	bcf	3,6	;RP1=0, select bank1
 11629     0504  00CA               	movwf	(sprintf@prec+1)^(0+128)
 11630     0505                     l4167:
 11631                           
 11632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11633     0505  3003               	movlw	3
 11634     0506  1683               	bsf	3,5	;RP0=1, select bank1
 11635     0507  1303               	bcf	3,6	;RP1=0, select bank1
 11636     0508  0538               	andwf	sprintf@flag^(0+128),w
 11637     0509  1283               	bcf	3,5	;RP0=0, select bank0
 11638     050A  1303               	bcf	3,6	;RP1=0, select bank0
 11639     050B  00EA               	movwf	??_sprintf
 11640     050C  3000               	movlw	0
 11641     050D  1683               	bsf	3,5	;RP0=1, select bank1
 11642     050E  1303               	bcf	3,6	;RP1=0, select bank1
 11643     050F  0539               	andwf	(sprintf@flag+1)^(0+128),w
 11644     0510  1283               	bcf	3,5	;RP0=0, select bank0
 11645     0511  1303               	bcf	3,6	;RP1=0, select bank0
 11646     0512  00EB               	movwf	??_sprintf+1
 11647     0513  086A               	movf	??_sprintf,w
 11648     0514  046B               	iorwf	??_sprintf+1,w
 11649     0515  1903               	btfsc	3,2
 11650     0516  2D18               	goto	u6411
 11651     0517  2D19               	goto	u6410
 11652     0518                     u6411:
 11653     0518  2D86               	goto	l4179
 11654     0519                     u6410:
 11655     0519                     l4169:
 11656                           
 11657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11658     0519  1683               	bsf	3,5	;RP0=1, select bank1
 11659     051A  1303               	bcf	3,6	;RP1=0, select bank1
 11660     051B  0844               	movf	sprintf@sp^(0+128),w
 11661     051C  0084               	movwf	4
 11662     051D  302D               	movlw	45
 11663     051E  1383               	bcf	3,7	;select IRP bank0
 11664     051F  0080               	movwf	0
 11665     0520                     l4171:
 11666     0520  3001               	movlw	1
 11667     0521  1283               	bcf	3,5	;RP0=0, select bank0
 11668     0522  1303               	bcf	3,6	;RP1=0, select bank0
 11669     0523  00EA               	movwf	??_sprintf
 11670     0524  086A               	movf	??_sprintf,w
 11671     0525  1683               	bsf	3,5	;RP0=1, select bank1
 11672     0526  1303               	bcf	3,6	;RP1=0, select bank1
 11673     0527  07C4               	addwf	sprintf@sp^(0+128),f
 11674     0528  2D86               	goto	l4179
 11675     0529                     l4173:
 11676                           
 11677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11678     0529  3000               	movlw	0
 11679     052A  1283               	bcf	3,5	;RP0=0, select bank0
 11680     052B  1303               	bcf	3,6	;RP1=0, select bank0
 11681     052C  00A8               	movwf	___llmod@divisor+3
 11682     052D  3000               	movlw	0
 11683     052E  00A7               	movwf	___llmod@divisor+2
 11684     052F  3000               	movlw	0
 11685     0530  00A6               	movwf	___llmod@divisor+1
 11686     0531  300A               	movlw	10
 11687     0532  00A5               	movwf	___llmod@divisor
 11688     0533  1683               	bsf	3,5	;RP0=1, select bank1
 11689     0534  1303               	bcf	3,6	;RP1=0, select bank1
 11690     0535  0849               	movf	sprintf@prec^(0+128),w
 11691     0536  1283               	bcf	3,5	;RP0=0, select bank0
 11692     0537  1303               	bcf	3,6	;RP1=0, select bank0
 11693     0538  00EA               	movwf	??_sprintf
 11694     0539  3001               	movlw	1
 11695     053A                     u6425:
 11696     053A  1003               	clrc
 11697     053B  0DEA               	rlf	??_sprintf,f
 11698     053C  3EFF               	addlw	-1
 11699     053D  1D03               	skipz
 11700     053E  2D3A               	goto	u6425
 11701     053F  1003               	clrc
 11702     0540  0D6A               	rlf	??_sprintf,w
 11703     0541  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11704     0542  0084               	movwf	4
 11705     0543  160A  118A  200A  120A  118A  	fcall	stringdir
 11706     0548  00F2               	movwf	___lldiv@divisor
 11707     0549  160A  118A  200A  120A  118A  	fcall	stringdir
 11708     054E  00F3               	movwf	___lldiv@divisor+1
 11709     054F  160A  118A  200A  120A  118A  	fcall	stringdir
 11710     0554  00F4               	movwf	___lldiv@divisor+2
 11711     0555  160A  118A  200A  120A  118A  	fcall	stringdir
 11712     055A  00F5               	movwf	___lldiv@divisor+3
 11713     055B  1683               	bsf	3,5	;RP0=1, select bank1
 11714     055C  1303               	bcf	3,6	;RP1=0, select bank1
 11715     055D  0843               	movf	(sprintf@val+3)^(0+128),w
 11716     055E  00F9               	movwf	___lldiv@dividend+3
 11717     055F  0842               	movf	(sprintf@val+2)^(0+128),w
 11718     0560  00F8               	movwf	___lldiv@dividend+2
 11719     0561  0841               	movf	(sprintf@val+1)^(0+128),w
 11720     0562  00F7               	movwf	___lldiv@dividend+1
 11721     0563  0840               	movf	sprintf@val^(0+128),w
 11722     0564  00F6               	movwf	___lldiv@dividend
 11723     0565  160A  158A  2548  120A  118A  	fcall	___lldiv
 11724     056A  0875               	movf	?___lldiv+3,w
 11725     056B  1283               	bcf	3,5	;RP0=0, select bank0
 11726     056C  1303               	bcf	3,6	;RP1=0, select bank0
 11727     056D  00AC               	movwf	___llmod@dividend+3
 11728     056E  0874               	movf	?___lldiv+2,w
 11729     056F  00AB               	movwf	___llmod@dividend+2
 11730     0570  0873               	movf	?___lldiv+1,w
 11731     0571  00AA               	movwf	___llmod@dividend+1
 11732     0572  0872               	movf	?___lldiv,w
 11733     0573  00A9               	movwf	___llmod@dividend
 11734     0574  160A  158A  2433  120A  118A  	fcall	___llmod
 11735     0579  1283               	bcf	3,5	;RP0=0, select bank0
 11736     057A  1303               	bcf	3,6	;RP1=0, select bank0
 11737     057B  0825               	movf	?___llmod,w
 11738     057C  3E30               	addlw	48
 11739     057D  1683               	bsf	3,5	;RP0=1, select bank1
 11740     057E  1303               	bcf	3,6	;RP1=0, select bank1
 11741     057F  00CB               	movwf	sprintf@c^(0+128)
 11742     0580                     l4175:
 11743                           
 11744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11745     0580  0844               	movf	sprintf@sp^(0+128),w
 11746     0581  0084               	movwf	4
 11747     0582  084B               	movf	sprintf@c^(0+128),w
 11748     0583  1383               	bcf	3,7	;select IRP bank0
 11749     0584  0080               	movwf	0
 11750     0585  2D20               	goto	l4171
 11751     0586                     l4179:
 11752                           
 11753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11754     0586  30FF               	movlw	255
 11755     0587  1683               	bsf	3,5	;RP0=1, select bank1
 11756     0588  1303               	bcf	3,6	;RP1=0, select bank1
 11757     0589  07C9               	addwf	sprintf@prec^(0+128),f
 11758     058A  1803               	skipnc
 11759     058B  0ACA               	incf	(sprintf@prec+1)^(0+128),f
 11760     058C  30FF               	movlw	255
 11761     058D  07CA               	addwf	(sprintf@prec+1)^(0+128),f
 11762     058E  0A49               	incf	sprintf@prec^(0+128),w
 11763     058F  1D03               	skipz
 11764     0590  2D95               	goto	u6431
 11765     0591  0A4A               	incf	(sprintf@prec+1)^(0+128),w
 11766     0592  1D03               	btfss	3,2
 11767     0593  2D95               	goto	u6431
 11768     0594  2D96               	goto	u6430
 11769     0595                     u6431:
 11770     0595  2D29               	goto	l4173
 11771     0596                     u6430:
 11772     0596                     l4181:
 11773                           
 11774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11775     0596  3001               	movlw	1
 11776     0597  1683               	bsf	3,5	;RP0=1, select bank1
 11777     0598  1303               	bcf	3,6	;RP1=0, select bank1
 11778     0599  07A8               	addwf	sprintf@f^(0+128),f
 11779     059A  30FF               	movlw	-1
 11780     059B  0728               	addwf	sprintf@f^(0+128),w
 11781     059C  0084               	movwf	4
 11782     059D  160A  118A  200A  120A  118A  	fcall	stringdir
 11783     05A2  00CB               	movwf	sprintf@c^(0+128)
 11784     05A3  084B               	movf	sprintf@c^(0+128),w
 11785     05A4  1D03               	btfss	3,2
 11786     05A5  2DA7               	goto	u6441
 11787     05A6  2DAA               	goto	u6440
 11788     05A7                     u6441:
 11789     05A7  160A  118A  2D68   	goto	l3957
 11790     05AA                     u6440:
 11791     05AA                     l4183:
 11792                           
 11793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11794     05AA  1683               	bsf	3,5	;RP0=1, select bank1
 11795     05AB  1303               	bcf	3,6	;RP1=0, select bank1
 11796     05AC  0844               	movf	sprintf@sp^(0+128),w
 11797     05AD  0084               	movwf	4
 11798     05AE  1383               	bcf	3,7	;select IRP bank0
 11799     05AF  0180               	clrf	0
 11800     05B0                     l432:
 11801     05B0  0008               	return
 11802     05B1                     __end_of_sprintf:

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     48      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    ESCString@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    ESCLCD@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___llmod->___lldiv
    _limpiar->_CMDs
    _cursor->_CMDs
    _configLCD->_CMDs
    _CMDs->_pin
    _ESCString->_ESC
    _ESCLCD->_ESCchar
    _ESCchar->_pin

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40763
                                             44 BANK1      4     4      0
                                _ESC
                             _ESCLCD
                          _ESCString
                            ___flmul
                           ___xxtofl
                               _baud
                             _config
                          _configADC
                          _configLCD
                          _config_rx
                          _config_tx
                             _cursor
                            _limpiar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   33529
                                             74 BANK0      5     5      0
                                              8 BANK1     36    25     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6443
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _limpiar                                              0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _cursor                                               3     2      1     651
                                              6 COMMON     3     2      1
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _config_tx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configLCD                                            2     2      0     279
                                              6 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     279
                                              3 COMMON     3     3      0
                                _pin
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _baud                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCString                                            3     3      0     145
                                              3 COMMON     3     3      0
                                _ESC
 ---------------------------------------------------------------------------------
 (2) _ESC                                                  1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ESCLCD                                               7     5      2     589
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                            _ESCchar
 ---------------------------------------------------------------------------------
 (2) _ESCchar                                              2     2      0     279
                                              3 COMMON     2     2      0
                                _pin
 ---------------------------------------------------------------------------------
 (3) _pin                                                  1     1      0     248
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                               _LEER
 ---------------------------------------------------------------------------------
 (6) _LEER                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESC
   _ESCLCD
     _ESCchar
       _pin
   _ESCString
     _ESC
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _baud
   _config
   _configADC
   _configLCD
     _CMDs
       _pin
   _config_rx
   _config_tx
   _cursor
     _CMDs
   _limpiar
     _CMDs
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)
   _LEER

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     30      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AA      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jul 28 00:30:02 2023

                      pc 0002                       l30 1275                       l22 122A  
                     l31 1280                       l23 12F8                       l40 1305  
                     l32 128B                       l24 1233                       l33 1296  
                     l25 123E                       l34 12A1                       l26 1249  
                     l35 12AC                       l27 1254                       l36 12B7  
                     l28 125F                       l29 126A                       l38 1307  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0078                      l205 1B4C                      l134 1A40  
                    l230 199C                      l224 0805                      l233 19A6  
                    l170 07D8                      l242 1A22                      l171 07DE  
                    l227 19D6                      l411 028F                      l172 07DF  
                    l236 19AE                      l404 024B                      l181 07FB  
                    l173 07E5                      l165 07C7                      l174 07E6  
                    l166 07CA                      l350 07BD                      l175 07EC  
                    l167 07D0                      l176 07ED                      l168 07D1  
                    l184 1A60                      l432 05B0                      l177 07F3  
                    l169 07D7                      l193 1A80                      l178 07F4  
                    l610 1FC2                      l602 1CE1                      l179 07FA  
                    l187 19C6                      l196 1D47                      l436 1A8D  
                    l357 0FFF                      l622 1BB1                      l630 114B  
                    l438 1AA5                      l606 1FFF                      l199 1A04  
                    l623 1BCD                      l631 1164                      l607 1F66  
                    l624 1BE2                      l472 1DAF                      l376 15E3  
                    l617 1FF2                      l627 10DF                      l635 19B9  
                    l805 1555                      l653 1F47                      l806 155F  
                    l646 1E7B                      l654 1EBB                      l742 1B92  
                    l639 1E90                      l903 1189                      l664 1F3A  
                    l752 1B06                      l809 1C32                      l649 1E90  
                    l905 121E                      l657 1F0A                      l763 1363  
                    l923 19E8                      l692 1C88                      l916 11E8  
                    l917 11F4                      l909 11CC                      l589 1E18  
                    l767 13E6                      l871 0C90                      l784 14AF  
                    l776 155F                      l880 1ACC                      l769 13BF  
                    l865 0C0C                      l794 14F5                      l859 0C9C  
                    l788 14D3                      l797 1533                      l878 1ABA  
                    _ESC 19A5                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RE0 0048                      _RD3 0043  
                    _RE1 0049                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      _isr 0806  
                    _pin 07BE                      _num 00D8                      fsr0 0004  
                    indf 0000             ___awmod@sign 0078             ___flmul@aexp 003A  
           ___flmul@bexp 003B             ___flmul@sign 0035             ___flmul@temp 0040  
           ___flmul@prod 003C                     ESC@a 0072                     ?_ESC 0070  
           ___fltol@exp1 005E          __end_of_ESCchar 1A05                     l3001 19DF  
                   l3011 1EA2                     l3003 19E5                     l3101 1FE0  
                   l3021 1EBC                     l3005 19E7                     l3031 1EE3  
                   l3023 1EC2                     l3015 1EAB                     l3201 1E41  
                   l3121 1A9B                     l3113 1A81                     l3041 1F0E  
                   l3033 1EF1                     l3025 1ED1                     l3009 1E91  
                   l4001 165A                     l3203 1E49                     l3131 1D5D  
                   l3123 1AA1                     l3115 1A83                     l3107 1FE7  
                   l3035 1EFB                     l3027 1ED3                     l2411 1AA7  
                   l4011 169F                     l4003 1673                     l3301 122E  
                   l3221 1E70                     l3213 1E57                     l3205 1E4B  
                   l3141 1D97                     l3133 1D6A                     l3117 1A87  
                   l3109 1FF7                     l3061 1F48                     l3037 1EFC  
                   l3029 1EDA                     l2421 1AC8                     l2413 1AA9  
                   l2501 1CA4                     l4101 028B                     l4021 16E5  
                   l4013 16A5                     l4005 1677                     l3311 1263  
                   l3303 1237                     l3151 1B93                     l3223 1E80  
                   l3207 1E4F                     l3215 1E69                     l3143 1D98  
                   l3135 1D6E                     l3127 1D48                     l3119 1A94  
                   l3063 1F53                     l3055 1F2F                     l3047 1F16  
                   l3039 1F04                     l2415 1AB0                     l2511 1CC0  
                   l2503 1CA7                     l4111 02D0                     l4103 02A0  
                   l4031 178C                     l4023 1704                     l4015 16B8  
                   l4007 167B                     l3321 129A                     l3313 126E  
                   l3305 1242                     l3153 1BA9                     l2601 1341  
                   l3225 1E85                     l3145 1DA1                     l3137 1D77  
                   l3129 1D5A                     l3081 1F89                     l3073 1F67  
                   l3057 1F3F                     l3049 1F28                     l2417 1AB4  
                   l2521 1CDD                     l2513 1CC6                     l2505 1CAE  
                   l4113 032B                     l4121 0412                     l4105 02A5  
                   l4041 0038                     l4025 174F                     l4017 16DB  
                   l4009 1694                     l4033 1794                     l4201 0846  
                   l3323 12A5                     l3315 1279                     l3307 124D  
                   l3155 1BC5                     l3171 10FF                     l3163 10C1  
                   l2611 1358                     l2603 1345                     l3139 1D89  
                   l3147 1DA7                     l3091 1FBC                     l3083 1F92  
                   l3075 1F6F                     l3067 1F5C                     l2419 1AC3  
                   l2451 1DBE                     l2443 1DB0                     l2515 1CCD  
                   l2507 1CB2                     l4123 041A                     l4115 036A  
                   l4107 02AA                     l4051 009A                     l4043 005F  
                   l4035 17A3                     l4027 1768                     l4019 16DF  
                   l4131 0434                     l4211 0866                     l4203 084B  
                   l3341 1300                     l3325 12B0                     l3317 1284  
                   l3309 1258                     l3157 1BDF                     l3173 1123  
                   l3165 10D7                     l2701 148D                     l2621 1371  
                   l2613 1359                     l2605 1346                     l3261 1191  
                   l3253 1168                     l3093 1FC6                     l3085 1FA4  
                   l3077 1F80                     l2461 1DD3                     l2453 1DC2  
                   l2445 1DB3                     l2509 1CB6                     l2517 1CD3  
                   l4141 046A                     l4133 044F                     l4125 041F  
                   l4117 03A9                     l4109 02B2                     l4061 0115  
                   l4053 00B8                     l4045 006E                     l4037 17EA  
                   l4029 1771                     l4221 0923                     l4213 086F  
                   l4205 0850                     l3327 12BB                     l3319 128F  
                   l3335 12C4                     l3159 1BE1                     l3175 1127  
                   l3167 10F3                     l3183 19AF                     l2703 1492  
                   l2631 137B                     l2623 1373                     l2607 134B  
                   l2615 135B                     l3247 1BE3                     l3191 1E19  
                   l3271 11B1                     l3255 116D                     l3087 1FB2  
                   l3079 1F82                     l2551 1ACD                     l2471 1DF6  
                   l2463 1DD6                     l2455 1DC7                     l2447 1DB7  
                   l2519 1CD8                     l4143 0470                     l4135 0457  
                   l4127 0427                     l4119 03B7                     l4071 0148  
                   l4063 0144                     l4047 0089                     l4039 001D  
                   l4231 0946                     l4223 092B                     l4215 0878  
                   l4207 0855                     l3337 12F9                     l3329 12C2  
                   l3177 1161                     l3169 10FB                     l3185 19B7  
                   l2721 14DA                     l2713 14C5                     l2705 14A1  
                   l2641 1385                     l2633 137D                     l2625 1375  
                   l2617 1369                     l2609 1350                     l3249 1BE7  
                   l3193 1E24                     l3281 11E2                     l3273 11B5  
                   l3265 119A                     l3257 1171                     l3089 1FB3  
                   l2801 09A4                     l2561 1AE5                     l2553 1AD3  
                   l2481 1E0F                     l2473 1DFC                     l2465 1DDD  
                   l2457 1DCB                     l2449 1DBC                     l4161 04E0  
                   l4153 0480                     l4145 0478                     l4137 045B  
                   l4129 042D                     l4081 01B6                     l4065 0146  
                   l4057 00D7                     l4049 0092                     l4225 0934  
                   l4217 08BE                     l4209 085D                     l3371 1A34  
                   l3363 1A23                     l3347 1306                     l3339 12FD  
                   l3179 1163                     l3187 19B9                     l2731 14E8  
                   l2723 14DC                     l2715 14CE                     l2707 14B7  
                   l2643 1387                     l2635 137F                     l2627 1377  
                   l2619 136D                     l2651 138F                     l3291 1215  
                   l3283 11EC                     l3275 11C3                     l3267 119D  
                   l3259 1181                     l3099 1FCE                     l2811 09BF  
                   l2803 09AC                     l2563 1AEF                     l2555 1AD6  
                   l2483 1E14                     l2475 1DFD                     l2467 1DE1  
                   l2459 1DCD                     l2491 1C8E                     l4171 0520  
                   l4163 04E1                     l4147 047E                     l4139 045F  
                   l4091 025C                     l4083 01BF                     l4075 018F  
                   l4059 00E0                     l4227 093A                     l4219 0904  
                   l3381 1A3F                     l3373 1A35                     l3365 1A2F  
                   l2741 14FF                     l2733 14EC                     l2725 14E1  
                   l2717 14D2                     l2709 14BC                     l2661 13CC  
                   l2653 1390                     l2645 1389                     l2637 1381  
                   l2629 1379                     l2581 1316                     l2573 1308  
                   l3197 1E2D                     l3293 1216                     l3285 11F6  
                   l3277 11D3                     l3269 11AA                     l2901 0C8B  
                   l2821 0A3B                     l2813 09CD                     l2805 09B1  
                   l2565 1AF5                     l2557 1ADD                     l2477 1E04  
                   l2469 1DE5                     l2493 1C93                     l4173 0529  
                   l4165 04F4                     l4157 04C7                     l4093 0264  
                   l4085 01FE                     l4077 019D                     l4181 0596  
                   l4229 0940                     l3383 0801                     l3375 1A38  
                   l3367 1A30                     l3391 199B                     l2751 153D  
                   l2743 150D                     l2735 14F2                     l2719 14D7  
                   l2727 14E3                     l2671 13EA                     l2663 13D0  
                   l2655 13A7                     l2647 138B                     l2639 1383  
                   l2583 131B                     l2591 132B                     l2575 130D  
                   l3199 1E40                     l3287 120C                     l3279 11DE  
                   l2903 0C94                     l2831 0AA7                     l2823 0A57  
                   l2815 09DA                     l2807 09B6                     l2567 1AFC  
                   l2559 1AE1                     l2479 1E0A                     l2495 1C95  
                   l2487 1C89                     l4175 0580                     l4167 0505  
                   l4159 04D5                     l4095 026A                     l4087 023D  
                   l4079 01AF                     l4183 05AA                     l3801 07C3  
                   l3377 1A39                     l3369 1A33                     l3297 1220  
                   l3385 19C7                     l2761 1551                     l2753 1545  
                   l2745 1511                     l2681 1413                     l2729 14E7  
                   l2673 13EF                     l2665 13D1                     l2657 13C3  
                   l2649 138D                     l2593 1333                     l2585 1320  
                   l2577 1311                     l3289 1211                     l2841 0B31  
                   l2833 0AB5                     l2825 0A73                     l2817 09F5  
                   l2569 1B02                     l2497 1C99                     l2489 1C8A  
                   l4169 0519                     l4097 0277                     l4089 0255  
                   l4193 0832                     l3811 07EA                     l3803 07CE  
                   l2907 19A6                     l3379 1A3C                     l3299 1226  
                   l3387 19D3                     l2763 155A                     l2755 154A  
                   l2747 152F                     l2739 14FA                     l2691 1425  
                   l2683 1417                     l2667 13DA                     l2659 13CA  
                   l2595 1336                     l2587 1328                     l2579 1315  
                   l2851 0BC1                     l2843 0B3F                     l2835 0AD2  
                   l2827 0A7C                     l2819 0A11                     l2771 0961  
                   l2499 1C9E                     l4179 0586                     l4099 0286  
                   l4195 0837                     l3813 07F1                     l3805 07D5  
                   l2909 19AC                     l3389 1995                     l2765 155E  
                   l2757 154B                     l2749 1538                     l2693 142E  
                   l2685 141E                     l2677 13F8                     l2669 13DE  
                   l2597 133C                     l2589 1329                     l3901 1C71  
                   l2861 0BE6                     l2853 0BCF                     l2845 0B6A  
                   l2837 0AE9                     l2829 0A8A                     l2781 0978  
                   l2773 0965                     l3821 1B57                     l4293 15FD  
                   l4197 083C                     l3815 07F8                     l3807 07DC  
                   l4295 12CC                     l3911 1CEB                     l2759 154F  
                   l2687 1420                     l2679 140F                     l2695 1433  
                   l2599 133D                     l3903 1C7A                     l2871 0C09  
                   l2855 0BD8                     l2863 0BEC                     l2847 0B90  
                   l2839 0B06                     l2791 098F                     l2783 097A  
                   l2775 0966                     l2767 0958                     l3831 1B7A  
                   l3823 1B5A                     l4199 0841                     l3809 07E3  
                   l3681 1A13                     l3921 1D13                     l3913 1CF1  
                   l2697 1449                     l2689 1424                     l3905 1C80  
                   l2881 0C28                     l2865 0BF0                     l2857 0BDC  
                   l2849 0BB8                     l2793 0990                     l2785 0982  
                   l2777 096B                     l2769 095D                     l3833 1B80  
                   l3825 1B61                     l3817 1B4D                     l2961 0CA6  
                   l3683 1A17                     l3851 1A51                     l3843 1A42  
                   l3931 1D42                     l3923 1D1E                     l3915 1CFF  
                   l2699 1487                     l2891 0C6E                     l2883 0C41  
                   l2875 0C11                     l2867 0BF1                     l2859 0BDD  
                   l2795 0995                     l2787 0987                     l2779 0970  
                   l3835 1B81                     l3827 1B65                     l3819 1B51  
                   l2971 0D9E                     l2963 0CAD                     l3861 19F3  
                   l3677 1A06                     l3853 1A54                     l3845 1A45  
                   l3925 1D23                     l3917 1D03                     l3909 1CE2  
                   l3941 1A71                     l3933 19BA                     l2893 0C78  
                   l2877 0C16                     l2885 0C47                     l2869 0BF5  
                   l2797 099A                     l2789 098B                     l3837 1B88  
                   l3829 1B69                     l2981 0E5A                     l2957 0CA0  
                   l3863 19F6                     l3951 1B28                     l3679 1A08  
                   l3855 1A57                     l3847 1A4B                     l3927 1D31  
                   l3919 1D0D                     l3943 1A77                     l3935 1A62  
                   l2895 0C7A                     l2887 0C54                     l2879 0C24  
                   l2799 09A2                     l3839 1B8E                     l3871 05B4  
                   l2975 0E26                     l2959 0CA4                     l3865 19F9  
                   l3857 19EA                     l3953 1B30                     l3849 1A4E  
                   l3929 1D37                     l3945 1A7A                     l3937 1A67  
                   l2897 0C86                     l2889 0C5F                     l3881 06CF  
                   l3873 05BA                     l2993 0FD3                     l2969 0D97  
                   l3961 1573                     l3867 19FC                     l3859 19ED  
                   l3947 1B07                     l3939 1A6A                     l3891 1C3D  
                   l2899 0C8A                     l2987 0F44                     l2979 0E53  
                   l3971 1593                     l3963 157C                     l3955 1563  
                   l3869 19FF                     l3949 1B0C                     l3893 1C40  
                   l3885 077A                     l2997 19D8                     l2989 0F4B  
                   l3973 1596                     l3981 15DF                     l3965 157E  
                   l3957 1568                     l3799 07BF                     l3895 1C4D  
                   l3879 06C9                     l2999 19D9                     l3991 1621  
                   l3983 15E1                     l3975 15AB                     l3967 158A  
                   l3959 156E                     l3897 1C51                     l3889 1C33  
                   l3993 1627                     l3977 15C6                     l3969 158B  
                   l3899 1C63                     l3995 162B                     l3987 15E7  
                   l3979 15CE                     ?_isr 0070                     l3997 1639  
                   l3989 160B                     l3999 1641                     ?_pin 0070  
                   STR_1 10A0                     STR_2 10AF                     _CMDs 1A41  
                   u3010 1DE5                     u3011 1DE4                     u3005 1DD7  
                   u3030 1DF6                     u3110 1CB6                     u3031 1DF5  
                   u3111 1CB5                     u4000 0BDC                     u3120 1CC0  
                   _LEER 198D                     u4001 0BDB                     u3025 1DE6  
                   u3121 1CBF                     u3105 1CA8                     u3050 1E0A  
                   u3051 1E09                     u3035 1DF2                     u3300 131B  
                   u4100 0C6E                     u4020 0BF0                     u3060 1E0F  
                   u3140 1CD3                     u3301 131A                     u4101 0C6D  
                   u4021 0BEF                     u3061 1E0E                     u3045 1DFE  
                   u3141 1CD2                     u3125 1CBC                     u3310 1320  
                   u4110 0C8A                     u4030 0BF5                     u3230 1AD3  
                   u3150 1CD8                     u3070 1C8E                     u3311 131F  
                   u4111 0C89                     u4031 0BF4                     u4015 0BDF  
                   u3231 1AD2                     u3151 1CD7                     u3135 1CC7  
                   u3071 1C8D                     u4120 19AC                     u3400 13B3  
                   u3320 133C                     u4040 0C09                     u3080 1C99  
                   u4121 19AB                     u3321 133B                     u4105 0C6A  
                   u4041 0C08                     u3081 1C98                     u3410 13C3  
                   u3330 1345                     u4050 0C10                     u3250 1AE5  
                   u3090 1CA4                     u4210 0CA4                     u3411 13C2  
                   u3331 1344                     u4051 0C0F                     u3251 1AE4  
                   u3091 1CA3                     u4211 0CA3                     u3500 1424  
                   u3420 13D0                     u3340 134B                     u5100 11D2  
                   u4060 0C16                     u3260 1AEF                     u4300 0E5A  
                   u4220 0CAD                     u3501 1423                     u3421 13CF  
                   u3341 134A                     u5101 11D1                     u4061 0C15  
                   u3261 1AEE                     u3245 1AD7                     u4301 0E59  
                   u4221 0CAC                     u3350 1350                     u4070 0C28  
                   u3351 134F                     u4071 0C27                     u6000 1A77  
                   u3600 14D7                     u3520 1449                     u3440 13E6  
                   u3360 1369                     u5120 11E2                     u5040 116D  
                   u4400 1EA2                     u4080 0C37                     u3280 1B02  
                   u6001 1A76                     u3601 14D6                     u3521 1448  
                   u3441 13E5                     u3361 1368                     u5121 11E1  
                   u5041 116C                     u4401 1EA1                     u3281 1B01  
                   u3265 1AEB                     u6010 1B16                     u3610 14E1  
                   u3450 13EA                     u3370 136D                     u3290 1315  
                   u5130 11E8                     u5050 1171                     u4410 1EBA  
                   u4090 0C54                     u3611 14E0                     u3531 1460  
                   u3523 1445                     u3515 1427                     u3451 13E9  
                   u3435 13D3                     u3371 136C                     u3291 1314  
                   u5131 11E7                     u5115 11D7                     u5051 1170  
                   u4411 1EB9                     u4091 0C53                     u3275 1AF6  
                   u4315 0E7C                     u4235 0CCF                     u6020 1B3A  
                   u3700 1538                     u3620 14E7                     u3540 1474  
                   u3532 1461                     u3460 13EF                     u3380 13A7  
                   u5140 11EC                     u5060 1191                     u4500 1F2E  
                   u4340 0F4B                     u4260 0D9E                     u6100 1694  
                   u3701 1537                     u3621 14E6                     u3541 1475  
                   u3533 1466                     u3461 13EE                     u3381 13A6  
                   u5141 11EB                     u5061 1190                     u4501 1F2D  
                   u4085 0C32                     u4341 0F4A                     u4325 0EB8  
                   u4261 0D9D                     u4245 0D0B                     u6101 1693  
                   u6030 1B4C                     u3710 153D                     u3630 14EC  
                   u3550 1492                     u3542 147A                     u3534 1467  
                   u3390 13B2                     u5150 1201                     u4430 1EF1  
                   u6110 16DF                     u6031 1B4B                     u3711 153C  
                   u3631 14EB                     u3551 1491                     u3543 147B  
                   u3535 146C                     u3471 1401                     u3391 13B0  
                   u4431 1EF0                     u4095 0C50                     u4335 0F03  
                   u4255 0D56                     u6111 16DE                     u3720 154A  
                   u3640 14F2                     u3560 14B7                     u3536 146D  
                   u3480 1413                     u3472 1408                     u5160 1211  
                   u5080 11B0                     u4600 1FCD                     u4520 1F3F  
                   u3800 099A                     u6120 1768                     u6040 156E  
                   u3721 1549                     u3641 14F1                     u3561 14B6  
                   u3481 1412                     u3473 140F                     u3385 13A3  
                   u5161 1210                     u5081 11AF                     u4601 1FCC  
                   u4521 1F3E                     u4425 1EDC                     u3801 0999  
                   u6121 1767                     u6041 156D                     u3730 154F  
                   u3650 14F9                     u3570 14BC                     u3490 1417  
                   u5170 1215                     u4530 1F53                     u4450 1F0A  
                   u3810 09B1                     u6210 018E                     u6130 178C  
                   u6050 158A                     u3731 154E                     u3651 14F8  
                   u3571 14BB                     u3491 1416                     u5171 1214  
                   u5155 11FC                     u5075 11A2                     u4531 1F52  
                   u4515 1F31                     u4451 1F09                     u4435 1EED  
                   u3811 09B0                     u4355 0F5E                     u4275 0DB1  
                   u6211 018D                     u6131 178B                     u6051 1589  
                   u5180 1304                     u3740 155E                     u3660 14FF  
                   u4700 1D5A                     u4620 1FDF                     u4540 1F65  
                   u4460 1F0E                     u2860 1AB4                     u3820 09B6  
                   u4380 19DF                     u6220 019D                     u6140 17A3  
                   u6060 15DE                     u5181 1303                     u3741 155D  
                   u3661 14FE                     u4701 1D59                     u4621 1FDE  
                   u4541 1F64                     u4461 1F0D                     u4445 1EFD  
                   u2861 1AB3                     u3821 09B5                     u4381 19DE  
                   u4365 0F9A                     u4285 0DED                     u6221 019C  
                   u6205 014D                     u6141 17A2                     u6061 15DD  
                   u3670 1511                     u3590 14D2                     u4630 1FE6  
                   u4470 1F15                     u3750 0965                     u4390 19E5  
                   u6310 0419                     u6230 01AF                     u6150 001D  
                   u6070 1621                     u3671 1510                     u3591 14D1  
                   u5095 11C4                     u4631 1FE5                     u4615 1FCF  
                   u4471 1F14                     u3911 0AF8                     u3831 0A03  
                   u3751 0964                     u4391 19E4                     u4375 0FD6  
                   u4295 0E29                     u6311 0418                     u6231 01AE  
                   u6215 018A                     u6151 17FA                     u6071 161E  
                   u4800 10D7                     u3680 1520                     u4720 1D6E  
                   u4560 1FA4                     u2880 1AC8                     u3912 0AFF  
                   u3832 0A0A                     u3760 096B                     u6400 04F4  
                   u6320 0433                     u6160 0038                     u6080 1627  
                   u4801 10D6                     u3585 14C7                     u4721 1D6D  
                   u4561 1FA3                     u2881 1AC7                     u3921 0B23  
                   u3913 0B06                     u3905 0AD4                     u3841 0A1F  
                   u3833 0A11                     u3761 096A                     u6401 04F3  
                   u6321 0432                     u6305 03BC                     u6161 0037  
                   u6145 179F                     u6081 1626                     u4810 10F3  
                   u3690 152F                     u4650 1FF7                     u4490 1F27  
                   u3922 0B2A                     u3842 0A26                     u3770 0970  
                   u2970 1DB7                     u6410 0519                     u6330 045B  
                   u6250 0254                     u6170 005F                     u6090 165A  
                   u4811 10F2                     u3691 152E                     u4715 1D5F  
                   u4651 1FF6                     u4555 1F8B                     u4491 1F26  
                   u2875 1ABB                     u3931 0B4E                     u3923 0B31  
                   u3851 0A49                     u3843 0A2D                     u3771 096F  
                   u2971 1DB6                     u6411 0518                     u6331 045A  
                   u6251 0253                     u6171 005E                     u6155 17F5  
                   u6091 1659                     u5700 07C3                     u4820 10FF  
                   u4900 1E4F                     u4740 1D89                     u4660 1A87  
                   u4580 1FC2                     u3940 0B76                     u3932 0B55  
                   u3852 0A50                     u3780 098F                     u2980 1DC2  
                   u6340 0470                     u6260 0277                     u6180 006E  
                   _RCIF 0065                     u5701 07C2                     u4821 10FE  
                   u3685 151B                     u4901 1E4E                     u4741 1D88  
                   u4661 1A86                     u4645 1FE9                     u4581 1FC1  
                   u4565 1FA0                     u4485 1F17                     u3933 0B5C  
                   u3861 0A65                     u3853 0A57                     u3781 098E  
                   u2981 1DC1                     u6405 04F0                     u6341 046F  
                   u6261 0276                     u6245 01C4                     u6181 006D  
                   u5710 07CE                     u4910 1E56                     u4590 1FC6  
                   u3862 0A6C                     u3790 0995                     u2990 1DD3  
                   u6430 0596                     u6350 0478                     u6270 0286  
                   u6190 0089                     u5711 07CD                     u4831 110E  
                   u4911 1E55                     u4735 1D70                     u4591 1FC5  
                   u4575 1FB5                     u3951 0B82                     u3863 0A73  
                   u3791 0994                     u2991 1DD2                     u6431 0595  
                   u6351 0477                     u6271 0285                     u6191 0088  
                   u5720 07D5                     u4840 1127                     u4832 110F  
                   u4760 1DA7                     u3960 0B9E                     u3952 0B89  
                   u5800 1B69                     u6440 05AA                     u6280 02A5  
                   u5721 07D4                     u4841 1126                     u4833 1114  
                   u4761 1DA6                     u4745 1D85                     u3953 0B90  
                   u3945 0B71                     u3881 0A99                     u5801 1B68  
                   u6441 05A7                     u6425 053A                     u6281 02A4  
                   u6265 0273                     u6185 006A                     u5730 07DC  
                   u4770 1BA9                     u4834 1115                     u4930 1E68  
                   u4690 1AA1                     u3882 0AA0                     u6370 04C6  
                   u5731 07DB                     u6507 1D15                     u4771 1BA8  
                   u4851 1136                     u4835 111A                     u4931 1E67  
                   u4755 1D99                     u4691 1AA0                     u4675 1A8E  
                   u3971 0BAA                     u3891 0AC4                     u3883 0AA7  
                   u3875 0A75                     u6371 04C5                     u6275 0282  
                   u5740 07E3                     u5660 1A22                     u4780 1BC5  
                   u4860 1161                     u4852 1137                     u4836 111B  
                   u4940 1E6F                     u3972 0BB1                     u3892 0ACB  
                   u5820 1B7A                     u6380 04D5                     u5741 07E2  
                   u5661 1A21                     u6517 1D20                     u4781 1BC4  
                   u4861 1160                     u4853 113C                     u4941 1E6E  
                   u4925 1E58                     u4685 1A95                     u3973 0BB8  
                   u3965 0B99                     u3893 0AD2                     u5821 1B79  
                   u6381 04D4                     u6365 0485                     u5750 07EA  
                   u4790 1BDF                     u4854 113D                     u4870 19B7  
                   u6390 04E0                     u5751 07E9                     u6527 1D2D  
                   u4791 1BDE                     u4855 1142                     u4871 19B6  
                   u5815 1B6A                     u6391 04DF                     u6375 04C2  
                   u6295 0330                     u5760 07F1                     u4856 1143  
                   u4960 1E80                     u4880 1E24                     u5840 1B8E  
                   u5761 07F0                     u6537 1D39                     u4865 115D  
                   u4961 1E7F                     u4881 1E23                     u3985 0BBA  
                   u5841 1B8D                     u5825 1B76                     u5905 06EC  
                   u6457 094E                     u5770 07F8                     u4970 1E85  
                   u4890 1E3B                     u5930 1C3D                     u5850 05BA  
                   u5771 07F7                     u6547 1D44                     u6467 1CE6  
                   u4795 1BDB                     u4971 1E84                     u4955 1E72  
                   u5931 1C3C                     u3995 0BD1                     u5835 1B82  
                   u5915 0739                     u5851 05B9                     u6395 04DC  
                   u5780 1B57                     u6557 1A5B                     u6477 1CF5  
                   u5781 1B56                     u5925 0785                     u5950 1C51  
                   u6567 12FB                     u6487 1D01                     u4895 1E36  
                   u5951 1C50                     u5960 1C63                     u6577 1A01  
                   u6497 1D0B                     u5961 1C62                     u5945 1C42  
                   u5865 05D7                     u5890 06CF                     u5795 1B5B  
                   u5891 06CE                     u5875 0633                     u5980 1C80  
                   u5981 1C7F                     u5965 1C5F                     u5885 0688  
                   u5990 1A67                     u5991 1A66                     u5975 1C72  
                   _TXIF 0064                     _adc0 00DA                     _adc1 00D9  
                   _baud 0801                     _main 0832                     _num1 00D4  
                   _num2 00D0                     btemp 007E                     pin@a 0072  
                   start 000C             _sprintf$1273 00B3                    ??_ESC 0072  
                  ??_isr 0070                    ??_pin 0072                    CMDs@a 0075  
                  ?_CMDs 0070                    ?_LEER 0070                    ?_baud 0070  
          ___fltol@sign1 005D          __end_of___fladd 1560                    ?_main 0070  
        __end_of___awdiv 1E19          __end_of___flneg 19BA          __end_of___awmod 1CE2  
        __end_of___flmul 0C9D          __end_of___flsub 1C33          __end_of___fltol 1E91  
                  _ANSEL 0188          __end_of___lldiv 1DB0          ___awdiv@divisor 0020  
        __end_of___llmod 1C89          __end_of___lwdiv 1B93                    i1l120 082B  
                  i1l123 082B                    i1l245 198D                    i1l248 1994  
        __end_of___lwmod 1B07          ___awdiv@counter 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019          __end_of_dpowers 10A0  
                  _scale 0C9D          __end_of_isdigit 19E9          __end_of_limpiar 19C7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 05B1             __end_of_CMDs 1A61             __end_of_LEER 1995  
        __initialization 000F             __end_of_baud 0806             __end_of_main 0958  
                 ??_CMDs 0073                   ??_LEER 0070                   ??_baud 0072  
                 ??_main 00CC                ??_ESCchar 0073        __end_of_ESCString 1A23  
                 _ADCON1 009F         ___llmod@dividend 0029                   ?_scale 0042  
                 _ADRESH 001E         ___awdiv@dividend 0022                   _ANSELH 0189  
                 _BUFFER 00DB                   _ESCLCD 1B07                   i1l3357 198D  
                 i1l3359 1993                   i1l3691 0813                   i1l3693 0819  
                 i1l3685 0806                   i1l3695 081F                   i1l3687 080C  
                 i1l3697 0825                   i1l3689 080D                   u519_20 1993  
                 u519_21 1992                   u567_20 080C                   u567_21 080B  
                 u568_20 0819                   u568_21 0818                   u569_20 0825  
                 u569_21 0824         __end_of___xxtofl 121F         __end_of__powers_ 1044  
                 ___flge 10C1                   ___fleq 1B93                ??___fladd 005E  
                 ___wmul 1A81                ??___awdiv 0079                ??___flneg 0076  
              ??___awmod 0076                ??___flmul 0030                ??___flsub 007B  
              ??___fltol 0059                ??___lldiv 007A                ??___llmod 002D  
              ??___lwdiv 0078                ??___lwmod 0076                   _config 1A23  
                 _cursor 1A61                   _fround 05B1         ___awdiv@quotient 0026  
        ___awmod@divisor 0072          ___awmod@counter 0077                ??_isdigit 0072  
              ??_limpiar 0076                   saved_w 007E                ??_sprintf 006A  
             ___flge@ff1 0072               ___flge@ff2 0076             ___xxtofl@arg 0022  
           ___xxtofl@exp 0021             ___xxtofl@val 0072               ___fleq@ff1 0072  
             ___fleq@ff2 0076  __end_of__initialization 0019               ___flneg@f1 0072  
             ___fltol@f1 0055           __pcstackCOMMON 0070            __end_of_scale 1000  
             __div_to_l_ 1F48          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0046                  ESCLCD@a 0075                  ESCLCD@i 0020  
        __div_to_l_@quot 0020                  ?_ESCLCD 0075               __pbssBANK1 00D0  
          __div_to_l_@f1 0072            __div_to_l_@f2 0076        __end_of__Umul8_16 1ACD  
             __pmaintext 0832                  ?___flge 0072                  ?___fleq 0072  
                ?___wmul 0072               __pintentry 0004                  ?_config 0070  
                ?_cursor 0076                  ?_fround 0042                ?___xxtofl 0072  
                _ESCchar 19E9               __stringtab 1000        __end_of__npowers_ 1078  
             _scale$1272 0050        __end_of_configADC 1308        __end_of_configLCD 1D48  
      __end_of_config_rx 199D        __end_of_config_tx 19D7                  ___fladd 1308  
                ___awdiv 1DB0                  ___flneg 19AF                  ___awmod 1C89  
                ___flmul 0958                  ___flsub 1BE3                  ___fltol 1E19  
                ___lldiv 1D48                  ___llmod 1C33                  ___lwdiv 1B4D  
                ___lwmod 1ACD                _ANSELbits 0188                  __ptext1 1560  
                __ptext2 0C9D                  __ptext3 1C89                  __ptext4 1DB0  
                __ptext5 19D7                  __ptext6 05B1                  __ptext7 1ACD  
                __ptext8 1B4D                  __ptext9 0958              ?__div_to_l_ 0072  
                _lectura 007B                  _dpowers 1078                  _isdigit 19D7  
             ??___xxtofl 0076                  _limpiar 19BA         ___awmod@dividend 0074  
                _sprintf 1560                  clrloop0 199E     end_of_initialization 0019  
              _ESCString 1A05                  cursor@a 0077                  cursor@b 0076  
                cursor@x 0078          ___lldiv@divisor 0072          ___lldiv@counter 0024  
              _RCSTAbits 0018                  psplit$0 B0034           __tdiv_to_l_@f1 0072  
         __tdiv_to_l_@f2 0076            ??__tdiv_to_l_ 0020              ___fladd@grs 0069  
          ___xxtofl@sign 0020                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087                _TRISEbits 0089               ?_ESCString 0070  
            ___flmul@grs 0036           __end_of_ESCLCD 1B4D                _TXSTAbits 0098  
         __end_of___flge 1165           __end_of___fleq 1BE3           __end_of___wmul 1AA6  
      pnum$text1_split_1 0034              _BAUDCTLbits 0187           __end_of_config 1A41  
         __end_of_cursor 1A81           __end_of_fround 07BE      start_initialization 000F  
            __end_of_ESC 19AF               ESCString@a 0074               ESCString@i 0075  
    __end_of__tdiv_to_l_ 1F48              __end_of_isr 0832              __end_of_pin 07FC  
               ??_ESCLCD 0077          ___llmod@divisor 0025          ___llmod@counter 002E  
               ??___flge 0020                 ??___fleq 0020                 ??___wmul 0076  
              __Umul8_16 1AA6                 ??_config 0072                 ??_cursor 0077  
               ??_fround 0046            sprintf@tmpval 00BC                ___fladd@a 005A  
              ___fladd@b 0056               fround@prec 0055                ___flmul@a 002C  
               ?_ESCchar 0070                ___flmul@b 0028              __pbssCOMMON 007B  
              ___flsub@a 00A0                ___flsub@b 00A4                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0             _isdigit$1090 0072  
               ESCchar@a 0074              ??_ESCString 0073              sprintf@flag 00B8  
            sprintf@eexp 00BA              sprintf@fval 00C5              sprintf@prec 00C9  
       ___lwdiv@dividend 0022                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0072                 ?___awmod 0072                 ?___flmul 0028  
               ?___flsub 00A0                 ?___fltol 0055                 ?___lldiv 0072  
               ?___llmod 0025                __npowers_ 1044               ?__Umul8_16 0072  
               ?___lwdiv 0020                 ?___lwmod 0072                _configADC 121F  
              _configLCD 1CE2                _config_rx 1995                _config_tx 19C7  
              __pstrings 1000              __tdiv_to_l_ 1E91             ??__div_to_l_ 007A  
               ?_isdigit 0070                 ?_limpiar 0070         ___lwdiv@quotient 0025  
               ?_sprintf 00A8        interrupt_function 0004           ___wmul@product 0076  
              clear_ram0 199D                 _PIE1bits 008C                 _PIR1bits 000C  
     __end_of__div_to_l_ 2000               ?_configADC 0070               ?_configLCD 0070  
             ?_config_rx 0070               ?_config_tx 0070               _ADCON0bits 001F  
            __stringbase 100F        ___wmul@multiplier 0072              ??__Umul8_16 0074  
            _fround$1270 0051              _fround$1271 004D       __end_of__stringtab 1010  
             _ANSELHbits 0189               sprintf@val 00C0                 ___xxtofl 1165  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 __ptext10 1AA6  
               __ptext11 1E91                 __ptext20 19AF                 __ptext12 1F48  
               __ptext21 10C1                 __ptext13 1165                 __ptext30 1A23  
               __ptext22 1B93                 __ptext14 1A81                 __ptext31 0801  
               __ptext23 19BA                 __ptext15 1C33                 __ptext32 1A05  
               __ptext24 1A61                 __ptext16 1D48                 __ptext33 19A5  
               __ptext25 19C7                 __ptext17 1E19                 __ptext34 1B07  
               __ptext26 1995                 __ptext18 1BE3                 __ptext35 19E9  
               __ptext27 1CE2                 __ptext19 1308                 __ptext36 07BE  
               __ptext28 1A41                 __ptext37 0806                 __ptext29 121F  
               __ptext38 198D                 __powers_ 1010                pnum$text1 000B  
            ??_configADC 0072              ??_configLCD 0076              ??_config_rx 0072  
            ??_config_tx 0072               _INTCONbits 000B                 isdigit@c 0073  
               scale@scl 0054                 intlevel1 0000                sprintf@ap 00B7  
       __tdiv_to_l_@exp1 0028         __tdiv_to_l_@cntr 0027                sprintf@sp 00C4  
       __tdiv_to_l_@quot 0023         ___lwmod@dividend 0074         ___lldiv@dividend 0076  
              stringcode 100A             ?__tdiv_to_l_ 0072   __Umul8_16@multiplicand 0072  
               sprintf@c 00CB                 sprintf@f 00A8         ___lldiv@quotient 0020  
        ___lwmod@divisor 0072          ___lwmod@counter 0077                 stringdir 100A  
               stringtab 1000            ___fladd@signs 0066             ___fladd@aexp 0067  
           ___fladd@bexp 0068     __Umul8_16@multiplier 007A              configADC@ch 0074  
      __Umul8_16@product 0076  
